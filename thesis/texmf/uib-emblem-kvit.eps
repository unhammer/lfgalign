%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: UiBmerke_hvit.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: Jan K\345re Wilhelmsen%%CreationDate: 26-06-07%%BoundingBox: 0 0 71 71%%HiResBoundingBox: 0 0 70.8663 70.8658%%CropBox: 0 0 70.8663 70.8658%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors: %%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 2006 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFFFFFFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2007-06-26T12:28:17+02:00</xap:CreateDate>
         <xap:ModifyDate>2007-06-26T12:28:17+02:00</xap:ModifyDate>
         <xap:MetadataDate>2007-06-26T12:28:17+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:D9E5055E256C11DCB529E65D2022EF68</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:D9E5055F256C11DCB529E65D2022EF68</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>uuid:8165d2ea-d45a-11da-904d-001451115842</stRef:documentName>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -70.8657 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 70.8657 li70.8662 70.8657 li70.8662 0 licpclp[1 0 0 1 0 0 ] concat6.35059 27.9028 mo5.70996 27.792 4.51758 27.6074 4.17773 27.729 cv4.04102 27.7803 3.93652 27.9541 3.87109 28.209 cv3.80566 28.4624 li3.72266 28.5127 3.5918 28.4683 3.56152 28.3994 cv3.64941 28.0098 3.72656 27.6299 3.7959 27.2266 cv3.87109 26.793 3.90918 26.5117 3.95215 26.1367 cv4.01855 26.0625 4.15039 26.0962 4.2041 26.1582 cv4.18164 26.4106 li4.1582 26.6724 4.2168 26.8843 4.34082 26.9702 cv4.65625 27.1738 5.84473 27.3789 6.42383 27.4785 cv7.5918 27.6812 li8.49023 27.8359 9.41699 28.1455 9.93652 28.8315 cv10.3457 29.3604 10.4814 30.1714 10.3506 30.936 cv10.2266 31.6494 9.96875 32.3389 9.44727 32.77 cv8.89746 33.2393 8.09863 33.3667 6.86816 33.1548 cv4.42969 32.7319 li3.35449 32.5464 3.17578 32.5366 3.02051 33.1274 cv2.95508 33.3823 li2.90234 33.437 2.73047 33.3857 2.70996 33.3193 cv2.82031 32.8057 2.8916 32.4556 2.96289 32.0425 cv3.03613 31.6187 3.08496 31.2754 3.15137 30.7656 cv3.19336 30.71 3.37305 30.7192 3.40332 30.7886 cv3.38184 31.0396 li3.3291 31.6484 3.50098 31.6992 4.57617 31.8853 cv6.80859 32.271 li8.47266 32.5596 9.65723 32.2319 9.93066 30.6504 cv10.1904 29.1519 9.11035 28.3804 7.53906 28.1089 cv6.35059 27.9028 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0 0 0 cmykf12.877 19.5586 mo13.1523 19.7119 14.2412 20.3203 14.4951 20.4258 cv14.54 20.4746 14.5547 20.5557 14.499 20.6563 cv14.2813 20.6792 13.8125 20.7656 12.4609 21.0562 cv8.85645 21.8296 li8.43555 21.918 7.33691 22.1211 7.02734 22.2007 cv7.01758 22.2188 li7.10645 22.3174 7.3125 22.4434 7.58691 22.5972 cv9.58301 23.7129 li10.0137 23.9536 11.208 24.6084 11.5703 24.6064 cv11.7021 24.6084 11.8584 24.4561 12.0049 24.2368 cv12.1914 23.9692 li12.2959 23.9546 12.4004 24.0249 12.4092 24.1143 cv12.1611 24.5171 11.9736 24.8311 11.7842 25.1709 cv11.5693 25.5557 11.4404 25.8076 11.2793 26.1377 cv11.1982 26.1772 11.0645 26.1138 11.04 26.0283 cv11.1514 25.7661 li11.2412 25.54 11.2686 25.3623 11.1934 25.2612 cv10.9346 24.9482 9.8125 24.3335 9.37305 24.0879 cv6.72656 22.6089 li6.4707 22.4658 6.27344 22.3682 5.95508 22.4424 cv5.75586 22.4995 5.56836 22.6826 5.41895 22.8877 cv5.31348 23.0332 li5.22754 23.0566 5.08984 22.9805 5.09473 22.8867 cv5.33691 22.5171 5.6084 22.0327 5.7002 21.8677 cv5.78223 21.7212 5.85938 21.5605 5.9082 21.4312 cv6.47754 21.5088 8.28906 21.1035 8.79688 20.9912 cv10.292 20.6606 li11.3486 20.4224 12.1123 20.2603 12.792 20.0757 cv12.8027 20.0576 li12.7783 19.9951 12.6318 19.9131 12.4385 19.8062 cv10.4795 18.7109 li10.0488 18.4707 8.85352 17.8149 8.48145 17.835 cv8.36816 17.8438 8.23145 17.96 7.98145 18.3008 cv7.87598 18.4463 li7.78516 18.4795 7.64355 18.3882 7.65723 18.2998 cv7.91113 17.8887 8.09375 17.5825 8.28906 17.2349 cv8.50879 16.8413 8.63281 16.5977 8.78809 16.2764 cv8.875 16.2285 9.00293 16.3008 9.02734 16.3857 cv8.97363 16.5244 li8.85547 16.8428 8.82715 17.0669 8.87988 17.1445 cv9.12207 17.4844 10.2676 18.1001 10.6895 18.3359 cv12.877 19.5586 licpf12.8447 14.2349 mo12.0459 13.4629 11.9023 13.354 11.4346 13.7632 cv11.2373 13.937 li11.1641 13.9531 11.042 13.8071 11.0635 13.7402 cv11.4434 13.3774 11.6982 13.1279 12.0049 12.811 cv12.2959 12.5093 12.5352 12.2451 12.8838 11.8535 cv12.9512 11.8296 13.1006 11.9458 13.0879 12.0205 cv12.9209 12.2231 li12.5283 12.7051 12.6426 12.8442 13.4424 13.6162 cv16.1289 16.209 li16.9287 16.981 17.0488 17.0684 17.5322 16.6733 cv17.7373 16.5068 li17.8105 16.4902 17.9316 16.6367 17.9111 16.7036 cv17.5313 17.0669 17.2764 17.3159 16.9854 17.6177 cv16.6787 17.9351 16.4385 18.1987 16.0898 18.5908 cv16.0234 18.6138 15.8887 18.5127 15.8867 18.4233 cv16.0459 18.2134 li16.4229 17.7173 16.332 17.5996 15.5322 16.8276 cv12.8447 14.2349 licpf16.5674 10.1382 mo16.0498 9.76953 15.7998 9.66699 15.3896 9.86279 cv15.2188 9.94629 li15.1221 9.93213 15.0537 9.80225 15.0967 9.71289 cv15.3652 9.56885 15.6543 9.39844 16.0361 9.15771 cv16.4268 8.91211 16.7314 8.70752 17.0928 8.45459 cv17.1768 8.45117 17.2783 8.57324 17.251 8.66553 cv17.1279 8.76709 li16.8193 9.02393 16.7822 9.12207 16.8174 9.19824 cv16.8916 9.27588 17.3447 9.65967 18.0439 10.1611 cv19.1006 10.9331 20.1533 11.6963 21.2334 12.4282 cv21.1396 11.6689 20.9365 10.5205 20.8438 9.92139 cv20.7207 9.15625 20.5059 7.89014 20.417 7.41357 cv20.3701 7.18262 20.3174 7.07959 20.2783 7.01758 cv20.2393 6.95508 20.1055 6.94043 19.7725 7.10059 cv19.6025 7.18311 li19.5059 7.16943 19.4404 7.0249 19.4795 6.9502 cv19.7393 6.81152 20.082 6.60791 20.4189 6.39551 cv20.7119 6.21094 20.9814 6.02881 21.2627 5.82617 cv21.3467 5.82275 21.4365 5.96484 21.4209 6.03711 cv21.165 6.22266 li20.9639 6.37451 20.8975 6.56445 20.8994 6.82373 cv20.9141 7.39746 21.0215 8.33447 21.1924 9.49072 cv21.4014 10.8843 li21.5615 11.9243 21.792 13.2158 21.9385 13.7817 cv21.9229 13.8164 21.8926 13.8472 21.8564 13.8696 cv21.8135 13.8979 21.7627 13.917 21.708 13.9268 cv21.374 13.6157 20.9404 13.2813 20.5557 13.0039 cv16.5674 10.1382 licpf25.3301 6.07324 mo25.0332 5.02393 24.9688 4.87793 24.3545 4.97559 cv24.1875 5.00146 li24.1152 4.97803 24.084 4.79053 24.1357 4.74365 cv24.5762 4.64063 24.9219 4.55371 25.335 4.43701 cv27.2324 3.90039 li27.8789 3.71777 28.4736 3.5498 28.5859 3.48486 cv28.6953 3.63965 28.9609 4.34863 29.127 4.78174 cv29.1045 4.85352 28.9482 4.91943 28.8809 4.87305 cv28.5957 4.44141 28.4043 4.11426 27.8428 4.13086 cv27.6172 4.14063 27.291 4.22168 26.8477 4.34766 cv26.1201 4.55322 li25.8174 4.63818 25.8232 4.6582 25.9316 5.04199 cv26.502 7.06055 li26.582 7.34326 26.6123 7.33447 26.916 7.24854 cv27.501 7.08398 li27.9238 6.96338 28.2314 6.85498 28.3408 6.78027 cv28.4512 6.70557 28.5049 6.62549 28.4834 6.3584 cv28.4473 5.92188 li28.4805 5.84717 28.6523 5.79883 28.7129 5.85791 cv28.7813 6.1001 28.8516 6.50488 28.9609 6.88867 cv29.0635 7.25195 29.2129 7.62402 29.2754 7.84619 cv29.2539 7.92822 29.083 7.97656 29.0156 7.93066 cv28.8125 7.5625 li28.7217 7.39209 28.6074 7.26074 28.3916 7.26709 cv28.2393 7.26709 27.9941 7.32568 27.5996 7.43701 cv27.0146 7.60254 li26.7129 7.6875 26.6855 7.70654 26.7588 7.96875 cv27.1611 9.3916 li27.3125 9.92676 27.4395 10.2612 27.6504 10.3877 cv27.8047 10.4746 28.0488 10.5249 28.9365 10.2744 cv29.7129 10.0547 29.9951 9.93115 30.1855 9.75732 cv30.3389 9.60498 30.5117 9.17529 30.625 8.57617 cv30.6816 8.50586 30.832 8.49561 30.8984 8.5752 cv30.9277 8.94824 30.8945 9.79688 30.8398 10.1064 cv29.9258 10.3428 29.0254 10.5869 28.127 10.8413 cv27.2188 11.0977 li26.7852 11.2207 26.4443 11.3276 25.8555 11.5161 cv25.7852 11.5029 25.7197 11.3477 25.7637 11.2695 cv26.0879 11.145 li26.6484 10.9316 26.6563 10.7661 26.3574 9.70703 cv25.3301 6.07324 licpf34.4512 5.94141 mo34.4492 6.13037 34.4492 6.24609 34.4805 6.2876 cv34.5117 6.31982 34.668 6.3418 35.2031 6.34473 cv35.5801 6.34766 35.9785 6.30859 36.2852 6.0791 cv36.5693 5.86133 36.8135 5.49561 36.8184 4.78223 cv36.8242 3.9541 36.3145 3.16406 35.1504 3.15625 cv34.5 3.15186 34.4688 3.19336 34.4668 3.48779 cv34.4512 5.94141 licp33.5996 4.43652 mo33.6074 3.43994 33.5762 3.26172 33.1465 3.20605 cv32.8125 3.16211 li32.7383 3.10889 32.7402 2.94092 32.8242 2.8999 cv33.4121 2.85107 34.1357 2.82422 35.1641 2.83154 cv35.8145 2.83594 36.4316 2.89209 36.9121 3.15723 cv37.415 3.42285 37.7783 3.89746 37.7734 4.63184 cv37.7676 5.62793 36.9766 6.16797 36.4502 6.37402 cv36.3984 6.43701 36.4502 6.54199 36.502 6.62646 cv37.332 7.98486 37.8818 8.82715 38.5918 9.43018 cv38.7695 9.58838 39.0293 9.70557 39.3125 9.72852 cv39.3652 9.75 39.375 9.8335 39.3223 9.87549 cv39.2275 9.90576 39.0605 9.92578 38.8613 9.9248 cv37.9697 9.91895 37.4365 9.65332 36.6973 8.58936 cv36.4287 8.19922 36.002 7.47266 35.6816 6.99854 cv35.5254 6.76709 35.3574 6.66113 34.9395 6.6582 cv34.4668 6.65527 34.4453 6.66504 34.4453 6.88574 cv34.4355 8.20703 li34.4287 9.30762 34.4492 9.43408 35.0566 9.52246 cv35.2764 9.55518 li35.3389 9.60791 35.3164 9.78613 35.2539 9.81689 cv34.7813 9.79297 34.4258 9.78027 34.0059 9.77734 cv33.5645 9.7749 33.1875 9.78223 32.6943 9.80029 cv32.6318 9.76807 32.6113 9.61084 32.6758 9.5376 cv32.9375 9.50781 li33.5469 9.43896 33.5684 9.30273 33.5762 8.20166 cv33.5996 4.43652 licpf42.9102 11.0688 mo42.0684 10.8037 41.6211 10.376 41.4668 10.2061 cv41.415 9.94824 41.5098 9.19727 41.6377 8.7207 cv41.709 8.6665 41.8672 8.69385 41.8887 8.7666 cv41.876 9.32422 41.9766 10.4336 43.1367 10.7998 cv43.9766 11.0649 44.5605 10.644 44.751 10.0444 cv44.8887 9.60449 44.9531 9.08594 44.373 8.38477 cv43.6172 7.46484 li43.2217 6.97705 42.8223 6.22412 43.082 5.40381 cv43.3809 4.45361 44.3652 3.91699 45.6641 4.32813 cv45.9756 4.42578 46.3164 4.59961 46.5547 4.75146 cv46.6709 4.83301 46.8047 4.89648 46.8848 4.92236 cv46.8984 5.19092 46.8125 5.7793 46.6797 6.19873 cv46.6211 6.24658 46.4512 6.22559 46.4209 6.1499 cv46.4424 5.62891 46.377 4.89355 45.417 4.59082 cv44.4365 4.28076 44.0215 4.86523 43.876 5.32471 cv43.6934 5.90479 44.04 6.47656 44.3379 6.82373 cv44.9795 7.57617 li45.4873 8.16504 45.9229 8.94092 45.623 9.89063 cv45.2764 10.9912 44.209 11.479 42.9102 11.0688 cvcpf51.2305 8.78076 mo51.8105 7.83301 51.8867 7.67041 51.3857 7.30225 cv51.1729 7.14746 li51.1416 7.07861 51.2578 6.92822 51.3281 6.93506 cv51.7646 7.22656 52.0625 7.42139 52.4385 7.65186 cv52.7959 7.87109 53.1055 8.04834 53.5645 8.30469 cv53.6016 8.36426 53.5195 8.53613 53.4453 8.53906 cv53.2109 8.41992 li52.6553 8.1416 52.543 8.28223 51.9629 9.23047 cv50.0127 12.4141 li49.4326 13.3618 49.373 13.498 49.8633 13.8843 cv50.0703 14.0479 li50.1016 14.1162 49.9854 14.2666 49.915 14.2603 cv49.4785 13.9688 49.1797 13.7734 48.8223 13.5542 cv48.4473 13.3242 48.1367 13.147 47.6797 12.8906 cv47.6416 12.8311 47.7119 12.6772 47.7988 12.6563 cv48.0381 12.7666 li48.6035 13.0273 48.6992 12.9131 49.2793 11.9648 cv51.2305 8.78076 licpf55.6973 17.2544 mo54.8887 18.0024 54.7871 18.1245 55.1621 18.6069 cv55.3662 18.875 li55.3779 18.9492 55.2256 19.0615 55.1602 19.0371 cv54.7695 18.5835 54.5352 18.3149 54.25 18.0068 cv53.9648 17.6987 53.708 17.436 53.2383 16.9575 cv53.2178 16.8901 53.334 16.7539 53.4307 16.7793 cv53.709 17.0352 li54.1543 17.439 54.3047 17.3706 55.1133 16.623 cv58.5566 13.4409 li58.7949 13.2202 58.8027 13.2129 58.5898 12.9819 cv58.1982 12.5586 li57.8926 12.2275 57.4844 11.8179 57.1299 11.7891 cv56.7891 11.7612 56.5488 11.8403 56.2783 11.9341 cv56.1748 11.915 56.1133 11.7715 56.1475 11.6836 cv56.6074 11.4868 57.207 11.1465 57.5645 10.9155 cv57.6016 10.9248 57.7012 11.0176 57.7002 11.062 cv57.4961 11.3359 57.7383 11.583 58.0664 11.9375 cv60.9492 15.0566 li61.334 15.4727 61.4141 15.5273 61.7207 15.458 cv61.7715 15.4824 61.8418 15.5742 61.8262 15.6182 cv61.4316 15.8252 60.7578 16.3481 60.5479 16.5845 cv60.457 16.6108 60.3369 16.48 60.3477 16.3989 cv60.5195 16.1973 60.7539 15.8799 60.7314 15.6865 cv60.6992 15.3882 60.4893 15.0386 60.0986 14.6147 cv59.5928 14.0684 li59.3789 13.8369 59.3789 13.8521 59.125 14.0864 cv55.6973 17.2544 licpf61.1953 22.0356 mo60.9414 22.0635 60.9375 22.0771 61.0625 22.3423 cv61.6162 23.5083 li61.7461 23.7832 61.793 23.7832 62.0078 23.5771 cv63.3096 22.3325 li63.502 22.1484 63.7168 21.9419 63.8037 21.8311 cv63.7949 21.8125 li63.7334 21.8062 63.4609 21.8193 63.127 21.8506 cv61.1953 22.0356 licp61.2422 24.312 mo61.4199 24.1465 61.4297 24.0952 61.2949 23.8105 cv60.6152 22.3804 li60.5039 22.1436 60.4473 22.0996 60.2178 22.1284 cv59.0645 22.2686 li58.5723 22.3291 58.2852 22.3838 58.1797 22.4341 cv58.0664 22.4873 58.0332 22.5615 58.1211 22.7983 cv58.2402 23.1245 li58.2256 23.2129 58.0732 23.2856 57.9961 23.2178 cv57.8965 22.9629 57.7578 22.6685 57.5566 22.2188 cv57.4072 21.9063 57.2266 21.5742 57.0967 21.3228 cv57.1074 21.2476 57.249 21.1572 57.3242 21.1914 cv57.5 21.4907 li57.627 21.709 57.8301 21.8682 58.2344 21.8384 cv58.752 21.8027 59.4941 21.7754 60.7432 21.6699 cv63.7598 21.4224 li64.1641 21.3931 64.3711 21.3643 64.5088 21.2637 cv64.6836 21.46 64.9307 21.54 65.1035 21.5859 cv65.1309 21.6426 65.1426 21.7183 65.0859 21.7681 cv64.7266 22.0898 64.3633 22.4482 64.0137 22.7876 cv60.8203 25.8936 li60.1357 26.5547 60.0527 26.7451 60.1992 27.1753 cv60.292 27.4453 li60.2754 27.5337 60.1152 27.5869 60.0547 27.5576 cv59.8887 27.1597 59.7422 26.8237 59.5391 26.3975 cv59.3242 25.9424 59.1328 25.5913 58.9941 25.3208 cv58.9941 25.228 59.1426 25.1455 59.2207 25.1899 cv59.3809 25.4507 li59.4941 25.6411 59.6133 25.7471 59.708 25.7021 cv59.8125 25.6519 59.9609 25.5244 60.1523 25.3398 cv61.2422 24.312 licpf60.6025 31.4541 mo60.4746 30.5825 60.6621 29.9927 60.7461 29.7783 cv60.957 29.6201 61.6738 29.377 62.1582 29.2842 cv62.2383 29.3247 62.2813 29.4771 62.2266 29.5283 cv61.7197 29.7617 60.7656 30.3384 60.9443 31.541 cv61.0732 32.4131 61.707 32.7534 62.3301 32.6616 cv62.7852 32.5938 63.2813 32.4258 63.6563 31.5957 cv64.1523 30.5156 li64.418 29.9453 64.9209 29.2568 65.7725 29.1309 cv66.7578 28.9844 67.6699 29.6343 67.8691 30.9824 cv67.918 31.3042 67.9102 31.6875 67.8779 31.9673 cv67.8564 32.1094 67.8564 32.2568 67.8691 32.3403 cv67.6338 32.4702 67.0664 32.6499 66.6309 32.7144 cv66.5635 32.6821 66.5078 32.52 66.5625 32.4595 cv67.0391 32.251 67.6719 31.8711 67.5254 30.8755 cv67.375 29.8584 66.668 29.7402 66.1904 29.8105 cv65.5889 29.8999 65.2266 30.4619 65.0449 30.8813 cv64.6494 31.7876 li64.3408 32.502 63.835 33.2344 62.8486 33.3799 cv61.708 33.5488 60.8027 32.8037 60.6025 31.4541 cvcpf8.45703 44.3755 mo8.18066 44.4771 8.16504 44.4946 8.37012 44.9888 cv8.78027 45.9771 9.27637 46.4106 10.2012 46.0688 cv11.165 45.7114 11.2627 44.8579 10.9863 44.1099 cv10.9072 43.895 10.833 43.7544 10.7607 43.6802 cv10.6943 43.5923 10.6299 43.5728 10.4541 43.6372 cv8.45703 44.3755 licp6.17383 45.2202 mo5.82031 45.3521 5.32617 45.5562 5.17871 45.8228 cv5.02148 46.0942 5.08203 46.4077 5.19043 46.7017 cv5.51465 47.5767 6.15625 48.1011 7.13867 47.7368 cv7.91602 47.4497 8.67578 46.7212 8.09668 45.1567 cv7.90039 44.6255 7.82715 44.6079 7.62988 44.6821 cv6.17383 45.2202 licp9.46582 43.0845 mo10.1943 42.8159 10.3662 42.7075 10.2422 42.2505 cv10.1553 41.9243 li10.1846 41.8237 10.3369 41.7798 10.4053 41.8442 cv10.6514 42.356 10.9277 43.0142 11.2656 43.9292 cv11.4951 44.5493 11.6641 45.1567 11.6025 45.6841 cv11.5518 46.1821 11.2783 46.6528 10.6494 46.8872 cv9.94043 47.1489 9.42383 46.8696 8.92969 46.3813 cv8.83203 46.4165 8.83105 46.5083 8.85156 46.6235 cv8.9502 47.1899 8.74902 48.1597 7.69727 48.5493 cv6.55566 48.9712 5.47559 48.4087 4.82031 46.6372 cv4.71484 46.353 4.56543 45.8599 4.41309 45.4468 cv4.25293 45.0142 4.10938 44.686 3.96484 44.3267 cv3.97266 44.2563 4.12305 44.1782 4.2041 44.2163 cv4.29883 44.3813 li4.58008 44.8696 4.69531 44.8501 5.72852 44.4673 cv9.46582 43.0845 licpf12.626 50.3774 mo13.4971 49.7222 13.6104 49.6099 13.2979 49.0718 cv13.2139 48.9253 li13.21 48.8491 13.374 48.7524 13.4365 48.7837 cv13.6904 49.1577 13.8955 49.4497 14.1543 49.7925 cv15.3389 51.3696 li15.7412 51.9067 16.1123 52.4019 16.2139 52.4829 cv16.1084 52.6392 15.542 53.1431 15.1982 53.4546 cv15.123 53.4595 15.0049 53.3384 15.0244 53.2583 cv15.3232 52.8364 15.5615 52.5396 15.3428 52.022 cv15.2529 51.8149 15.0596 51.5396 14.7822 51.1704 cv14.3291 50.5669 li14.1396 50.3149 14.123 50.3286 13.8037 50.5669 cv12.127 51.8267 li11.8916 52.0024 11.9111 52.0278 12.1006 52.2798 cv12.4648 52.7661 li12.7295 53.1187 12.9414 53.3657 13.0498 53.4419 cv13.1602 53.5161 13.2539 53.5376 13.4951 53.4224 cv13.8896 53.231 li13.9717 53.2349 14.0781 53.3774 14.0449 53.4556 cv13.8438 53.606 13.4912 53.8188 13.1729 54.0571 cv12.8701 54.2847 12.5771 54.5571 12.3926 54.6958 cv12.3086 54.7056 12.2021 54.563 12.2197 54.4829 cv12.4912 54.1626 li12.6162 54.0161 12.6982 53.8638 12.6143 53.6646 cv12.5596 53.522 12.417 53.313 12.1709 52.9868 cv11.8066 52.4995 li11.6172 52.2485 11.5908 52.229 11.3721 52.3931 cv10.1885 53.2808 li9.74512 53.6138 9.47852 53.854 9.43652 54.0952 cv9.41113 54.272 9.45117 54.5161 10.0059 55.2554 cv10.4912 55.9009 10.7061 56.1187 10.9375 56.2349 cv11.1348 56.3228 11.5986 56.3286 12.1982 56.2192 cv12.2842 56.2466 12.3467 56.3813 12.2979 56.4731 cv11.96 56.6343 11.1563 56.9097 10.8477 56.9702 cv10.2979 56.2036 9.74512 55.4497 9.18457 54.7036 cv8.61914 53.9487 li8.34766 53.5884 8.125 53.3091 7.73633 52.8267 cv7.72461 52.7583 7.8457 52.6392 7.93359 52.6528 cv8.16699 52.9106 li8.56836 53.3569 8.72559 53.3052 9.60645 52.6431 cv12.626 50.3774 licpf17.5381 57.9282 mo17.4268 58.0815 17.3584 58.1743 17.3584 58.2271 cv17.3662 58.27 17.4795 58.3804 17.9121 58.6978 cv18.2168 58.9204 18.5625 59.1216 18.9443 59.1157 cv19.3027 59.104 19.7139 58.9507 20.1357 58.3755 cv20.626 57.7056 20.6748 56.7681 19.7354 56.0806 cv19.2119 55.6978 19.1611 55.7114 18.9873 55.9478 cv17.5381 57.9282 licp17.7295 56.2104 mo18.3184 55.4067 18.3984 55.2446 18.082 54.9478 cv17.8369 54.7153 li17.8076 54.6294 17.9072 54.4956 18 54.5103 cv18.5049 54.8159 19.1064 55.2173 19.9365 55.8247 cv20.4609 56.2075 20.9297 56.6167 21.1631 57.1138 cv21.415 57.6216 21.4326 58.2192 20.999 58.811 cv20.4111 59.6157 19.4541 59.5913 18.9063 59.4517 cv18.8271 59.4702 18.8076 59.5864 18.7998 59.6841 cv18.6787 61.272 18.6309 62.2769 18.8535 63.1812 cv18.9033 63.4126 19.0479 63.6606 19.2637 63.8462 cv19.2939 63.8931 19.2529 63.9673 19.1855 63.9712 cv19.0908 63.9399 18.9424 63.8579 18.7822 63.7397 cv18.0625 63.2134 17.7861 62.686 17.8105 61.3911 cv17.8203 60.9165 17.9004 60.0786 17.917 59.5063 cv17.9268 59.2271 17.8525 59.0435 17.5146 58.7954 cv17.1338 58.5171 17.1104 58.5122 16.9805 58.6909 cv16.2002 59.7563 li15.5488 60.645 15.4912 60.7603 15.9326 61.186 cv16.0928 61.3423 li16.1123 61.4224 15.9893 61.5532 15.9209 61.5415 cv15.5518 61.2456 15.2705 61.0259 14.9326 60.7788 cv14.5771 60.5181 14.2656 60.3032 13.8555 60.0298 cv13.8232 59.9673 13.8994 59.8267 13.9932 59.8052 cv14.2236 59.9341 li14.7578 60.2349 14.8555 60.1372 15.5049 59.2485 cv17.7295 56.2104 licpf28.3555 66.2603 mo28.2246 66.6597 28.207 66.9185 28.3633 67.0474 cv28.3828 67.0874 28.3633 67.147 28.3135 67.1636 cv28.1943 67.1235 28.002 67.105 27.7969 67.0933 cv27.2227 67.0601 26.4648 66.9438 25.9268 66.7681 cv24.7412 66.3794 23.7637 65.6938 23.25 64.6646 cv22.8477 63.8706 22.7871 62.979 23.0742 62.1021 cv23.3516 61.2554 23.9121 60.4888 24.7461 60.0347 cv25.6426 59.5552 26.7832 59.4106 28.2871 59.9028 cv28.8555 60.0894 29.3477 60.3726 29.5039 60.4673 cv29.6797 60.5688 29.9668 60.7407 30.0928 60.7603 cv29.9844 61.0884 29.875 61.6274 29.7686 62.2544 cv29.7129 62.3247 29.5293 62.2759 29.4902 62.1958 cv29.5635 61.0278 28.9268 60.4438 27.9102 60.1108 cv25.9766 59.4771 24.6787 60.5747 24.1895 62.0698 cv23.5615 63.9839 24.0547 65.812 26.0586 66.4673 cv26.6758 66.6704 27.0879 66.6626 27.252 66.5288 cv27.3252 66.4751 27.4336 66.312 27.5381 65.9927 cv27.6699 65.5952 li27.9434 64.7583 27.9336 64.688 27.3379 64.4165 cv26.916 64.2212 li26.8496 64.1567 26.918 63.98 26.998 63.9731 cv27.2803 64.0874 27.8252 64.2769 28.4131 64.4692 cv28.8018 64.5972 29.1436 64.6978 29.4795 64.7856 cv29.5361 64.8501 29.4971 65.0024 29.4082 65.0396 cv29.2422 65.0063 li28.8066 64.9185 28.7051 65.1948 28.5391 65.7036 cv28.3555 66.2603 licpf33.6572 62.6411 mo33.6602 61.5513 33.6387 61.3931 33.0195 61.3188 cv32.8535 61.2974 li32.79 61.2554 32.8105 61.0659 32.875 61.0356 cv33.3252 61.0571 33.6816 61.0688 34.1113 61.0688 cv36.084 61.0728 li36.7549 61.0747 37.375 61.0747 37.5 61.0444 cv37.5625 61.2231 37.623 61.978 37.665 62.439 cv37.6221 62.5024 37.4551 62.5239 37.4023 62.4604 cv37.2461 61.9663 37.1523 61.6001 36.6074 61.4624 cv36.3867 61.4087 36.0508 61.3979 35.5898 61.397 cv34.834 61.395 li34.5195 61.395 34.5195 61.4165 34.5195 61.8149 cv34.5146 63.9126 li34.5137 64.2056 34.5459 64.2065 34.8613 64.2065 cv35.4688 64.2075 li35.9102 64.2095 36.2344 64.188 36.3594 64.147 cv36.4863 64.105 36.5596 64.0415 36.6123 63.7798 cv36.6973 63.3501 li36.75 63.2876 36.9287 63.2876 36.9707 63.3608 cv36.9688 63.6138 36.9268 64.022 36.9268 64.4204 cv36.9258 64.7983 36.9668 65.1958 36.9668 65.4272 cv36.9238 65.5005 36.7461 65.5005 36.6934 65.436 cv36.5996 65.0278 li36.5586 64.8384 36.4863 64.6821 36.2764 64.6294 cv36.1289 64.5864 35.877 64.5757 35.4688 64.5747 cv34.8594 64.5728 li34.5449 64.5728 34.5137 64.5825 34.5137 64.856 cv34.5098 66.3345 li34.5088 66.8911 34.54 67.2466 34.707 67.4263 cv34.833 67.5513 35.0527 67.6675 35.9766 67.6704 cv36.7832 67.6704 37.0879 67.6304 37.3193 67.5142 cv37.5078 67.4106 37.791 67.0444 38.0645 66.4985 cv38.1387 66.4468 38.2852 66.479 38.3271 66.5728 cv38.2539 66.9399 37.9883 67.7466 37.8535 68.0298 cv36.9082 68.0063 35.9766 67.9946 35.042 67.9927 cv34.0977 67.9907 li33.6475 67.9907 33.291 67.9995 32.6719 68.02 cv32.6094 67.9878 32.5879 67.8198 32.6504 67.7583 cv32.9971 67.7271 li33.5947 67.6763 33.6484 67.5181 33.6504 66.4165 cv33.6572 62.6411 licpf48.001 60.9282 mo47.833 60.4771 47.3594 59.2651 47.3936 58.8501 cv47.4043 58.7554 47.5713 58.604 47.8672 58.438 cv47.998 58.3677 li48.0352 58.2856 47.9834 58.1479 47.8867 58.1274 cv47.5596 58.2729 47.3086 58.3774 46.8848 58.5356 cv46.5117 58.6743 46.1738 58.7886 45.7148 58.938 cv45.6465 58.9966 45.6973 59.1587 45.7871 59.1919 cv45.9609 59.1489 li46.373 59.0513 46.5518 59.0513 46.6436 59.1177 cv46.9395 59.3423 47.4258 60.6167 47.5986 61.0786 cv48.3828 63.1821 li48.459 63.3882 48.5176 63.5454 48.4961 63.6099 cv48.4775 63.6167 li47.8398 63.3169 47.1533 62.9458 46.1914 62.4419 cv44.8398 61.7271 li44.3789 61.4839 42.7373 60.6177 42.3535 60.1899 cv42.2334 60.2583 42.0684 60.3306 41.9121 60.3882 cv41.7354 60.4556 41.2148 60.6489 40.791 60.7729 cv40.7285 60.8423 40.7832 60.9897 40.8633 61.0259 cv41.0371 60.9839 li41.2842 60.9253 41.5449 60.9067 41.7354 60.9927 cv42.0264 61.1411 42.1113 61.3442 42.2148 61.6196 cv43.2734 64.4595 li43.4492 64.9321 43.9053 66.1255 43.9004 66.5317 cv43.8906 66.6567 43.7559 66.7759 43.541 66.8892 cv43.2861 67.0171 li43.25 67.0981 43.3105 67.2329 43.3984 67.2563 cv43.7344 67.1079 43.9961 66.9985 44.4082 66.8462 cv44.7725 66.7095 45.1201 66.5923 45.5703 66.4468 cv45.6211 66.3716 45.5859 66.2505 45.498 66.1929 cv45.1816 66.2778 li44.9297 66.3491 44.7109 66.3638 44.6104 66.2778 cv44.334 66.0454 43.8477 64.771 43.6768 64.3091 cv42.8779 62.1665 li42.7676 61.8716 42.6934 61.6421 42.6885 61.5103 cv42.709 61.5024 li42.9961 61.6411 43.9639 62.1978 44.3428 62.4048 cv47.5898 64.1489 li48.8076 64.8032 49.2207 65.0415 49.4004 65.1646 cv49.5088 65.1235 49.5488 65.0513 49.5469 64.9868 cv49.4238 64.7407 48.9873 63.5718 48.877 63.2778 cv48.001 60.9282 licpf56.2383 60.6978 mo55.5615 61.2622 54.96 61.4106 54.7334 61.4497 cv54.4883 61.353 53.9072 60.8677 53.5742 60.5044 cv53.5684 60.4126 53.6748 60.2964 53.748 60.3179 cv54.2109 60.6274 55.2012 61.1411 56.1348 60.3608 cv56.8096 59.7964 56.7695 59.0767 56.3662 58.5942 cv56.0703 58.2407 55.668 57.9067 54.7646 58.02 cv53.583 58.1587 li52.959 58.231 52.1094 58.1606 51.5566 57.5015 cv50.9189 56.7368 50.9961 55.6187 52.043 54.7446 cv52.292 54.5356 52.6221 54.3423 52.8789 54.2231 cv53.0098 54.1685 53.1367 54.0903 53.2012 54.0376 cv53.4336 54.1685 53.8828 54.5591 54.166 54.8979 cv54.1738 54.9731 54.0654 55.105 53.9863 55.0903 cv53.5586 54.7915 52.9033 54.4497 52.1309 55.0962 cv51.3418 55.7544 51.6094 56.4185 51.9199 56.7896 cv52.3086 57.2563 52.9785 57.27 53.4307 57.2075 cv54.4102 57.0708 li55.1797 56.9614 56.0684 57.0122 56.708 57.7759 cv57.4473 58.6606 57.2832 59.8237 56.2383 60.6978 cvcpf57.3896 51.5513 mo56.4824 50.9067 56.3262 50.8208 55.9238 51.2954 cv55.7559 51.4966 li55.6836 51.5229 55.543 51.397 55.5547 51.3276 cv55.875 50.9126 56.0898 50.6274 56.3447 50.2681 cv56.5889 49.9263 56.7871 49.6304 57.0742 49.1909 cv57.1357 49.1577 57.3027 49.2505 57.3008 49.3257 cv57.1641 49.5513 li56.8486 50.0864 56.9824 50.2075 57.8867 50.8511 cv60.9297 53.0161 li61.8359 53.6606 61.9668 53.729 62.3848 53.2661 cv62.5645 53.0708 li62.6348 53.0454 62.7754 53.1704 62.7656 53.2407 cv62.4434 53.6558 62.2285 53.9399 61.9854 54.2817 cv61.7305 54.6411 61.5313 54.938 61.2441 55.3774 cv61.1826 55.4106 61.0332 55.3306 61.0195 55.2427 cv61.1455 55.0103 li61.4443 54.4634 61.3379 54.3608 60.4316 53.7173 cv57.3896 51.5513 licpf66.0078 47.1313 mo65.6992 47.9546 65.2471 48.3794 65.0703 48.5259 cv64.8086 48.562 64.0645 48.4282 63.5957 48.2749 cv63.5449 48.1997 63.5811 48.0454 63.6543 48.0278 cv64.21 48.0688 65.3242 48.0278 65.751 46.8872 cv66.0605 46.063 65.6719 45.4585 65.083 45.2368 cv64.6504 45.0747 64.1367 44.9829 63.4063 45.5259 cv62.4473 46.231 li61.9395 46.6001 61.1641 46.9604 60.3594 46.6577 cv59.4277 46.3071 58.9434 45.2974 59.4219 44.021 cv59.5371 43.7173 59.7285 43.3853 59.8926 43.1567 cv59.9795 43.0435 60.0508 42.9126 60.0811 42.8335 cv60.3496 42.8345 60.9326 42.9526 61.3447 43.106 cv61.3887 43.1685 61.3594 43.3364 61.2832 43.3638 cv60.7637 43.3149 60.0254 43.3403 59.6719 44.2837 cv59.3105 45.2446 59.8711 45.6909 60.3223 45.8599 cv60.8926 46.0747 61.4814 45.7573 61.8438 45.479 cv62.6289 44.8774 li63.2451 44.4028 64.043 44.0063 64.9756 44.3569 cv66.0566 44.7622 66.4873 45.854 66.0078 47.1313 cvcpf35.4336 69.7993 mo16.4541 69.7993 1.06641 54.4126 1.06641 35.4331 cv1.06641 16.4541 16.4541 1.06934 35.4336 1.06934 cv54.4121 1.06934 69.7969 16.4541 69.7969 35.4331 cv69.7969 54.4126 54.4121 69.7993 35.4336 69.7993 cvcp35.4336 0 mo15.8633 0 0 15.8633 0 35.4331 cv0 55.0024 15.8633 70.8657 35.4336 70.8657 cv55.0029 70.8657 70.8662 55.0024 70.8662 35.4331 cv70.8662 15.8633 55.0029 0 35.4336 0 cvcpf43.7813 52.6187 mo43.0762 53.1567 42.6055 53.9644 42.3047 54.6313 cv42.9551 55.1021 44.4795 55.7886 47.043 56.2271 cv48.1641 55.603 49.0391 55.0386 50.043 54.2573 cv49.1289 54.0259 48.2432 53.5337 47.6875 53.2163 cv46.5566 52.5708 45.1543 51.5679 43.7813 52.6187 cvcpf27.2344 47.9126 mo26.3672 47.6743 25.9004 47.6831 24.6123 48.1021 cv22.3779 48.8286 18.9365 52.6782 18.9365 52.6782 cv19.9697 53.6665 21.0967 54.5591 22.2969 55.3501 cv23.2539 54.1021 25.834 51.2202 28.2041 51.2202 cv29.502 51.2202 30.1719 51.7661 31.2529 52.4263 cv31.3389 52.2915 31.4365 52.1567 31.541 52.0181 cv29.5977 51.0562 27.2344 47.9126 27.2344 47.9126 cvcpf34.7754 51.2847 mo33.7246 51.4224 32.9561 52.3208 32.4463 53.1997 cv34.4473 54.5532 36.2246 56.1528 38.8301 56.9272 cv40.8594 57.5317 41.6377 57.7603 43.708 57.7944 cv44.623 57.4536 45.5059 57.0513 46.3662 56.6099 cv45.0898 56.4556 43.4082 55.8315 41.9648 55.1606 cv39.6211 54.0708 36.917 51.0034 34.7754 51.2847 cvcpf28.666 52.4995 mo25.6914 52.4995 24.5146 54.9868 23.5449 56.1001 cv27.0488 58.1206 31.0977 59.2974 35.4336 59.2974 cv37.7129 59.2974 39.9082 58.9565 41.998 58.3618 cv40.6611 58.2827 39.0371 57.9399 37.5723 57.3638 cv34.3047 56.0747 30.7979 52.4995 28.666 52.4995 cvcpf49.8906 50.4731 mo47.9141 47.9517 46.3535 47.4849 45.5918 47.6763 cv44.8301 47.8667 45.001 48.4429 44.0859 49.5239 cv43.2529 50.5083 41.3447 51.5962 40.9736 51.8638 cv41.2813 52.1899 41.707 52.6763 41.8145 52.7925 cv42.7598 51.9165 43.9668 51.0845 45.1543 51.0845 cv47.2734 51.0845 47.8691 52.7612 50.6699 53.7642 cv51.2676 53.2778 51.8496 52.771 52.3926 52.2212 cv52.3926 52.2212 51.0586 51.9634 49.8906 50.4731 cvcpf45.082 31.2388 mo44.6318 30.8813 44.0781 30.5405 43.7676 30.0308 cv43.6426 29.8975 43.5313 29.7354 43.5938 29.5381 cv43.6602 29.4663 43.7324 29.3809 43.833 29.4307 cv44.0762 29.4688 44.1211 29.7168 44.3848 29.7021 cv44.4766 29.7524 44.4355 29.8906 44.5195 29.9546 cv44.7695 30.1357 45.0352 30.4238 45.2598 30.6216 cv45.3242 30.7549 45.417 30.8647 45.4004 31.0337 cv45.3125 31.1172 45.2422 31.3027 45.082 31.2388 cvcp44.498 31.7197 mo44.3652 32.2749 44.4961 32.8677 44.3916 33.4297 cv44.4141 33.9517 44.2168 34.3877 44.2383 34.9019 cv44.209 35.6953 43.959 36.4072 43.9297 37.2007 cv43.793 37.9771 43.5898 38.7388 43.4551 39.5132 cv43.2471 40.4185 42.9727 41.2974 42.6191 42.147 cv42.5967 42.1646 42.5596 42.1646 42.543 42.1333 cv42.6543 41.2925 42.7949 40.4634 42.9287 39.6274 cv43.1641 38.6011 43.3047 37.5386 43.4922 36.498 cv43.5977 35.707 43.5576 34.8613 43.7383 34.1064 cv43.877 33.1416 43.9219 32.1509 44.083 31.2007 cv44.2305 31.1147 44.3652 31.2769 44.5156 31.2861 cv44.4912 31.4385 44.5313 31.5576 44.498 31.7197 cvcp42.3408 41.2134 mo42.1563 42.1021 42.0469 43.0142 41.7695 43.8677 cv41.7422 44.1646 41.6895 44.4458 41.5391 44.6919 cv41.5068 44.6938 41.4785 44.686 41.4531 44.6655 cv41.4131 44.0083 41.7061 43.479 41.7549 42.8647 cv41.8154 42.3481 41.8223 41.8188 41.9287 41.3237 cv41.9834 40.6274 42.0078 39.9751 42.0781 39.2876 cv42.1484 39.063 42.1787 38.8296 42.2031 38.5796 cv42.1475 38.0435 42.3242 37.5942 42.2852 37.0649 cv42.3594 36.5337 42.4648 35.9927 42.4404 35.4424 cv42.4932 34.4731 42.6777 33.5513 42.6777 32.5532 cv42.7754 32.2725 42.6357 31.8911 42.7559 31.6147 cv42.7168 31.3506 42.7383 31.0718 42.7705 30.8125 cv42.875 30.5669 42.6113 30.0762 43.0176 30.0571 cv43.1641 30.1431 43.334 30.2524 43.4453 30.3765 cv43.46 30.686 43.3652 30.9907 43.3896 31.3242 cv43.3896 31.8438 43.2617 32.3486 43.3076 32.875 cv43.293 33.625 43.2617 34.373 43.1719 35.1021 cv43.0527 35.9692 42.9902 36.855 42.832 37.6978 cv42.7637 38.9106 42.4785 40.0376 42.3408 41.2134 cvcp28.2471 40.8257 mo28.1387 40.2095 28.1396 39.52 28.0176 38.9341 cv27.8594 37.7437 27.8438 36.4668 27.7637 35.2686 cv27.6934 34.9282 27.6504 34.5449 27.6328 34.1685 cv27.5254 33.3916 27.5605 32.582 27.3887 31.8247 cv27.3203 31.3574 27.4746 30.9668 27.6387 30.5859 cv27.748 30.4907 27.9082 30.2881 28.0332 30.4287 cv28.1035 31.2124 28.0508 31.9937 28.1035 32.7915 cv28.1826 33.1392 28.1855 33.4561 28.1953 33.8252 cv28.2715 35.1021 28.3086 36.3237 28.4668 37.5601 cv28.6992 39.27 28.8652 41.0093 29.0234 42.7524 cv29.0947 43.3833 29.2109 43.9937 29.3066 44.6196 cv29.291 44.6489 29.2324 44.689 29.1934 44.6509 cv28.7344 43.4409 28.4453 42.1567 28.2471 40.8257 cvcp27.8848 41.8208 mo27.499 40.5181 27.1348 39.1987 26.9346 37.8052 cv26.7012 36.6406 26.666 35.3857 26.4551 34.2134 cv26.5156 33.668 26.4219 33.1201 26.4063 32.5679 cv26.5293 32.3984 26.7227 32.3008 26.877 32.1675 cv26.916 32.165 26.9463 32.1816 26.9707 32.2178 cv26.9512 33.125 27.1729 33.959 27.1328 34.8589 cv27.2129 35.5142 27.3008 36.2285 27.3828 36.8862 cv27.3584 37.5669 27.5059 38.2407 27.5273 38.9438 cv27.6035 39.6997 27.7754 40.4185 27.8379 41.1899 cv27.8652 41.3999 27.9395 41.5952 27.916 41.8208 cv27.8848 41.8208 licp26.1758 32.4297 mo26.0625 32.4702 26 32.375 25.915 32.3389 cv25.791 32.2056 25.7012 32.0342 25.7568 31.8364 cv25.8174 31.5864 26.127 31.584 26.2188 31.3389 cv26.5684 31.1768 26.7539 30.793 27.041 30.5503 cv27.1855 30.5762 27.3398 30.4048 27.4414 30.5552 cv27.123 31.2432 26.7334 31.8604 26.1758 32.4297 cvcp25.8779 28.5278 mo25.9238 28.2612 25.9902 27.98 26.2578 27.8276 cv26.4004 27.7466 26.5615 27.623 26.7227 27.668 cv26.8906 27.9824 li26.9336 28.4043 26.4824 28.5088 26.2402 28.7354 cv26.1563 28.7446 26.1533 28.8662 26.0684 28.8066 cv25.9453 28.752 25.9121 28.6304 25.8779 28.5278 cvcp27.9902 28.9067 mo28.2578 28.4756 28.6953 28.1899 28.8477 27.7183 cv28.8848 27.6846 28.9336 27.5776 28.9902 27.6611 cv28.9395 28.4854 28.5977 29.2139 28.1113 29.8643 cv27.8779 30.1812 27.502 30.2451 27.1816 30.4048 cv27.0762 30.417 26.9834 30.3193 26.9434 30.231 cv26.8945 30.1333 26.8457 30.0142 26.8799 29.8999 cv27.2793 29.6235 27.7002 29.2949 27.9902 28.9067 cvcp27.6182 29.0518 mo27.499 29.1069 27.374 29.2163 27.252 29.1758 cv27.2217 28.9424 27.1426 28.5898 27.3887 28.4541 cv27.5146 28.3662 27.7031 28.1113 27.8027 28.373 cv27.8467 28.6211 27.8555 28.895 27.6182 29.0518 cvcp28.7871 25.3027 mo28.8379 25.2197 28.9883 25.1836 29.0137 25.3101 cv29.0098 25.6294 28.8809 25.9053 28.7832 26.1797 cv28.5088 26.6035 28.4326 27.1201 28.0371 27.4873 cv27.8281 27.6157 27.6563 27.9063 27.375 27.8706 cv27.2461 27.6465 27.0654 27.4253 27.082 27.1606 cv27.709 26.6367 28.416 26.0103 28.7871 25.3027 cvcp27.1084 25.8721 mo27.2178 25.5127 27.1445 25.084 27.377 24.7739 cv27.5537 24.8218 27.4395 25.0386 27.5039 25.1885 cv27.6035 25.5103 27.6084 25.8936 27.6641 26.2178 cv27.5635 26.3867 27.3682 26.5151 27.1729 26.4893 cv27.0537 26.3271 27.1055 26.0674 27.1084 25.8721 cvcp27.2764 14.7061 mo27.2363 14.4346 27.2979 14.1675 27.3125 13.9033 cv27.3555 13.8696 27.3848 13.8032 27.4375 13.8008 cv27.7227 13.7246 27.6563 14.0581 27.7891 14.1748 cv27.9336 14.4512 28.1543 14.7393 28.4727 14.813 cv29.041 14.8394 29.7031 14.7227 30.2227 14.918 cv30.6641 15.0034 31.0215 15.3467 31.3652 15.6777 cv31.4551 15.6826 31.498 15.5991 31.6035 15.625 cv31.708 15.7656 31.9961 15.8252 31.9199 16.0469 cv32.2461 16.0825 32.3477 16.4517 32.5879 16.6328 cv32.3594 16.8354 33.0645 17.1401 32.5254 17.1021 cv32.1191 16.8804 31.7588 17.209 31.3574 17.2285 cv31.2588 17.2021 31.1387 17.2114 31.0527 17.1309 cv31.0879 17.0474 li31.332 16.8735 31.6006 16.7446 31.9248 16.7207 cv32 16.6733 31.9492 16.5161 32.0947 16.5708 cv32.1484 16.6304 32.2051 16.7402 32.3027 16.7231 cv32.333 16.709 32.3164 16.6709 32.3164 16.6401 cv32.1328 16.5923 32.0889 16.373 31.8906 16.335 cv31.7402 16.3398 31.5723 16.3135 31.4922 16.1587 cv31.4238 15.9038 31.1406 15.7822 30.9336 15.6919 cv30.834 15.6274 30.7188 15.5469 30.5908 15.5967 cv30.5322 15.6489 30.4658 15.7207 30.5215 15.8018 cv30.7129 16.0991 30.9551 16.3706 31.1826 16.6445 cv31.1826 16.6733 li30.9023 16.6592 30.7266 16.3018 30.4395 16.3325 cv30.4023 16.373 30.374 16.4399 30.4131 16.4922 cv30.5254 16.6709 30.7656 16.8901 30.6055 17.0928 cv30.4102 17.1138 30.3125 16.8975 30.2109 16.771 cv30.1875 16.4995 29.9131 16.4258 29.7061 16.3423 cv29.4922 16.2637 29.2617 16.3755 29.0332 16.3301 cv28.834 16.2588 28.6055 16.4351 28.457 16.2495 cv27.7852 16.042 27.3262 15.3823 27.2764 14.7061 cvcp32.3818 14.6343 mo32.6016 14.6416 32.8203 14.644 32.9922 14.7891 cv33.1084 14.8916 33.1445 15.1084 33.334 15.1323 cv33.4043 15.1606 33.4063 15.2441 33.4063 15.2896 cv33.3184 15.3896 33.1963 15.3037 33.0898 15.3154 cv32.8633 15.3228 32.5605 15.0347 32.4336 15.3799 cv32.3701 15.4873 32.3301 15.6704 32.1865 15.6826 cv32.0527 15.5513 31.9648 15.3872 31.998 15.2036 cv32.1367 15.0034 32.1816 14.7749 32.3818 14.6343 cvcp33.7305 15.8467 mo33.7734 15.9517 33.8066 16.1016 33.7734 16.2017 cv33.5508 16.1777 33.2891 16.2231 33.1895 16.4756 cv33.1035 16.6162 33.0703 16.7876 32.9297 16.8994 cv32.8008 16.8281 32.7207 16.6709 32.6631 16.5376 cv32.7852 16.29 32.8613 16.0396 32.9961 15.8086 cv33.0254 15.7705 33.0625 15.73 33.1055 15.7227 cv33.3203 15.7515 33.5059 15.9063 33.7305 15.8467 cvcp34.5215 14.2725 mo34.6709 14.2534 34.793 14.2793 34.8945 14.375 cv35.0332 14.5059 35.0254 14.7104 35.166 14.8438 cv35.1689 14.9321 35.1777 15.0391 35.0898 15.0869 cv34.7354 15.144 34.6777 14.6821 34.3301 14.77 cv34.207 14.9155 33.9844 15.0371 33.9297 15.2344 cv33.8779 15.2822 33.8281 15.3442 33.7588 15.2988 cv33.6797 15.2202 33.6084 15.1392 33.585 15.0347 cv33.7539 14.644 34.0518 14.27 34.5215 14.2725 cvcp34.4912 15.9185 mo34.4551 16.0186 34.3838 16.1182 34.2871 16.1826 cv34.1895 16.1924 34.1338 16.1182 34.0947 16.0444 cv34.0313 15.9707 34.0664 15.8633 34.0547 15.7729 cv34.1934 15.5703 34.2529 15.3062 34.4697 15.187 cv34.7188 15.1777 34.8477 15.4849 35.1113 15.4395 cv35.1973 15.5039 35.1777 15.6182 35.1895 15.7227 cv34.9609 15.9277 34.6318 15.5869 34.4912 15.9185 cvcp35.2402 17.1377 mo35.1113 17.1328 35.168 16.9971 35.1055 16.9307 cv35.0586 16.8711 35.0098 16.7446 34.9121 16.7925 cv34.8105 16.9092 34.7852 17.0757 34.8271 17.2261 cv34.7832 17.2642 li34.625 17.0732 34.5215 16.8423 34.5361 16.5996 cv34.5547 16.4326 34.7012 16.2852 34.8418 16.2041 cv34.9785 16.209 35.0645 16.3281 35.1875 16.3682 cv35.3447 16.583 35.3164 16.8994 35.2402 17.1377 cvcp35.4336 19.124 mo35.6016 19.0244 35.8369 19.2007 35.9648 19.0054 cv36.0098 19.0195 li36.0537 19.2456 36.1953 19.5171 36.0625 19.751 cv36.0566 19.8843 36.1504 19.9937 36.124 20.1104 cv35.9824 20.0864 36.0078 19.9292 35.9238 19.8506 cv35.876 19.7695 35.8457 19.6982 35.7617 19.6626 cv35.5703 19.6914 35.6572 20.1318 35.4141 19.9102 cv35.3496 19.7554 35.5195 19.4863 35.3027 19.4102 cv35.166 19.5625 35.1494 19.7485 35.0498 19.9077 cv34.9756 19.8652 34.8828 19.7793 34.873 19.6743 cv35.2021 19.5532 34.8203 19.1719 35.1807 19.0576 cv35.2754 19.0029 35.3662 19.0674 35.4336 19.124 cvcp35.9609 15.187 mo36.1992 15.0894 36.2695 15.4277 36.4023 15.5586 cv36.4512 15.687 36.6719 15.7539 36.5723 15.9326 cv36.5215 16.0015 36.5039 16.1611 36.3809 16.104 cv36.1963 15.9971 36.0967 15.7109 35.8652 15.8252 cv35.7617 15.9111 35.7061 16.0493 35.5713 16.0752 cv35.4463 15.9731 35.5166 15.7822 35.4893 15.6323 cv35.6445 15.4683 35.7607 15.3442 35.9609 15.187 cvcp35.5254 14.7036 mo35.6875 14.3369 36.1328 14.2773 36.5039 14.2749 cv36.6816 14.4346 36.7402 14.6367 36.8828 14.8057 cv36.9238 14.9321 36.8359 15.0654 36.7861 15.1655 cv36.6816 15.1753 36.623 14.9941 36.5078 14.9463 cv36.3164 14.8608 36.1025 14.7915 35.877 14.8511 cv35.7568 14.8774 35.6719 15.0156 35.5488 14.9751 cv35.4941 14.9082 35.5059 14.7871 35.5254 14.7036 cvcp37.6738 15.3179 mo37.7441 15.3179 37.8115 15.3135 37.8506 15.3799 cv37.8477 15.7373 38.3262 16.1089 37.9121 16.4136 cv37.625 16.3945 37.6914 16.0752 37.5801 15.897 cv37.3613 15.7227 37.2207 16.0586 36.9941 16.042 cv36.8965 16.0586 36.8242 15.9634 36.875 15.873 cv36.9238 15.4775 37.375 15.4321 37.6738 15.3179 cvcp37.3135 14.7251 mo37.3203 14.4604 37.6162 14.4961 37.7793 14.4248 cv38.1201 14.3916 38.4531 14.458 38.6367 14.7632 cv38.6934 14.8823 38.748 14.9844 38.7754 15.1133 cv38.6133 15.23 38.6504 15.4707 38.4727 15.5825 cv38.1973 15.4941 38.2783 15.1348 38.0684 14.9609 cv37.7813 14.7656 37.5195 15.0752 37.2578 15.1582 cv37.1553 15.0249 37.2861 14.8701 37.3135 14.7251 cvcp37.0762 17.0068 mo36.9688 16.9141 36.8828 17.0591 36.793 17.0996 cv36.6611 17.2329 36.6191 17.3687 36.502 17.5093 cv36.4434 17.5332 36.4102 17.4663 36.3867 17.4282 cv36.3857 17.1494 36.4775 16.9043 36.5908 16.6758 cv36.7061 16.5186 36.9414 16.521 37.042 16.3208 cv37.1543 16.2495 37.415 16.1587 37.4297 16.3921 cv37.4355 16.6187 37.5332 16.814 37.6377 16.9902 cv37.6055 17.2021 37.4814 17.3809 37.3965 17.5737 cv37.3535 17.6191 37.2861 17.6665 37.2256 17.645 cv37.2705 17.4092 37.1289 17.2261 37.0762 17.0068 cvcp36.0596 17.3975 mo35.959 17.2856 35.9746 17.0972 35.9629 16.9375 cv35.916 16.9019 35.9014 16.895 35.834 16.9043 cv35.708 17.0137 35.6143 17.1689 35.6416 17.3403 cv35.6045 17.3711 35.5742 17.3735 35.5439 17.3306 cv35.4746 17.0591 35.5342 16.7544 35.6631 16.5088 cv35.7363 16.4233 35.8457 16.3208 35.9609 16.3564 cv36.0986 16.4351 36.1719 16.583 36.2813 16.7021 cv36.2207 16.9375 36.252 17.2261 36.0596 17.3975 cvcp39.3438 15.6133 mo39.5781 15.3516 39.9326 15.3774 40.1934 15.187 cv40.876 14.9941 41.6377 15.2515 42.2148 14.8252 cv42.9473 14.3198 li43.2207 14.3105 43.3496 14.0366 43.5635 13.9224 cv43.6387 13.8984 43.7168 13.9414 43.7256 14.0103 cv43.6523 14.3535 43.4805 14.6582 43.4531 15.0059 cv43.3848 15.5396 42.8066 15.6157 42.4893 15.9209 cv42.2607 16.0732 41.9648 16.0732 41.7119 16.1636 cv41.1211 16.166 40.6006 16.4683 40.2988 16.9473 cv40.3945 17.1045 40.2227 17.207 40.1113 17.271 cv39.9775 17.3569 39.7656 17.333 39.6875 17.4878 cv39.749 17.5522 39.8926 17.5332 39.873 17.6641 cv39.5635 17.9214 39.0439 17.7119 38.7266 17.9478 cv38.6816 17.9858 38.6074 18.0117 38.6016 18.0786 cv38.6865 18.1455 38.873 18.0645 38.8613 18.2144 cv38.6348 18.4336 38.2842 18.3623 38.0234 18.498 cv38.0039 18.5576 38.0723 18.5859 38.1094 18.5933 cv38.2305 18.5957 38.334 18.5098 38.4551 18.5527 cv38.4521 18.667 38.3086 18.6553 38.2422 18.7168 cv37.9824 18.8384 37.6221 18.7505 37.4023 18.9458 cv37.5117 19.0479 37.707 18.998 37.7852 19.1172 cv37.4961 19.2983 37.125 19.2959 36.8457 19.4937 cv36.6211 19.6436 36.9326 20.1558 36.5332 20.0176 cv36.2969 19.8413 36.1963 19.5791 36.1504 19.3076 cv36.2227 19.2007 36.1016 18.9336 36.2988 18.9648 cv36.4902 19.0645 36.4668 19.2769 36.6289 19.3696 cv36.7578 19.3813 36.8203 19.2363 36.8926 19.1577 cv36.7109 18.8481 37.1729 18.8408 37.2949 18.6338 cv37.2559 18.3765 37.5518 18.4121 37.6855 18.3193 cv37.9482 18.2432 38.2266 18.188 38.4727 18.0835 cv38.4707 18.0381 38.4189 18.0479 38.3945 18.0239 cv38.3516 18.0479 38.2969 18.043 38.252 18.043 cv38.2207 18.0215 38.2129 18 38.2197 17.9619 cv38.5039 17.583 39.0049 17.6738 39.4014 17.5332 cv39.375 17.4282 39.2246 17.4258 39.3037 17.2949 cv39.5684 17.0664 40.0645 17.1807 40.1797 16.7686 cv40.1855 16.6851 40.3018 16.5757 40.1885 16.5186 cv40.002 16.6162 39.8477 16.8018 39.6699 16.9141 cv39.5 17.0996 39.293 17.2021 39.0752 17.271 cv39.0957 17.1494 39.168 17.0879 39.2559 16.9927 cv39.6025 16.666 39.8008 16.252 39.9414 15.8398 cv39.9141 15.7563 39.8164 15.7969 39.7656 15.8062 cv39.4492 16.1182 39.0781 16.3257 38.7383 16.5781 cv38.6543 16.5806 38.5801 16.6353 38.4961 16.6021 cv38.4238 16.4277 38.6621 16.3682 38.7285 16.2397 cv38.9561 16.0659 39.123 15.8184 39.3438 15.6133 cvcp42.8398 18.5718 mo42.8193 18.6836 42.7266 18.8242 42.835 18.9268 cv42.96 19.0288 43.1279 19.0767 43.1768 19.2505 cv43.2188 19.3457 43.1992 19.4458 43.0879 19.479 cv42.7461 19.498 42.4551 19.627 42.2383 19.9199 cv42.2393 19.9722 42.2344 20.0342 42.2949 20.0625 cv42.5293 20.0771 42.5293 19.7603 42.7461 19.7246 cv42.9053 19.7412 43.0752 19.584 43.207 19.7246 cv43.1602 19.9077 43.4111 19.9912 43.417 20.1724 cv43.335 20.4771 43.4688 20.8584 43.2949 21.1274 cv42.917 21.1392 42.5938 20.6895 42.209 21.0034 cv41.959 20.9653 41.7441 20.8486 41.4648 20.8823 cv41.2725 20.7344 41.2051 20.4795 41.2412 20.2368 cv41.3115 20.0605 41.5176 20.1152 41.6201 19.9844 cv41.7334 19.9722 41.8711 20.0605 41.9668 19.958 cv41.9238 19.7935 41.6777 19.8696 41.5488 19.8579 cv41.4355 19.9077 41.3184 19.9937 41.1895 19.9673 cv41.0566 19.8867 41.0762 19.7222 41.0947 19.5981 cv41.2695 19.186 41.7461 19.1265 42.1348 19.0386 cv42.1582 19.0146 42.1943 18.9839 42.1787 18.9458 cv41.7393 18.6885 41.3262 19.0244 40.9854 19.248 cv40.9336 19.272 40.8789 19.2266 40.876 19.1768 cv40.9521 18.8862 41.0859 18.5552 41.415 18.4575 cv41.4365 18.4097 41.5117 18.3857 41.4863 18.3262 cv41.3711 18.2451 41.2686 18.355 41.1563 18.3643 cv41.0078 18.5049 40.8232 18.6338 40.6377 18.7217 cv40.6523 18.4785 40.8887 18.2832 40.9883 18.0522 cv40.9707 18.0239 40.9707 17.9927 40.9316 17.9717 cv40.6035 18.1406 40.3867 18.4404 40.0742 18.6382 cv39.9844 18.6719 39.8711 18.6597 39.8027 18.6025 cv39.7461 18.5576 39.7598 18.4766 39.7803 18.4219 cv40.0234 18.1646 40.2402 17.8403 40.3594 17.5117 cv40.5605 16.9473 41.2598 17.0308 41.6318 16.6279 cv41.8154 16.6826 42.0547 16.5615 42.1416 16.7568 cv42.0684 16.8472 41.9648 16.8662 41.8613 16.9067 cv41.6172 17.0947 41.248 17.1831 41.1602 17.5332 cv41.3164 17.6499 41.3828 17.3833 41.5107 17.333 cv41.5977 17.271 41.7021 17.1782 41.8242 17.2261 cv41.9805 17.4023 42.1719 16.9663 42.2715 17.2974 cv42.209 17.457 42.0137 17.5142 41.8809 17.6094 cv41.7344 17.7427 41.5957 17.9355 41.5342 18.1333 cv41.582 18.231 41.6719 18.1382 41.7393 18.1431 cv41.9453 17.9717 42.1416 17.7168 42.4141 17.7236 cv42.7432 17.8784 42.8594 18.231 42.8398 18.5718 cvcp43.3516 22.2446 mo43.3027 22.3301 43.2402 22.2944 43.1719 22.2803 cv43.0303 22.0732 42.7617 21.9683 42.71 21.7207 cv42.668 21.623 42.5488 21.666 42.4883 21.6826 cv42.4746 21.7207 42.4229 21.7441 42.4551 21.7896 cv42.7598 22.1421 42.8125 22.6021 43.1172 22.9565 cv43.1006 23.1904 42.916 23.3545 42.8164 23.5093 cv42.7861 23.5234 42.749 23.5259 42.7188 23.5259 cv42.5547 23.3877 42.5566 23.1782 42.4297 23.021 cv42.4336 22.8779 42.3613 22.7588 42.291 22.6401 cv42.3613 22.2373 42.0293 22.0205 41.877 21.7158 cv41.6758 21.5562 41.4131 21.5562 41.2305 21.332 cv41.2197 21.2515 41.2178 21.168 41.2842 21.1035 cv41.541 20.8418 41.8906 21.1777 42.1816 21.0322 cv42.3125 21.1133 42.4688 20.9941 42.6133 21.0513 cv42.8145 21.1729 43.002 21.3394 43.2422 21.3491 cv43.4043 21.4634 43.4873 21.666 43.4316 21.873 cv43.4053 21.9946 43.3408 22.1089 43.3516 22.2446 cvcp43.7383 26.1201 mo43.6172 26.1699 43.457 26.1221 43.3506 26.0483 cv42.9355 25.8652 43.1123 25.4053 43.0332 25.0693 cv43.0098 24.8052 42.9629 24.4883 43.1074 24.2739 cv43.1758 24.2549 43.2227 24.3384 43.2539 24.374 cv43.46 24.9336 43.7637 25.4551 43.7383 26.1201 cvcp41.4453 27.0107 mo41.4668 26.9561 41.543 26.9751 41.5723 26.9893 cv41.791 27.1563 41.8809 27.4038 42.0527 27.6016 cv42.4316 27.8872 42.7773 28.3159 43.2344 28.4448 cv43.377 28.6377 43.6104 28.5996 43.7803 28.7305 cv43.7471 28.9141 43.6465 29.0972 43.46 29.1567 cv42.9082 29.1807 42.5801 28.7827 42.2061 28.4063 cv41.7871 28.0181 41.6113 27.5181 41.4453 27.0107 cvcp41.1006 36.7979 mo40.4854 36.9146 39.9102 36.6455 39.502 36.188 cv39.3125 35.8833 39.1211 35.5811 39.0713 35.2114 cv39.1084 35.1567 39.1758 35.126 39.2305 35.1592 cv39.5479 35.4521 39.9053 35.7212 40.293 35.8618 cv40.3516 35.7856 li40.4219 35.8213 40.4551 35.9404 40.5449 35.8926 cv40.5449 35.8477 40.6338 35.8286 40.5791 35.793 cv40.0977 35.3926 39.7969 34.916 39.6523 34.3613 cv39.625 34.2563 39.7461 34.2539 39.8164 34.2803 cv40.3242 34.5898 40.8262 34.9473 41.2998 35.3545 cv41.4824 35.6211 41.7178 35.9189 41.5684 36.2788 cv41.5313 36.5215 41.3555 36.7456 41.1006 36.7979 cvcp42.2344 46.9087 mo42.1689 46.9634 42.0967 47.0493 42.0039 46.9995 cv41.7188 46.856 41.4824 47.0825 41.2051 47.0825 cv41.1074 46.8589 41.0313 46.6138 41.0527 46.356 cv41.2227 46.1704 41.4219 46.0356 41.583 45.856 cv41.5889 45.8032 41.5723 45.7427 41.5117 45.7368 cv41.3066 45.6899 41.0713 46.1274 40.9248 45.8159 cv40.8027 45.5708 40.6816 45.3228 40.6279 45.0376 cv40.8125 44.897 40.9922 45.0796 41.1602 45.1353 cv41.4492 45.2114 li41.9766 45.3149 41.9775 45.8755 42.2148 46.2231 cv42.2217 46.4497 42.5156 46.728 42.2344 46.9087 cvcp41.2793 47.6021 mo41.2246 47.5669 41.2461 47.4731 41.2598 47.4263 cv41.4473 47.1353 41.8027 47.3657 42.0703 47.2622 cv42.1172 47.2876 li42.1719 47.6118 41.8301 47.8188 41.7637 48.1167 cv41.7119 48.1929 41.6855 48.269 41.6738 48.3599 cv41.5127 48.562 41.375 48.7622 41.1602 48.9126 cv41.0615 48.9146 li41.1162 48.4771 41.4824 48.1099 41.2793 47.6021 cvcp31.877 47.8169 mo32.082 47.8384 32.3242 47.8384 32.4297 48.0493 cv32.4063 48.2905 32.2813 48.4829 32.3203 48.7388 cv32.3672 49.0024 32.3516 49.2915 32.501 49.5054 cv32.5059 49.603 li32.3154 49.5864 32.1504 49.4106 31.9961 49.2622 cv31.708 48.9771 31.4023 48.6694 31.4219 48.2603 cv31.4912 48.0552 31.7051 47.9263 31.877 47.8169 cvcp29.8975 47.6118 mo30.0986 47.5308 30.334 47.5239 30.5391 47.5923 cv30.5098 47.8354 30.4316 48.0649 30.4492 48.3286 cv30.4873 48.6294 30.627 48.9438 30.9395 49.063 cv30.9395 49.0786 li30.7148 49.1294 30.5361 48.9556 30.3369 48.8931 cv30.0752 48.7271 30.0352 48.4312 29.9141 48.186 cv29.9023 47.9976 29.6992 47.7759 29.8975 47.6118 cvcp29.3965 46.6235 mo29.4219 46.2212 29.4492 45.8208 29.7188 45.5103 cv29.7266 45.2993 29.9619 45.2817 30.0859 45.1655 cv30.2891 45.1685 30.5352 44.9946 30.6992 45.1626 cv30.7031 45.3062 30.9014 45.3823 30.8379 45.5444 cv30.7324 45.7817 30.6016 45.9585 30.3867 46.1177 cv30.2813 46.1353 30.1191 46.0112 30.0713 46.1704 cv30.1172 46.4438 30.4824 46.2661 30.5566 46.4966 cv30.5635 46.7329 30.6641 46.9946 30.5635 47.2163 cv30.3438 47.2378 30.0352 47.2466 29.8203 47.3657 cv29.7148 47.4302 29.6113 47.5161 29.4824 47.4829 cv29.2568 47.2856 29.3359 46.897 29.3965 46.6235 cvcp29.6689 38.0728 mo30 38.0083 li30.0381 38.022 30.0684 38.0366 30.0986 38.0728 cv30.1875 38.9556 30.2148 39.8853 30.3408 40.7954 cv30.375 41.4517 30.459 42.0308 30.5254 42.6812 cv30.584 43.1099 30.5527 43.5864 30.7373 43.9653 cv30.9082 44.3325 30.6357 44.606 30.5078 44.9028 cv30.1758 44.8755 30.4805 44.4751 30.2871 44.313 cv30.002 43.1431 29.6582 42.0024 29.5898 40.7427 cv29.5117 40.1636 29.4639 39.5679 29.4375 38.9702 cv29.332 38.6704 29.4121 38.3442 29.3271 38.0269 cv29.4453 37.9263 29.5469 38.0747 29.6689 38.0728 cvcp30.0645 35.7568 mo30.1143 35.6665 li30.3955 35.4521 30.6582 35.1733 30.8711 34.9258 cv30.916 34.9092 30.9541 34.9307 30.9844 34.9663 cv30.8574 35.4927 30.7373 36.0098 30.4102 36.4502 cv30.3965 36.5122 30.4199 36.5645 30.4746 36.5762 cv30.6777 36.3213 30.8652 36.0283 31.1396 35.8237 cv31.3076 35.6309 31.4053 35.3857 31.6367 35.2642 cv31.7559 35.4282 31.6328 35.6211 31.6309 35.793 cv31.5781 36.5811 31.1855 37.3267 30.4473 37.6528 cv30.1963 37.6528 30.0439 37.8813 29.7773 37.7866 cv29.5713 37.7388 29.3477 37.5698 29.2666 37.3833 cv29.1934 36.7358 29.6318 36.2095 30.0645 35.7568 cvcp29.5254 28.6758 mo29.5547 28.6685 29.5703 28.6924 29.5859 28.7065 cv29.5449 29.895 29.5938 31.0122 29.6758 32.2271 cv29.7539 33.2896 29.7871 34.4233 29.8418 35.4639 cv29.8096 35.6616 29.5938 35.7905 29.5469 35.981 cv29.4297 36.1118 29.3281 36.2813 29.1797 36.3311 cv29.0254 36.0098 29.0977 35.5996 29.0186 35.2471 cv28.958 33.5015 28.7227 31.6958 28.7578 29.8716 cv28.8271 29.6426 28.9941 29.4497 29.0566 29.2212 cv29.209 29.0283 29.4092 28.8638 29.5254 28.6758 cvcp31.4297 18.9458 mo31.9844 18.7695 32.5859 18.9194 33.0049 19.2837 cv33.3613 19.8315 33.498 20.5913 33.252 21.2275 cv33.0918 21.6636 32.7266 22.1279 32.2295 22.1729 cv31.6406 22.4399 31.0352 22.1328 30.5693 21.7539 cv30.2246 21.3774 29.9219 20.8584 30.1416 20.3462 cv30.2578 19.6934 30.7764 19.1172 31.4297 18.9458 cvcp32.7676 17.5308 mo32.2461 17.5234 31.8301 17.793 31.3164 17.75 cv31.2832 17.7046 31.2012 17.7285 31.1855 17.6616 cv31.1602 17.5879 31.2588 17.6069 31.2959 17.5762 cv31.4336 17.3975 31.6777 17.481 31.833 17.3403 cv31.9756 17.3281 32.1436 17.3594 32.2305 17.2305 cv32.5615 17.2046 32.8828 17.2783 33.0859 17.5068 cv33.0869 17.5737 li32.9746 17.6309 32.875 17.543 32.7676 17.5308 cvcp33.4893 18.0693 mo33.4297 18.3262 33.7461 18.3096 33.8867 18.4121 cv33.9326 18.4717 li33.8838 18.5786 33.748 18.5908 33.6484 18.562 cv33.3828 18.4883 33.043 18.5122 32.8047 18.6338 cv32.6758 18.6528 32.5547 18.6338 32.4619 18.5527 cv32.4854 18.3408 32.7695 18.4741 32.9102 18.4121 cv33.0156 18.355 33.127 18.3193 33.2227 18.2358 cv32.9648 17.9858 32.5723 18.2168 32.2471 18.2026 cv32.0371 18.2622 31.7588 18.3311 31.5889 18.1787 cv31.5791 18.1333 31.6309 18.0952 31.668 18.0762 cv31.9883 18.1499 32.1621 17.8882 32.4414 17.8809 cv32.6875 17.7666 32.9775 17.8501 33.2129 17.9023 cv33.2979 17.9761 33.4121 17.981 33.4893 18.0693 cvcp34.3555 17.3999 mo34.2266 17.395 34.2373 17.2427 34.1445 17.1782 cv34.0742 17.1187 34.0117 17.04 33.8994 17.0713 cv33.7588 17.1904 33.7275 17.3809 33.6406 17.5259 cv33.6445 17.6548 li33.4717 17.6831 33.4043 17.4497 33.2871 17.3472 cv33.2178 17.04 33.4385 16.8208 33.6133 16.6045 cv33.8242 16.5898 34.0684 16.6733 34.1943 16.8589 cv34.2617 17.0308 34.4082 17.1709 34.3555 17.3999 cvcp33.7031 18.979 mo33.5078 19.0005 33.2676 19.0435 33.1113 18.8979 cv33.166 18.7217 33.4102 18.7764 33.5527 18.7124 cv33.8301 18.6504 34.0029 18.8647 34.2314 18.917 cv34.2402 18.9409 34.2559 18.9624 34.25 18.9932 cv34.085 19.0601 33.9004 18.9575 33.7031 18.979 cvcp34.418 19.8745 mo34.3926 19.7627 34.4727 19.6079 34.3477 19.5386 cv34.2285 19.5791 34.0859 19.6055 33.9814 19.6484 cv33.9434 19.6387 33.9111 19.5791 33.9023 19.5361 cv33.9082 19.5127 33.916 19.4888 33.9141 19.4507 cv34.1523 19.3008 34.3896 19.1411 34.6504 19.0361 cv34.7012 18.9434 34.833 18.7979 34.9199 18.9458 cv34.8936 19.3242 34.6611 19.627 34.4883 19.9482 cv34.4219 19.9746 34.457 19.896 34.418 19.8745 cvcp36.7949 31.2197 mo36.4531 31.6602 35.9346 32.0078 35.3438 31.9819 cv35.0557 31.9224 34.7578 31.8413 34.5527 31.5889 cv34.5918 31.3389 34.2715 31.2578 34.3242 30.998 cv34.1436 30.498 33.8926 30.0049 33.9883 29.3975 cv33.917 28.7734 34.0488 28.1113 34.2051 27.5254 cv34.2617 27.4321 34.3809 27.0801 34.5234 27.3179 cv34.5254 27.8779 34.3682 28.4424 34.5879 28.9639 cv34.6582 29.002 34.7041 29.0806 34.7949 29.0713 cv34.957 28.9233 34.7832 28.6636 34.9209 28.4946 cv35.0029 28.4375 35.0518 28.5352 35.084 28.5947 cv35.1777 29.1733 35.084 29.8784 35.3643 30.3931 cv35.4199 30.4883 35.5371 30.5693 35.6406 30.5288 cv35.7363 30.4717 35.6904 30.4121 35.6953 30.3242 cv35.3916 29.5381 35.3984 28.4946 35.7148 27.7275 cv35.7754 27.7109 35.7852 27.7563 35.8154 27.7944 cv35.876 28.3208 35.7422 28.8472 35.9219 29.3403 cv36.1475 29.2808 36.124 29.0234 36.1943 28.8564 cv36.3379 28.3066 36.1699 27.7681 36.3428 27.2344 cv36.4043 27.2393 36.3916 27.3154 36.4375 27.3442 cv36.8291 28.5352 37.6348 29.9902 36.7949 31.2197 cvcp39.9844 27.4063 mo39.6826 26.9536 39.4199 26.4868 39.3496 25.9365 cv39.3633 25.8984 39.416 25.8887 39.4473 25.9175 cv39.6826 26.2295 39.9844 26.6963 40.4316 26.6914 cv40.5625 26.5508 40.3691 26.4058 40.334 26.2559 cv40.3076 26.0889 40.1885 25.9199 40.2588 25.7485 cv40.4023 25.7173 40.3994 25.8887 40.5 25.9482 cv40.793 26.1367 41.0947 26.3818 41.165 26.7295 cv41.168 27.0679 41.126 27.4707 40.8545 27.6826 cv40.5518 27.6846 40.2314 27.6182 39.9844 27.4063 cvcp39.7148 27.6182 mo39.8223 27.6753 39.9014 27.8018 40.0098 27.8657 cv40.2256 28.0493 40.4004 28.3232 40.2891 28.6279 cv40.2168 28.7588 40.1992 28.9258 40.0576 29.0137 cv39.7793 29.021 39.5879 28.7021 39.3945 28.5566 cv39.2227 28.373 39.0957 28.1494 39.1631 27.8755 cv39.1904 27.792 39.2734 27.835 39.3203 27.8564 cv39.4883 27.9111 39.6182 28.2183 39.7949 28.0825 cv39.791 27.918 39.6426 27.7778 39.7148 27.6182 cvcp38.5117 30.5835 mo38.1172 30.3003 38.0215 29.8501 37.9023 29.4238 cv37.9141 29.2783 37.8477 29.1069 37.9336 28.9902 cv38.001 28.9736 38.0039 29.0713 38.0518 29.1162 cv38.2852 29.3447 38.416 29.7095 38.7324 29.8594 cv38.793 29.9165 38.7969 30 38.8809 30.0498 cv38.959 30.0952 39.0469 30.0381 39.082 29.9619 cv39.0781 29.8262 38.9531 29.6997 38.8672 29.5811 cv38.7891 29.2593 38.4434 29.0352 38.5283 28.6543 cv38.6689 28.5234 38.7676 28.7925 38.9043 28.8472 cv39.332 28.9951 39.8984 29.2188 39.9688 29.7451 cv39.9902 30.0264 40.0176 30.4097 39.7285 30.6001 cv39.373 30.8076 38.873 30.7622 38.5117 30.5835 cvcp39.668 39.3062 mo39.5898 39.4536 39.4316 39.48 39.2949 39.4468 cv38.7363 39.2583 38.5137 38.6157 38.3545 38.0981 cv38.4893 38.0581 38.5254 38.2603 38.6475 38.3013 cv38.8691 38.356 38.957 38.7749 39.2031 38.6489 cv39.1641 38.3911 38.8945 38.2407 38.8496 37.9937 cv38.8184 37.8892 38.7148 37.7769 38.7725 37.6704 cv38.916 37.6958 38.8711 37.9077 39.0371 37.9341 cv39.3643 38.0083 39.624 38.3247 39.7598 38.6157 cv39.874 38.8462 39.7988 39.1138 39.668 39.3062 cvcp38.7988 42.7573 mo38.834 42.1743 39.0137 41.645 39.0352 41.0571 cv39.0098 40.9663 39.1328 40.8188 39.1621 40.9907 cv39.2695 41.5474 39.1504 42.1499 39.3252 42.6782 cv39.3008 43.0669 39.3965 43.5483 39.0566 43.77 cv38.9141 43.8579 38.8057 43.7153 38.7783 43.603 cv38.6416 43.3052 38.8691 43.0649 38.7988 42.7573 cvcp36.4707 44.7681 mo36.5313 44.2954 36.8438 43.9175 37.0215 43.5024 cv37.3848 43.0317 37.6191 42.5024 37.8066 41.9595 cv37.833 41.8452 37.7383 41.7505 37.8281 41.6567 cv38.0244 41.9517 38.0977 42.3579 38.0566 42.7524 cv38.0723 43.7817 36.9775 44.3052 36.8311 45.27 cv36.7148 45.3726 36.627 45.5259 36.5547 45.6421 cv36.4043 45.4038 36.4844 45.0532 36.4707 44.7681 cvcp36.1465 42.7954 mo36.1787 42.605 36.3262 42.4858 36.4199 42.3403 cv36.5801 41.8882 36.8633 41.4634 37.084 41.0591 cv37.252 40.8257 37.1816 40.5112 37.3027 40.2642 cv37.4385 40.2993 37.4375 40.4868 37.502 40.5923 cv37.5547 41.1255 37.5635 41.6782 37.373 42.1313 cv37.043 42.6909 36.6211 43.2036 36.334 43.7798 cv36.2168 43.8813 36.2363 44.0396 36.1729 44.1704 cv35.9248 43.7524 35.9619 43.2153 36.1465 42.7954 cvcp35.0859 41.8716 mo34.7246 41.4517 34.3535 40.9419 34.5791 40.3677 cv34.6055 39.98 34.7529 39.606 35.0781 39.3638 cv35.1436 39.27 35.0938 39.106 35.2285 39.0708 cv35.291 39.1606 35.1875 39.2231 35.1748 39.2915 cv35.2383 39.6821 35.4609 40.2661 35.0996 40.5942 cv35.0947 40.6606 35.0977 40.7524 35.166 40.7798 cv35.5469 40.8833 35.4727 40.3872 35.6953 40.2524 cv35.7344 40.561 35.5068 40.8169 35.3027 41.0356 cv35.3359 41.1401 35.4639 41.1431 35.5488 41.1997 cv35.7676 41.1782 35.8281 40.9282 35.9219 40.7739 cv36.0225 40.3188 35.9766 39.8276 35.7168 39.4556 cv35.7344 39.3276 35.6523 39.1177 35.7695 39.0005 cv36.0215 39.0249 36.1426 39.3013 36.2764 39.4702 cv36.4551 39.9038 36.5391 40.438 36.3867 40.9019 cv36.4473 41.3638 36.0352 41.4731 35.7695 41.769 cv35.5771 41.8716 35.3086 41.9927 35.0859 41.8716 cvcp33.5762 42.8032 mo33.3555 42.4927 33.2764 42.1167 33.0996 41.7808 cv33.0527 41.4282 33.002 41.061 33.0986 40.7231 cv33.1328 40.6333 33.1387 40.5112 33.2344 40.4478 cv33.2734 40.4849 li33.2432 41.2642 33.7734 41.7993 34.207 42.3696 cv34.5342 42.6997 35.1641 42.8003 35.1133 43.3862 cv35.1133 43.6411 35.2891 43.9321 35.1221 44.1626 cv35.0469 44.1675 35.0674 44.1128 35.0215 44.0747 cv34.6338 43.52 34.0664 43.2427 33.5762 42.8032 cvcp31.0879 45.394 mo31.1855 45.1489 31.2754 44.9028 31.5127 44.7368 cv31.6191 44.4907 31.9102 44.606 32.0947 44.5005 cv32.2578 44.6392 32.666 44.3696 32.6152 44.7036 cv32.4082 45.104 32.2559 45.563 32.3691 46.0415 cv32.2617 46.2661 31.7988 45.9927 31.8945 46.3735 cv32.0459 46.6431 32.373 46.4653 32.5176 46.7251 cv32.5801 47.0571 32.6211 47.4048 32.6689 47.7427 cv32.6563 47.7954 32.5869 47.7837 32.5645 47.7593 cv32.3086 47.5708 31.9639 47.4067 31.6436 47.5825 cv31.4512 47.688 31.3281 47.9048 31.166 48.0591 cv31.0693 48.1138 31.043 47.981 31.0176 47.9185 cv30.7979 47.1021 30.8906 46.1704 31.0879 45.394 cvcp31.8105 42.3979 mo31.8604 42.8218 31.9424 43.272 31.7188 43.6333 cv31.6543 43.7339 31.5273 43.813 31.4199 43.7407 cv31.2656 43.686 31.2471 43.5054 31.2344 43.3599 cv31.207 42.9282 31.1582 42.5767 31.2969 42.188 cv31.373 41.936 31.4326 41.6587 31.4629 41.3872 cv31.5088 41.1831 31.5254 40.9634 31.6016 40.7739 cv31.6592 40.9067 31.6426 41.0728 31.6992 41.2075 cv31.7871 41.5981 31.6328 42.0405 31.8105 42.3979 cvcp31.8848 38.5708 mo31.9727 38.4985 32.0156 38.3843 32.1113 38.3579 cv32.1172 38.5464 31.9414 38.7036 31.8789 38.894 cv31.8086 39.1011 31.6641 39.2798 31.6855 39.52 cv31.7715 39.6294 31.876 39.5444 31.957 39.4966 cv32.1934 39.3247 32.332 39.1011 32.5283 38.8892 cv32.5596 38.9106 32.5469 38.9653 32.5469 39.0034 cv32.5107 39.02 32.5195 39.0591 32.5195 39.0942 cv32.3125 39.5161 32.0889 40.0747 31.5625 40.1968 cv31.3828 40.2466 31.207 40.2095 31.082 40.0688 cv30.9512 39.7329 31.0527 39.3208 31.2559 39.0591 cv31.4941 38.8911 31.6133 38.6392 31.8848 38.5708 cvcp30.1973 32.5151 mo30.7266 32.001 li30.7861 31.9985 30.8535 31.9961 30.8711 32.0625 cv30.9492 32.3936 30.7852 32.7153 30.6729 33.0083 cv30.6846 33.1514 30.5293 33.292 30.6396 33.4111 cv30.7979 33.3896 30.8984 33.2036 31 33.0942 cv31.2266 32.8037 31.4141 32.4771 31.709 32.2578 cv31.7383 32.2578 31.7695 32.2651 31.7852 32.2939 cv31.7471 32.7773 31.5098 33.187 31.3184 33.6157 cv31.0801 33.9849 30.6973 34.3374 30.2188 34.2539 cv30.1025 34.1445 li30.0625 33.6157 29.877 32.9702 30.1973 32.5151 cvcp31.3145 28.8564 mo31.0947 29.0972 30.8359 29.2925 30.4932 29.2212 cv30.4102 29.1948 30.3027 29.1592 30.2773 29.0688 cv30.1846 28.5112 30.6738 28.1802 30.75 27.6943 cv30.8525 27.585 30.9297 27.4155 31.0742 27.4111 cv31.1445 27.749 31.0029 28.0493 30.9287 28.3613 cv31.0361 28.4185 31.1221 28.2349 31.1943 28.1563 cv31.416 27.7422 31.5469 27.2847 31.6543 26.8203 cv31.6953 26.7275 31.7891 26.7939 31.7988 26.8608 cv31.9043 27.6133 31.6738 28.2705 31.3145 28.8564 cvcp34.3379 31.9482 mo34.292 32.2295 34.1943 32.4819 34.1494 32.7632 cv34.0625 32.8633 li34.1465 32.937 34.0527 33.082 34.041 33.1821 cv33.9219 33.7515 33.4443 34.1992 32.8887 34.3208 cv32.6904 34.29 32.5 34.2349 32.3379 34.1182 cv32.082 33.8896 32.1445 33.4727 32.165 33.1606 cv32.3662 32.5225 32.7568 31.9507 33.1172 31.3887 cv33.1543 31.3574 33.252 31.2935 33.2607 31.3838 cv33.3398 31.9482 33.2266 32.4727 33.0596 32.9629 cv33.0176 33.0771 33.0742 33.2036 33.1895 33.2607 cv33.3916 33.1943 33.4375 32.9438 33.5918 32.8179 cv33.5898 32.7344 li33.8262 32.3345 34.0566 31.9268 34.1484 31.4722 cv34.1768 31.4102 34.2373 31.4219 34.291 31.4194 cv34.4238 31.5601 34.3242 31.7676 34.3379 31.9482 cvcp33.4629 37.731 mo33.6074 37.4771 33.8984 37.3345 34.0488 37.0718 cv34.1455 37.0454 34.2227 37.103 34.2705 37.1626 cv34.2695 37.646 33.9873 38.0239 33.7334 38.4272 cv33.8809 38.5415 33.9805 38.3052 34.1465 38.3462 cv34.457 38.103 34.4531 37.7095 34.6797 37.4224 cv34.7686 37.396 34.832 37.4937 34.8652 37.5601 cv35.1865 38.2251 34.7285 38.8208 34.418 39.313 cv34.2246 39.6724 33.7979 39.5513 33.4824 39.5962 cv33.3066 39.5591 33.1172 39.5259 33.0586 39.3228 cv32.9414 38.7153 33.3281 38.2563 33.4629 37.731 cvcp32.9189 36.5024 mo33.1816 36.231 33.377 35.8833 33.5938 35.5903 cv33.6699 35.5571 33.6719 35.6333 33.7109 35.6689 cv33.8086 36.4214 33.3984 37.1147 32.7891 37.481 cv32.6328 37.563 32.4307 37.5884 32.248 37.5649 cv32.1309 37.4478 32.0732 37.3052 31.9639 37.188 cv31.9023 36.624 32.0215 36.0522 32.4248 35.6714 cv32.5869 35.5068 32.6035 35.3091 32.7813 35.1689 cv33.0117 35.2974 32.8945 35.6641 32.916 35.8975 cv32.916 36.1689 32.6797 36.3428 32.666 36.6074 cv32.751 36.7119 32.8369 36.5503 32.9189 36.5024 cvcp38.04 37.1313 mo37.7031 36.7407 37.4482 36.3096 37.4697 35.7568 cv37.5 35.7188 37.5352 35.6953 37.582 35.7095 cv37.6523 35.7974 37.6465 35.9263 37.7188 36.0215 cv37.8301 36.2168 37.8779 36.5527 38.1816 36.5527 cv38.2617 36.5049 38.2227 36.3931 38.2031 36.3262 cv38.2031 36.0381 37.9766 35.7808 38.1191 35.481 cv38.165 35.481 li38.5469 35.876 39.0195 36.293 38.8789 36.895 cv38.8457 37.063 38.6748 37.1577 38.5342 37.2153 cv38.376 37.2368 38.1855 37.2095 38.04 37.1313 cvcp37.1641 38.2505 mo37.0586 38.0269 36.7676 37.8843 36.7441 37.6294 cv36.7334 37.5386 36.6836 37.3813 36.8037 37.3315 cv37.2559 37.5142 37.6738 37.8413 38.0098 38.2407 cv38.1465 38.4937 38.1582 38.9009 37.9609 39.1177 cv37.9492 39.2466 37.8994 39.3774 37.7734 39.4497 cv37.6465 39.5132 37.4746 39.5347 37.3135 39.5083 cv36.7773 39.2153 36.4873 38.6343 36.3926 38.0454 cv36.4531 38.0454 li36.6943 38.2192 36.7314 38.7017 37.1123 38.5845 cv37.2031 38.5122 37.1973 38.3628 37.1641 38.2505 cvcp37.6621 32.4365 mo37.5273 32.1982 37.5566 31.8867 37.4961 31.6104 cv37.5273 31.4053 37.6611 31.6436 37.709 31.7007 cv37.9238 32.2915 38.7822 32.4414 38.832 33.0894 cv38.9189 33.2539 38.9199 33.5107 38.8037 33.666 cv38.5918 33.8823 38.2686 33.9922 37.9355 33.9326 cv37.4453 33.7373 37.1289 33.2607 36.7832 32.8799 cv36.7598 32.5986 36.5264 32.3652 36.6484 32.082 cv36.7373 32.0698 36.8076 32.1533 36.8623 32.2031 cv37.1133 32.5298 37.4326 32.7842 37.7637 33.0225 cv37.8232 33.0225 37.8994 33.0273 37.9209 32.9585 cv37.9971 32.7275 37.707 32.6318 37.6621 32.4365 cvcp34.7568 34.5063 mo34.7803 34.5376 34.8047 34.5732 34.8496 34.5566 cv34.9355 34.4258 34.8613 34.2324 34.9805 34.1372 cv35.0313 34.0825 35.1309 34.0967 35.1895 34.1157 cv35.4473 34.3589 35.3242 34.7637 35.3643 35.064 cv35.3496 35.4116 35.2471 35.7168 35.1211 36.0166 cv35.1836 36.1118 35.2852 36.0332 35.3613 36.0098 cv35.6143 35.6377 35.5996 35.1616 35.6855 34.7207 cv35.7119 34.6304 35.6875 34.5088 35.7617 34.4473 cv35.8213 34.4302 35.8672 34.4971 35.876 34.5425 cv35.8857 34.8447 35.8262 35.1494 35.8496 35.4355 cv35.9043 35.4639 li36.2119 35.0996 36.043 34.5303 36.2266 34.1016 cv36.3096 33.8633 36.2402 33.5776 36.3164 33.3418 cv36.4766 33.3516 36.4766 33.5869 36.5176 33.7207 cv36.5 33.9014 36.624 34.0205 36.6738 34.1636 cv36.7891 35.1855 37.0576 36.5337 36.0859 37.1743 cv35.7422 37.3579 35.3262 37.3169 34.9941 37.1548 cv34.6875 37.0122 34.6348 36.7026 34.4756 36.4668 cv34.292 35.8906 34.0303 35.2642 34.2012 34.6064 cv34.3184 33.9849 34.3662 33.3394 34.707 32.8013 cv34.7686 32.8511 34.7256 32.9727 34.7285 33.0562 cv34.7139 33.5488 34.5996 34.0278 34.7568 34.5063 cvcp32.8594 27.5894 mo33.2402 27.4727 33.4434 27.1416 33.6543 26.8486 cv33.6543 26.6367 33.8633 26.5322 33.9414 26.3462 cv33.9863 26.3247 33.9873 26.377 34.0098 26.3916 cv34.0098 27.1392 33.6895 27.8159 33.0928 28.2852 cv32.9736 28.373 32.7998 28.3706 32.6631 28.3516 cv32.4785 28.2373 32.1963 28.1685 32.2031 27.9038 cv32.2197 27.4512 32.3203 27.0156 32.7295 26.77 cv32.8613 26.6299 32.9102 26.4702 33.0811 26.4199 cv33.0371 26.6846 32.9707 26.9751 32.918 27.2559 cv32.9512 27.3916 32.7656 27.48 32.8594 27.5894 cvcp31.7656 30.3286 mo32.1641 30.0283 32.4609 29.5762 32.752 29.2114 cv32.7813 29.1782 32.8428 29.2236 32.8525 29.2593 cv32.8516 29.9927 32.4238 30.605 31.9795 31.1836 cv31.71 31.5171 31.2227 31.6914 30.7754 31.6055 cv30.4404 31.5552 30.4229 31.1934 30.2939 30.9624 cv30.2793 30.6836 30.4004 30.4526 30.5293 30.2358 cv30.9141 29.9692 31.4424 29.6738 31.6484 29.2285 cv31.6924 29.1665 31.7803 29.1113 31.8359 29.1782 cv31.8203 29.6689 31.5449 30.0571 31.3682 30.4858 cv31.5059 30.5479 31.6387 30.4004 31.7656 30.3286 cvcp30.2549 26.6177 mo30.4727 26.5654 30.5488 26.3511 30.7188 26.2319 cv30.8809 26.0698 31.0098 25.8462 31.1934 25.6602 cv31.291 25.6411 31.3828 25.6768 31.4082 25.7676 cv31.4395 26.0532 31.2959 26.2676 31.2422 26.52 cv30.957 27.1323 30.5908 27.7251 29.876 27.8374 cv29.6719 27.8657 29.5039 27.7803 29.3848 27.6323 cv29.377 27.3706 29.25 27.1465 29.2871 26.8892 cv29.3242 26.3579 29.6748 25.9531 29.9648 25.522 cv30.0449 25.4365 30.2393 25.3242 30.3105 25.4814 cv30.2383 25.8149 30.1641 26.1436 30.168 26.5059 cv30.1914 26.5415 30.209 26.5889 30.2549 26.6177 cvcp33.1465 44.0181 mo32.5313 43.6821 32.4219 43.0259 32.5078 42.3911 cv32.5195 42.2837 32.5293 42.1313 32.6582 42.0981 cv32.7822 42.186 32.748 42.3423 32.8271 42.4478 cv33.1699 43.0503 33.8535 43.4009 34.2773 43.939 cv34.6855 44.1772 34.8438 44.6489 34.873 45.1157 cv34.9375 45.2485 34.9043 45.4253 34.8555 45.5474 cv34.8115 45.563 34.7871 45.5103 34.7559 45.4888 cv34.4492 44.8423 33.834 44.2485 33.1465 44.0181 cvcp34.2832 47.8501 mo34.0879 47.8481 33.918 47.769 33.75 47.6899 cv33.5449 47.6528 33.5137 47.895 33.3418 47.9458 cv33.2891 47.9858 33.2539 48.062 33.1855 48.0708 cv33.1055 47.8931 33.1211 47.6665 33.0928 47.4546 cv32.9805 47.231 33.0469 46.9634 33.1621 46.7642 cv33.3184 46.6548 33.4473 46.4302 33.6992 46.5063 cv33.7646 46.4438 33.793 46.3589 33.7734 46.2681 cv33.6797 46.145 33.5146 46.1704 33.3867 46.1968 cv33.2148 46.2778 33.0625 46.4321 32.9219 46.5513 cv32.7324 46.2856 32.7441 45.9302 32.7119 45.5991 cv32.7324 45.2798 32.7969 44.9155 33.0713 44.77 cv33.3184 44.8911 33.6572 44.8579 33.7871 45.1655 cv34.1582 45.7056 34.6279 46.2134 34.6855 46.8931 cv34.7207 47.2925 34.7715 47.7349 34.5625 48.0669 cv34.4541 48.0024 34.4141 47.9048 34.2832 47.8501 cvcp33.5293 48.2388 mo33.6934 48.0981 33.9766 47.9731 34.1924 48.105 cv34.3711 48.2642 34.3564 48.5317 34.3623 48.7407 cv34.1553 49.1646 33.7646 49.5005 33.3467 49.6626 cv33.3086 49.6577 33.2637 49.6294 33.2461 49.5903 cv33.2363 49.2817 33.4121 49.0503 33.3867 48.7407 cv33.2979 48.5376 33.4375 48.3911 33.5293 48.2388 cvcp38.0781 47.2739 mo37.8281 47.2524 37.6934 47.519 37.4658 47.4976 cv37.3174 47.3267 37.3994 47.0513 37.3047 46.8657 cv37.2012 46.2036 37.3164 45.4966 37.8691 45.0864 cv37.9746 45.0249 38.0879 45.0728 38.1875 45.1079 cv38.3906 45.313 38.4824 45.5894 38.625 45.8374 cv38.7148 46.0229 38.8701 46.1753 38.8857 46.4048 cv38.999 46.6948 38.9189 47.0308 38.8652 47.311 cv38.6172 47.3472 38.3555 47.145 38.0781 47.2739 cvcp38.748 48.9526 mo38.3604 48.8521 37.8877 48.5103 37.7988 48.0903 cv37.7588 47.9927 37.6953 47.8813 37.7461 47.7739 cv37.9355 47.5708 38.2441 47.5308 38.5166 47.5239 cv38.6016 47.6196 li38.5469 48.0454 38.4063 48.6138 38.748 48.9526 cvcp39.6914 47.8999 mo39.7598 47.5806 40.1133 47.6001 40.3301 47.4634 cv40.4121 47.4546 40.5117 47.4595 40.5293 47.5571 cv40.4355 48.1714 40.3535 48.8032 39.9395 49.2974 cv39.8955 49.353 39.8438 49.3979 39.7676 49.3862 cv39.7129 49.3501 39.7246 49.2671 39.7461 49.2212 cv39.9707 48.8364 39.9004 48.2788 39.6914 47.8999 cvcp40.4238 45.5747 mo40.5938 45.9321 40.6738 46.3306 40.7686 46.7134 cv40.7734 46.9087 40.8457 47.0728 40.7148 47.2134 cv40.2432 47.145 39.8105 47.3472 39.4492 47.6001 cv39.3359 47.6333 39.252 47.5669 39.1895 47.5024 cv39.124 47.3306 39.1699 47.1235 39.1729 46.9419 cv39.2705 46.7212 39.1475 46.3921 39.3633 46.2485 cv39.4668 46.1567 39.6777 46.1704 39.6875 45.9829 cv39.502 45.8521 39.168 46.02 39.0605 45.7583 cv38.8477 45.4702 38.626 45.1372 38.6172 44.7681 cv38.9316 44.4634 39.4199 44.3657 39.8467 44.4868 cv39.9629 44.5435 40.1006 44.6079 40.1641 44.7349 cv40.2988 44.9966 40.3174 45.3062 40.4238 45.5747 cvcp40.6523 39.7349 mo40.6934 38.8872 40.8574 38.0728 40.8477 37.2339 cv40.9492 37.103 41.1445 37.0669 41.3271 37.0601 cv41.3604 37.1821 41.3301 37.3794 41.3701 37.522 cv41.3945 38.3364 41.2295 39.1353 41.2998 39.9731 cv41.2871 40.313 41.1758 40.6274 41.1875 40.981 cv41.1318 41.188 41.125 41.4214 41.0938 41.6333 cv41.1074 42.3306 40.9209 42.9409 40.8047 43.5786 cv40.7012 43.7173 40.7344 44.0122 40.5303 44.0005 cv40.2813 43.813 40.4238 43.5142 40.4395 43.272 cv40.5176 43.0718 40.457 42.8188 40.5332 42.6118 cv40.4492 41.6099 40.7568 40.7446 40.6523 39.7349 cvcp40.7559 33.2466 mo40.4102 33.332 40.248 32.9438 39.9629 32.8081 cv39.6426 32.4248 39.3193 31.9888 39.3184 31.4673 cv39.3398 31.4219 39.3926 31.4102 39.4385 31.417 cv39.6797 31.6914 39.873 32.0938 40.248 32.2104 cv40.3018 32.2153 40.3623 32.1982 40.375 32.1367 cv40.3203 31.8364 40.1133 31.541 40.2041 31.2363 cv40.4238 31.2671 40.5518 31.5195 40.7578 31.5815 cv40.8984 31.7295 40.8447 31.9341 40.8184 32.1104 cv40.7559 32.4746 40.873 32.9014 40.7559 33.2466 cvcp43.1523 27.0513 mo42.8105 26.9868 42.5811 26.668 42.3682 26.4009 cv42.3066 26.1079 42.0654 25.9053 42.0566 25.5957 cv42.0225 25.415 41.9619 25.1816 42.0254 25.0195 cv42.0547 25.0195 li42.3027 25.4746 42.6787 25.8696 43.0234 26.2842 cv43.1465 26.3936 43.3438 26.4321 43.4102 26.5889 cv43.3779 26.7656 43.3301 26.9702 43.1523 27.0513 cvcp42.9326 27.3872 mo42.9688 27.3418 43.0361 27.2871 43.1035 27.2539 cv43.2773 27.249 43.4219 27.3037 43.5664 27.3682 cv43.6777 27.5635 43.7256 27.8633 43.625 28.0708 cv43.3438 28.1924 43.1035 28.0327 42.9082 27.8564 cv42.8281 27.687 42.998 27.5513 42.9326 27.3872 cvcp37.7207 19.4126 mo38.0254 18.979 38.5156 18.8906 38.9785 18.7695 cv39.5078 18.8003 40.0479 18.8359 40.4023 19.3008 cv40.7578 19.7983 40.9307 20.5342 40.6992 21.1299 cv40.3867 21.7681 39.7705 22.2017 39.0527 22.2158 cv38.7754 22.292 38.5137 22.1421 38.2617 22.0493 cv37.8711 21.873 37.7305 21.4775 37.5156 21.1655 cv37.3389 20.5654 37.457 19.9199 37.7207 19.4126 cvcp37.7256 22.6924 mo37.623 22.7949 37.5127 22.895 37.3848 22.9448 cv37.3193 22.7734 37.4434 22.5947 37.5303 22.4424 cv37.5361 22.397 37.5723 22.3564 37.5547 22.2993 cv37.4854 22.2231 37.3281 22.2729 37.3398 22.1304 cv37.3223 22.0566 37.3574 21.9922 37.3848 21.9395 cv37.5449 21.9351 li37.793 22.147 38.0732 22.3945 38.3145 22.6162 cv38.3359 22.833 38.3262 23.0234 38.2266 23.2236 cv38.2109 23.457 38.0488 23.6357 37.9883 23.8501 cv38.0127 23.9023 38.0732 23.9141 38.1162 23.8833 cv38.3428 23.5903 38.4463 23.2378 38.6953 22.9663 cv38.9727 22.9043 39.293 22.9878 39.5859 22.9258 cv39.8008 23.04 39.6602 23.3447 39.7988 23.5068 cv39.8418 23.6499 39.7871 23.8477 39.918 23.9355 cv40.1133 23.9072 40.0693 23.6665 40.1338 23.5356 cv40.209 23.2686 40.1641 23.0591 40.1406 22.7783 cv40.0938 22.728 40.1309 22.666 40.1367 22.6064 cv40.2012 22.5425 40.3135 22.5088 40.3906 22.5684 cv40.5615 22.6685 40.7109 22.9209 40.8887 23.0449 cv40.9414 22.9971 40.916 22.9067 40.8984 22.8564 cv40.8633 22.6304 40.6318 22.4854 40.5791 22.2754 cv40.584 22.1924 40.6807 22.1421 40.75 22.1875 cv40.9795 22.2705 40.8965 22.5449 41.083 22.6758 cv41.166 22.6494 41.123 22.5303 41.1074 22.478 cv41.0244 22.2754 40.9277 22.0825 40.9121 21.8491 cv40.9639 21.7422 41.0645 21.8301 41.1406 21.8276 cv41.4023 21.9468 41.6758 22.0518 41.916 22.2349 cv42.2031 22.4756 42.252 22.8521 42.3438 23.1592 cv42.2852 23.4639 42.5176 23.833 42.2422 24.0454 cv42.0195 24.1216 41.8652 24.3599 41.6328 24.4121 cv41.5332 24.3242 41.5508 24.1812 41.4795 24.0859 cv41.2998 23.8784 41.209 23.4116 40.8359 23.5142 cv40.6895 23.6616 40.9121 23.8311 40.9629 23.9858 cv40.9863 24.2739 41.2988 24.5884 41.0342 24.8457 cv40.7266 24.6978 40.6279 25.1553 40.3223 25.0264 cv39.9844 24.9243 39.6787 25.522 39.416 25.0693 cv39.4404 24.6528 39.3896 24.2383 39.3408 23.8071 cv39.291 23.6807 39.2549 23.4951 39.1113 23.4546 cv38.9619 23.5688 39.082 23.7949 39.0264 23.9478 cv39.001 24.3335 38.8975 24.6978 38.7266 25.0288 cv38.6387 25.1221 38.5273 25.2007 38.3906 25.1528 cv38.3594 25.1387 38.3359 25.1099 38.3125 25.0859 cv38.291 24.8838 38.3672 24.6621 38.4219 24.4644 cv38.3906 24.4121 38.3164 24.4287 38.2783 24.4526 cv38.0586 24.7075 37.7842 25.124 37.3662 25.0552 cv37.3125 25.0029 37.2207 24.9766 37.2031 24.917 cv37.3242 24.7002 37.6064 24.5264 37.585 24.2764 cv37.3877 24.2666 37.2656 24.498 37.0791 24.5337 cv36.9727 23.7905 37.7256 23.4258 37.8262 22.7354 cv37.7949 22.7139 37.7715 22.6782 37.7256 22.6924 cvcp37.9424 27.3774 mo37.4434 27.1299 36.9824 26.644 36.9277 26.0864 cv36.957 26.0244 37.0332 26.0225 37.0723 26.0439 cv37.5703 26.5127 li37.9316 26.7441 38.4082 26.9795 38.584 27.4063 cv38.6133 27.5488 38.6406 27.7515 38.5156 27.8398 cv38.3486 28.0469 38.1094 28.1611 37.8359 28.0991 cv37.334 28.0396 36.877 27.6465 36.6426 27.1919 cv36.5586 26.8535 36.5469 26.4844 36.6816 26.1699 cv36.8477 26.165 36.7549 26.3579 36.834 26.4365 cv37.0801 26.8535 37.4209 27.394 37.9316 27.5229 cv37.9824 27.4775 37.9736 27.4297 37.9424 27.3774 cvcp35.3428 24.4907 mo35.3809 24.5195 35.4092 24.5195 35.4551 24.5 cv35.5684 24.25 35.5381 23.9404 35.5742 23.6523 cv35.6211 22.9614 35.6973 22.2778 35.7998 21.604 cv35.8496 21.5107 35.8281 21.3535 35.9668 21.3418 cv36.1719 21.3872 36.4219 21.4111 36.5195 21.6274 cv36.5996 22.5469 36.5215 23.4854 36.2666 24.3193 cv36.1426 24.7383 35.8574 25.0552 35.6426 25.4409 cv35.5254 25.5723 35.4951 25.8076 35.2832 25.8364 cv34.6855 24.9932 34.3066 24.043 34.2754 22.9399 cv34.2852 22.5327 34.0273 21.98 34.3809 21.6753 cv34.6426 21.5776 34.8545 21.3135 35.1494 21.3369 cv35.1895 21.4492 li35.2871 22.4424 35.0254 23.5166 35.3428 24.4907 cvcp28.3398 23.4165 mo28.0664 23.4092 28.0645 23.0854 27.9844 22.8994 cv27.9111 22.7803 27.9082 22.6353 27.9102 22.4854 cv28.0059 22.3828 28.0479 22.2993 28.0449 22.1636 cv27.9443 22.0898 27.7715 22.1421 27.7363 21.9756 cv27.7373 21.7563 27.668 21.4775 27.8926 21.3657 cv28.123 21.2466 28.4424 21.3203 28.6494 21.1563 cv28.6777 21.1157 28.6309 21.0562 28.5859 21.0586 cv28.3047 21.0439 28.0977 21.1704 27.8574 21.2251 cv27.7656 21.1821 27.7773 21.0894 27.7383 21.0225 cv27.7334 20.3652 27.6309 19.7412 27.8711 19.1743 cv27.8301 19.0552 27.7871 18.9053 27.8906 18.8101 cv28.1543 18.7573 28.3174 19.1626 28.5703 19.0625 cv28.5703 19.0264 li28.3682 18.8506 28.2188 18.6431 27.9531 18.6123 cv27.8105 18.4121 27.9082 18.1523 27.9629 17.9478 cv28.0215 17.8716 28.0703 17.7617 28.1855 17.8262 cv28.4023 17.9263 28.5039 18.105 28.7266 18.2119 cv28.7871 18.1646 28.8203 18.0879 28.7969 18.0264 cv28.585 17.7549 28.0459 17.6807 28.2832 17.2329 cv28.3301 17.0732 28.4219 16.8521 28.5879 16.8091 cv28.8008 16.8711 28.9121 17.1162 29.1074 17.2402 cv29.1582 17.209 li28.9863 17.04 28.8906 16.8232 28.9424 16.5708 cv29.083 16.4473 29.2168 16.6377 29.3477 16.6875 cv29.5605 16.7422 li29.7676 16.8564 30.0293 16.978 30.0371 17.2568 cv30.2109 17.5093 30.2637 17.8096 30.5059 18.0288 cv30.5723 18.2026 30.7109 18.3027 30.8066 18.4668 cv30.7402 18.5361 30.6426 18.5405 30.5586 18.5024 cv30.3193 18.3525 30.2188 18.0762 30.0547 17.8691 cv29.9941 17.8403 29.9648 17.9189 29.9434 17.9478 cv30.0195 18.1738 30.0713 18.4121 30.2363 18.5977 cv30.2402 18.7549 li29.8945 18.7886 29.5898 18.481 29.377 18.207 cv29.3301 18.1714 29.2617 18.1431 29.2021 18.1836 cv29.1055 18.2383 29.1836 18.3428 29.1953 18.417 cv29.3604 18.6763 29.5068 19.0054 29.8203 19.1387 cv29.8828 19.1885 29.916 19.3008 29.8584 19.3721 cv29.8184 19.5317 29.6641 19.4766 29.5586 19.4482 cv29.3643 19.2744 29.1387 19.0908 28.9668 18.9219 cv28.8691 18.9243 li28.8506 19.0791 29.0215 19.1768 29.0918 19.3027 cv29.252 19.5723 29.7363 19.5723 29.626 19.9531 cv29.5898 20.0225 29.6084 20.1201 29.5195 20.1533 cv29.0098 20.084 28.3242 19.9009 27.9053 20.3154 cv27.8926 20.3701 27.9326 20.4365 27.9922 20.4346 cv28.4531 20.4033 28.8848 20.4678 29.2471 20.7061 cv29.3262 20.7871 29.4199 20.8892 29.3848 21.0034 cv29.3115 21.0513 29.2051 21.0391 29.1309 21.0869 cv28.9844 21.2202 28.8125 21.2939 28.6582 21.4277 cv28.6582 21.4561 28.666 21.4873 28.6973 21.5015 cv28.9297 21.4111 29.1523 21.292 29.3916 21.1919 cv29.4736 21.1753 29.5498 21.2109 29.583 21.2847 cv29.5781 21.4063 29.4434 21.418 29.3613 21.48 cv29.1865 21.6919 28.8506 21.8276 28.8438 22.1089 cv28.9199 22.1064 li29.251 22.0586 29.4033 21.5776 29.7695 21.666 cv29.8223 21.7158 29.8945 21.8135 29.8281 21.8823 cv29.3975 22.1445 28.8301 22.397 28.7715 22.9736 cv28.7803 23.0117 28.7588 23.0566 28.79 23.0781 cv28.9121 23.083 28.8994 22.9448 28.9736 22.8828 cv29.3271 22.585 29.6572 22.2446 30.125 22.2139 cv30.1699 22.228 30.2305 22.2349 30.2705 22.2852 cv30.2637 22.5254 29.9189 22.666 29.9189 22.9233 cv29.8643 23.1138 29.8027 23.3047 29.709 23.4878 cv29.7188 23.5356 29.7793 23.5474 29.8086 23.5166 cv30.0254 23.1689 30.2148 22.6733 30.6406 22.5469 cv30.6367 22.6685 30.7705 22.5732 30.8252 22.623 cv31.0527 22.6636 31.2832 22.7544 31.4688 22.8926 cv31.4297 23.3687 31.25 23.9502 31.498 24.374 cv31.585 24.2954 31.5059 24.1523 31.5488 24.0547 cv31.5684 23.6973 31.7871 23.4189 31.8281 23.0688 cv31.8633 22.9639 31.9844 22.9375 32.0762 22.9663 cv32.2666 23.0425 32.2734 23.2759 32.458 23.3687 cv32.6045 23.2212 32.416 23.0137 32.4863 22.8232 cv32.5508 22.7065 32.7109 22.7188 32.8242 22.7544 cv32.8711 22.79 32.9248 22.8018 32.9863 22.7949 cv33.043 22.7329 33.0264 22.6401 33.0234 22.5591 cv33.2666 22.3706 33.3457 21.9731 33.6797 22.0542 cv33.752 22.1348 li33.7432 22.3706 33.7207 22.6045 33.6738 22.8257 cv33.582 22.8208 33.5322 22.6255 33.4131 22.7041 cv33.3252 22.7852 33.3652 22.8877 33.4063 22.978 cv33.5107 23.1855 33.5996 23.4023 33.7129 23.6021 cv33.7217 23.6641 33.7852 23.7451 33.7188 23.7998 cv33.4609 23.8164 33.3477 23.5474 33.207 23.3999 cv33.1143 23.3354 33.0498 23.4331 33.0371 23.5117 cv32.9863 23.8525 33.2207 24.1094 33.4766 24.3145 cv33.5752 24.3096 33.6367 24.3691 33.707 24.436 cv33.6797 24.5576 33.5693 24.6431 33.6855 24.7529 cv33.8135 24.9312 li33.6729 25.0552 33.4873 24.9194 33.334 24.8765 cv32.9883 24.6621 32.6904 24.3071 32.6172 23.9097 cv32.5938 23.8618 32.5254 23.8501 32.4883 23.8833 cv32.375 24.1431 32.5195 24.4023 32.6387 24.6099 cv32.8086 24.7266 32.9883 24.9102 32.9414 25.1313 cv32.8828 25.2173 32.748 25.2578 32.6416 25.2217 cv32.3555 24.9839 32.3301 24.6265 32.2959 24.2739 cv32.2578 24.2598 32.2188 24.2217 32.1816 24.2622 cv32.1191 24.417 32.125 24.6191 32.1289 24.7861 cv32.0889 24.936 32.1855 25.1479 32.0684 25.272 cv31.8906 25.3745 31.6387 25.291 31.4453 25.3647 cv31.207 25.2744 31.2285 24.979 31.2207 24.7358 cv31.1816 24.6694 31.1152 24.7241 31.0781 24.7549 cv30.8555 24.8765 30.8994 25.3506 30.5322 25.2051 cv30.3008 25.0669 30.041 24.9766 29.8613 24.748 cv29.7393 24.4644 30.0508 24.3027 30.0508 24.0547 cv30.1289 23.8477 30.374 23.7046 30.4131 23.4834 cv30.2666 23.4043 30.1582 23.5977 30.041 23.6831 cv29.8457 23.9619 29.6797 24.269 29.5527 24.5596 cv29.5254 24.6357 29.4492 24.6763 29.3662 24.6646 cv29.0244 24.3643 28.3691 24.1953 28.4727 23.6167 cv28.5459 23.5093 28.6104 23.4023 28.6523 23.2783 cv28.5059 23.1689 28.459 23.376 28.3398 23.4165 cvcp41.998 31.2793 mo41.9492 31.8867 41.9834 32.5298 41.9102 33.1274 cv41.8438 33.1963 41.9072 33.3179 41.873 33.4014 cv41.7549 34.0156 41.8486 34.6567 41.7334 35.271 cv41.6572 35.2759 li41.4307 35.0234 40.9648 34.9233 40.9766 34.5254 cv41.2324 33.4873 41.2051 32.3154 41.2783 31.2266 cv41.4092 30.3286 41.3809 29.3711 41.3242 28.459 cv41.3447 28.4326 41.3359 28.3828 41.3818 28.3804 cv41.6641 28.4707 41.7939 28.7612 42.041 28.9209 cv42.0723 29.7188 41.9355 30.4668 41.998 31.2793 cvcp44.0898 26.4058 mo44.251 26.4844 44.501 26.4771 44.5527 26.6797 cv44.7949 26.7559 44.751 27.0225 44.9004 27.168 cv44.9102 27.2964 44.9072 27.4492 44.7949 27.5039 cv44.4336 27.5537 44.0947 27.3135 43.875 27.0562 cv43.791 26.8252 43.9902 26.5986 44.0898 26.4058 cvcp45.2676 29.9097 mo45.1973 29.8022 45.2734 29.6211 45.1816 29.5215 cv45.0938 29.0928 44.9131 28.7041 44.9199 28.2305 cv44.8613 27.9517 45.1543 27.8228 45.3281 27.6992 cv45.4385 27.437 45.4297 27.1392 45.3037 26.8843 cv45.2148 26.4653 44.6289 26.3936 44.6289 25.9341 cv44.6113 25.5864 44.3818 25.334 44.4434 24.9526 cv44.2891 24.4478 44.2939 23.8975 44.2559 23.3594 cv44.1201 22.7783 44.1318 22.1924 44.0615 21.5776 cv43.9648 20.8535 43.8691 20.1318 43.7012 19.4458 cv43.6152 18.8267 43.4121 18.2549 43.1006 17.7383 cv43.0527 17.3545 42.6738 17.0615 42.8682 16.6328 cv43.21 16.1563 43.4912 15.6372 43.6816 15.0894 cv43.8496 14.7725 43.8232 14.3818 43.9023 14.0293 cv43.877 13.7271 43.9795 13.4126 43.875 13.1411 cv43.8223 13.0981 43.7715 13.1528 43.7354 13.1743 cv43.5859 13.6768 43.0371 13.8867 42.6699 14.1938 cv42.1191 14.4248 41.4277 14.3345 40.8066 14.4058 cv40.3926 14.3794 40.0625 14.7749 39.6543 14.5366 cv39.4502 14.3867 39.2109 14.3271 39 14.208 cv38.5176 14.1772 38.0293 14.2153 37.5918 14.1748 cv36.8955 14.2104 36.3643 13.8198 35.6689 13.8555 cv34.8086 13.8223 34.0664 14.2578 33.166 14.1816 cv32.3672 13.9771 31.584 14.2817 30.9414 14.6128 cv30.6953 14.5679 30.4453 14.4272 30.1855 14.3818 cv29.4883 14.1079 28.6279 14.5918 28.0391 14.0391 cv27.7734 13.751 27.5781 13.4243 27.5869 13.0313 cv27.4785 13.0933 27.4229 13.2363 27.3965 13.3555 cv27.2422 13.6338 27.1172 13.9482 27.0781 14.2842 cv27.001 14.708 27.1172 15.1655 27.2119 15.5684 cv27.2773 16.2852 27.7764 16.8496 27.666 17.6094 cv27.543 17.9521 27.3896 18.2905 27.2891 18.6504 cv26.9961 19.0005 27.0625 19.4863 26.9805 19.9126 cv26.7148 20.7129 26.916 21.5371 26.9561 22.373 cv26.6582 23.3306 26.5195 24.3428 26.4092 25.3696 cv26.3242 26.0391 26.3701 26.7632 26.1055 27.3657 cv25.7461 27.7227 25.4385 28.0898 25.5508 28.6187 cv25.5889 28.8926 25.7363 29.1094 25.8691 29.3354 cv25.9434 29.876 25.9219 30.3955 25.8867 30.9287 cv25.9297 31.3647 25.4814 31.498 25.4102 31.8696 cv25.3184 32.2368 25.584 32.4795 25.8145 32.7178 cv25.9551 32.9512 25.8906 33.2773 25.9648 33.542 cv26.0293 34.2158 26.1602 34.8779 26.2246 35.5283 cv26.4023 36.5024 26.5 37.522 26.7061 38.4556 cv26.9248 39.606 27.1963 40.7329 27.5107 41.8354 cv27.8613 42.6313 28.0488 43.5005 28.3564 44.3149 cv28.5762 44.9888 28.9727 45.5776 28.9668 46.3491 cv29.002 46.4351 29.0068 46.5083 29.0234 46.5874 cv29.0645 47.0542 28.666 47.4263 28.7041 47.9146 cv28.7041 47.9146 30.166 50.4673 31.8984 51.5776 cv32.6035 50.7817 33.5898 50.0552 34.8564 50.0747 cv36.9531 50.106 38.873 52.2231 40.8965 53.729 cv41.04 53.5688 41.1992 53.3999 41.3691 53.2261 cv40.707 52.2896 37.8105 48.936 35.3711 48.5474 cv35.3711 48.5474 35.5596 48.0649 35.333 47.8423 cv35.1475 47.5767 35.1709 47.3716 35.0947 47.061 cv35.083 46.9146 35.0234 46.7095 35.1328 46.5874 cv35.498 46.6665 35.6572 47.061 35.8281 47.3384 cv35.8545 47.354 35.8848 47.3638 35.9121 47.3599 cv35.9404 47.354 35.9668 47.3384 35.9834 47.3022 cv36.0322 46.938 36.4336 46.7114 36.71 46.5396 cv36.7676 46.5083 36.8574 46.5278 36.8809 46.6021 cv36.9453 46.9995 36.8496 47.5142 37.1406 47.8306 cv37.2344 47.9546 37.1191 48.0767 37.0547 48.1743 cv37.0244 48.4282 36.8105 48.4146 36.8105 48.4146 cv38.623 49.2671 39.6211 50.3198 40.6465 51.5376 cv41.3301 51.0649 43.8008 49.4751 43.7676 47.8188 cv43.7559 47.271 43.4697 47.3384 43.3359 47.0454 cv43.1074 46.8521 42.9355 46.5972 42.8027 46.3423 cv42.5361 45.8091 42.3242 45.2153 42.4316 44.5532 cv42.6172 44.0728 42.6367 43.5239 42.8457 43.0503 cv43.1152 42.1528 43.3174 41.2192 43.5938 40.3228 cv43.9199 39.0825 44.2539 37.8481 44.4219 36.5479 cv44.6016 36.1191 44.5869 35.6235 44.6777 35.1616 cv44.8555 34.7188 44.7656 34.1709 44.877 33.7017 cv44.9336 33.3369 44.877 32.9321 45.0371 32.6152 cv45.0918 32.4346 45.0254 32.208 45.1328 32.0483 cv45.0938 31.7603 45.4063 31.8101 45.4727 31.5649 cv45.7148 31.4766 45.7285 31.2075 45.835 31.0195 cv45.8867 30.5576 45.5078 30.2598 45.2676 29.9097 cvcpf27.9658 14.9395 mo28.2158 15.0942 28.5039 15.125 28.7871 15.1846 cv29.0488 15.2441 29.3652 15.1538 29.5781 15.356 cv29.6699 15.4917 29.9102 15.604 29.8359 15.8135 cv29.7773 15.8589 li29.2129 15.5728 28.4355 15.8442 27.9629 15.332 cv27.7754 15.2847 27.666 15.0894 27.6172 14.9204 cv27.6084 14.8608 27.6289 14.7915 27.6641 14.7607 cv27.7822 14.7725 27.8613 14.8965 27.9658 14.9395 cvcpf43.1797 14.8418 mo43.1387 14.9917 43.0303 15.1274 42.9229 15.2559 cv42.3828 15.5991 41.7129 15.7729 41.0518 15.6919 cv41.0156 15.6802 41.0137 15.6274 41.0342 15.604 cv41.4531 15.4609 41.9102 15.4111 42.291 15.1777 cv42.5684 15.0298 42.8525 14.8677 43.1621 14.8271 cv43.1797 14.8418 licpf31.0547 19.7412 mo30.9814 19.708 30.2705 20.8203 30.9814 21.4346 cv31.9219 22.2471 32.9893 20.8774 32.7607 20.5464 cv32.6318 20.4961 32.3535 21.3345 31.5645 21.1563 cv30.6172 20.9414 31.127 19.7744 31.0547 19.7412 cvcpf38.2988 21.1821 mo38.3242 21.4609 39.4297 22.0137 39.9502 21.2324 cv40.6543 20.1748 39.6445 19.5557 39.3145 19.7842 cv39.2637 19.9102 39.9238 20.1914 39.5938 20.9014 cv39.2344 21.6777 38.2852 21.0298 38.2988 21.1821 cvcpf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (Jan K\\345re Wilhelmsen) (Formidlingsavdelingen, UiB)%%Title: (UiBmerke_hvit.eps)%%CreationDate: 26-06-07 12:28%AI9_DataStream%Gb"-6gTkG%E?=lXoa^kR&^j*L/=ZatOdg)i1KtJZUhiab*/mp@O_hXQ'r+P[rUb`dr4^,Gs+S5?dceOa;e4K'2\lm[6mBtPg!>-C%l%b=,J+N1@^\m`=If:&Pdhf\]c2W8*nsc9Mlp$!kO70iqC[j<ie7Z,Yp.-Djae)_)$Tu[PIeDs]&$PFdIfJ_P5J;FDh072;5(*5#%]:Zk6fe<?5r9haH5.ppde$lMfIK.gS*Wc`>GJF(7Rh&m+r=?+3o)@C95K0B'3;lUeqkrnsqSW3&5O%&7r3md*IJDdepV6^se[tQ_%s6].MnTXPVp,i6MDr-!DrLE+rF.RG"c[Y]hr85gbI/!T;=7'Asn\;j8Du]V3&)Vd/rO6-^s37I&s8B.'lefF+rR6P*^43?P/B?N9%oS*:Yrebl?&_cB*R+p@Zd_o1(a4kpir0/NVk[.M<S*&&`Rt[+$5CW5'?[r(IG@/&\k2Z3.^AFZWo[i!51CX6Ag[BX`c2XAN*oh)G%Z1:]fks,1:iVg7co^SF>D2#b"gL6`Sh5@I6J!e=K5/-saQ!iRtrrr<\s(;diqpi0*GlR`tg.rf>&.JL7W?:o_gkV6"rqucM28DHS%l2AZ[Iek]Ylab:)mHC<.NFm[;[m:Q:b+tGE[/!p-'Xt!+0R1qN"RBE@PJ0"IS,;jD\T@f?m5KOik2Xe*,cju&p-,Knl[Sd)S$1GH%[eSA>2dOneIen!P5F_Ab_"Za$s+k5[140#4e^&6JrO^t>!5JKmUqDaqI5B7e@b:YVSC9,=JUICG=5SKR,^In;s8;kG4oOrth[?h4%o2eQTH`cl9)"RRq1SH8>T..lX;j*cMA3^%`9DR;UW`<6Q.fZMK>1G+)CAm]rp,Rl7)+3,:q+JFC6X#HmXlOEk]<lm5Q<)>Xo&]JL%r8dZVg3i^mr:J/cCR)*<r)/"Cjd5\#c.M/oo<AnpVt)-`/gjkPQWCC=q-@1GR^c8mRB/r.QSu,nq-DQG9\?h[-M^sH,qG/9V'j0E%odhVVhdtX7Va+ff18\L/`g9`30)8f,I/0VS\3D`i_m*XtYU%!<QaUq(^!5BqAu!Pn\OUIE^SI-r:O\Y%C^4h-p+tGXq,:J=qRFFt%(&M%_-bmj>A9G?\o"3.O+S*.OP4crc[YmU$L0#=$7O/GabXk%S1Rk"F?!8-&L_j:+c!G""o<NA<BC;+oi%JdhX!;2ulJu_b[Ja(U%-bi;)UMj;-iP`Hqhkc=6m`j'KffV?N3?,f5Rl!fB+goG9NDb]NGV6M(L3K,X@GSp\]ZJC.,@$__?!;5ileT:aTA)#g\XcEhB%qCE%NV2e;r\F=UVqo(4o.uuhFg?h$7JfR1V#*T1o(A_#T(KG6`:DUeR1V/&?S?57Y+./c[=7Md&.\XbIi;Asp_BS&AGp5WEjgJ$5OI'l%T9WlIor%b'c2PEUZsUN$^O,.r*P['n$iA'Bdsh8dQhKn@Vu:r5ZX<[R+R;i#of%A1s'C3/YJYi-5F9'Ihec`fhu&i>3S,)=F"Ui!%l:\tV^[_'/1]OWHrr90O6JF0(6U1I;O'g(YDh!-5oIAkSGE`6-0`0hX+7*Y>GQ#Vt.Xq/VaYs"ahu3MOfm:ea;pop^p\L*Q]3g'_%@K,ITIJ`8a5Q0uihg]tD=24P,e%`PFqXmqIs7,??+5VMFqRaLk!mLZ>A7&$ob;VZ"2qZlg^A65bJ%!,LIOe=X+.iJj?iJ+CGMg`-%!EajKbn&]Zs8FZqoUC%K4FR,!bAVn*mZ1/YrUf?,cgUQt5#$PB.dd8^(us6E_8h'#BUHMoKEh/q9aU[r\5?l(a!8eMrh&!Co2d"t%I.N,3^\ZD$^Nm:-@.SF]aaWr%(i2hDhnEITlTb4.:E[hF^])ES&)Vd/\u>-%q=RhHIfI[)&+>#>kO6-7s8&(/qpkT$:NcDb2MM.T%`uj2gq"1K5,TZI+a02-7lW<!Cl#U.R2Z<WEO'g3HU??fqn^Hfr6s5$9boa^sdsIYRpOE*=>Q3b4OR\+05(<1lPJY"+@6]s)-U54S%8I"c]bO6cf4L;aT^A(>`;1G=pMW=6hYQ"P"^\V(>iNM,Y:VW:srU[e<q;KTH@fQ8Mo,n"ar6,,-TRVC4:Oi-2hu<NCoX2((a#@At%OH6:\dWeu;/PiP`1<$>o;5SF:^YFC`>7lB#N:3q]s7E)3k9&i9J%4fV.`Jf<%,0RX@_eR6a,o\*WhR:`e4"H(Q^OM)QT)\2+8!$"%[OaYADqgBUqB!!3d1+n&W9C+nSN8b9XX-/6gXL:'?tl<!=j&XJ[X#g=qpR>^3(e"S?L$+X>fa.q>AjP81h&.HlFl0J2GnPrS5Z@'%C.c,%TSMLd2g/"f:-O+83MV3O-4JHm-SUM]?qg[&3_HNTK/a5-Pt(?_1pftI-?/B+Ae=$Ac[1=d-RKa9#&[Ydh03>2'<<Wm&EEI`%%TkID"P/;.72j0rZ\)@)g</h$Ybm3dC.RT'4+h1<=p$W1W\Ci"]FC]-mTa-IX`-@C/e/l#E"3+l0ft2:@TKHoKQU,EAN6>2KXWs@%:9`i2Gtd]i6NG:h"t\HR7u.<!,?+[+@PNqs2H>8t<[4I6=u_H"^#%!6-joK]9Lh+NIKfMF%EIC?US<rY8Ql3EH9AT]%'6SOeCZ[d%`jM't+:(WE:kj2@Vk/O3SpCq%jo^616=d:)"gj6]BYI'OPC>hIHFtSD*m[OVBbA//)n%qa8P,GgOUERdmS9ulQ8t1^i/)U#@K$uT%Rl[J7`!*WrIu,5p,RAon9>7u(o]40R_AMeGjG`7>kNZe0c;GP@;fXo_9+QU^Su&$=i(#+OhkWYtTAU]7P*?Yfp7:[qV"k*W+apNO%(#\H2MZn27:W,".<i-Lh6Wt.;--`"?m.(FjX0^9p_f<VX!M%6Hk1*MDG;)Xj\2G8.5r%2*V^DY!g!$=AOKdnWf^7M+Ls@PV"li$[%26R.D!,e;>(7-DOaoJZ"5[ZMZf/!Z#i#!-C20Q?De`]ML"m`\BJ5^7_K-pL01TSN^EDQ@!=5T^_36_Tg7/Yt@SA<)H@lUtep$FkD%4J^cX3k7r'gq#%3JE:XI`/X2BF\q56kG4Co435-SA!?t$W"Bt5Ilb5pIMC.-3C^knZN6qgHfRYTT!/g%a6Ye3JO5#^%\s_X\f6UM%DA$4:m>U"aQ8")]_%hmcmFA??c8YHS[?Zgt4"(6oH=YIFaJ:0Q3d:l^$Pa_5ibaVD8&JG'L>+05[7Ccg;$(?4c)5-gR!?:a'h!4@%98ggd6#*E28fb)<6QDSr3$:pF3,osU?=F:igBkEIL_uA+b!GhYoXACnnK28&Dbk=c]K6Jq@%U-03=f.M@522E3?4,N"?`*ul'a>7%/<lff"#umfhT8K<m+t$f#Jbck`nSiA\FVH:.KE-+S8(\.!i*!MaHLVN`jT93F0O(JJ3tZ$'QHsFRc#(t#t7Yq?jN;K"jj!b4M$$u%ZSa;RWGG=nqr"R:C^2B6Rkk4e-TrH>rs3-Z]Ukj&e+kQ"UY!Y04f&[40`,_CO8E2?$i6DFMkXE)lls`m6p;W`[KJrYSO-*42O5RK%+iWCa/<=a/@FUcu1]jj_r>R[Xab$VY'Ju@i33Ofhc>J$RCG%Th3A?E:S'`Q0i$/CL1'SjapeE5$5-kn9g^eM"=#E#=Mlo8"lO5b\%_k]FWno>OdC6Jgm:W^eLgV0?j]_I5eFi!U1SmCj;97ArBk)lPqh\s"WT%d=uTdWmhB-qS4WZsH16Ytia:6LG]riIR]XnJFOYIYg%%F^@9TBM@=sgX^)0*DFkYOsft>[Y9kVDm9V-0aGjXV5tOo=d)i]i)DDXCMl&4.AO@Q8>r]_:%5aa<(0;]QP$4*$8</*AJb<s3gbMc%F2p=8+;HG]Njds=;IDN.^C(;.FFpIMUa_H$afIK932NQC&Ip0:9egcehOD,j-bG9DO/=?Da,<rB3]e)$^^.WtZ)AVcb7=[>">;n^%5s(LM&?E:""S/M5dI,k..^%n];r&ftAP[)f,Q^sd_"T!s#DW\GUR6'@VnD8oq\5oM_rDG@7JF%"Q2B,nQkF$S=RRO</nR4tR2Me&%0W/YX(H]^_q\<Ec^aWV$*i9F"^]^On1cl\b;\'eL7?9R`(1s)5*(e=IRLKK*S-^f#rK4[eK1%N5&CJ:D\TUS#@t;9@3+cKFWWHA-%E^B4TpI&CAN>E\5k_TDq5H5`?O?p!$Iq!19p"C$*q4Rm&G,ZZ8^5T^X=IkVr8`rg?8>4'XF419;K:R8_2U^2>qLar4LErM;>X(-Y%3@=4qC*;m4i5@>_.D`0d#s<&7K_QhI=O=@_YW?H=?n>D>WNId@\)$"n9Sg\O)8=(9A&*8t[4)W,[-63[#Q\cuosArP!lkmuHQQ5Z%d[BC<@I/'@Ng"1XfO7`+'.K9h!O<1^f\;^.9#(S\ISdgrAfI5TV=@6aeA(H0nHRr_-h'+*#HQ=M-\fd5=#aY4X&_Og0FV8Rd<'a:%:>(t#=K1.C00D+kQsE,$2g=m4aeik5;')]V$^AlV]gX](!N-Hd+j'su^pT(MDV8$PSb7\UjE9)LZ)cjIkb';<+HBP9!$^%V3kV]a%:?nDX7`JgmObuUIGZf`Q/0^T:4%enje.r-]3LcfF%O"oP>F(9\RWgHSX&cJa8dqb%kZ_,N"1$!ZB!6aUC9,5E1U*OA@_defalR;s%&ls1jL9'RlEm5)'`W`t!RGK(HB5/9`NGrIF/QN)bh.k!UkTIh9!4./H`p/*lK2Gg&cFOXa('Q#d`P1i#%VY[?Ap+D5q`Y/;o>`74%-El&RFCaBY,0C?nFW<$0<8&k"qSBMIQ!=Hmj@YW(j%(b9Q26DH.T?aXU1c[XkOmgJ:7:CuOd"*M%)7We+Z'ri#%_^9X.Ns>bBTg0%%054/Um/-R!&8c/?mo'@!mBI(f2=[(aD<]]2A%n`QNSG5#\nqLbf&Sb[Xh=i0U!KRCF\(]#4#Nr;lBis$3<.[W291Bl+I_?fl7nk%&pr;UJfQ;\8\UV`/f(%6>=uJp!=VNRP+4Cn?#uW>$'"$Y"I,B[Mnm94V$_ssVjke%\XB_JJ<T]?"5\0+&#cWTX3IcA>M'=(Fqf/0%T4X4a8\t!`6*u_5e`?RB/#LpoGmDe%e&(&a7/'KRYr\6b'TK_d&LXduEg'B3_i%%d]N9HR<\`?pESq1%/$u_/YZS\\B#*[u]fI.7%KBQVZ61#e0VBjU#Z2p(I#@g([Ss_]UFK4)qK9I=8G.?OG[LDCC:f=440jD(]:8%"elX3W`5r7.UIH5h"lHp`_:#N=-PoP[*O:1G6%CA0D)>?79Q\^[CdCI5*T6qhVgi"W^(54=J)^#r)5l@J2;SR_uUD\Z9hM:p?89)=G5C_62Ij>Mm#I_%2c00MhUZnnHZH8]:fdmSnO%Q8g<o1oHa.bE&ss(P%i3k-ULO'D!fJ\lC(sW&Mfoc)1B2D<HMW\,\T:T)iU;P7gSieXT,C=9]3DPF(LpRRQ!<ACA=mSp>RO'PLp;%[XL<I$F7Y1f1)usPXpa'25t!cA"pB6O<o^jRiRaW"BJd[Y,6JP>-:6^m[,S]RlbPS:r72%#(qbbKcH&;k1kp#6hka%e%B$B-ohNl%#Btrhjp@gn+G:\YqR_Lc<:ab9J6a8b)KOCiDhpO0M&Zu7_uRL3T@(J1)sd19IVU(LVIZ490?aUK"u>WZ3fC9l=3nB]N^.3Ci/N-j%*!&=TCY;"PSUOD&od4Wp%XiXlr0?'W:+^fND)'Cs#-3D^H-84o?(?.2a4]nC'3P7e_^oLW=m5;CJ8[)=b)be_eE9RorSp8Y[!b(U%kb?Nu=,-P1Y5MhFEoTudHB8S<jR+8H-tQ+\ErJ$YFTAXg'(6MA\XQ7B>UH2.:**Rr/tdiL/PdD2))UcYcIdHfJbB\ED'lIqGIG+X%H%HimWD]##`L=tq!d(WSC'a1!SJ4nAA!AEk-?<Ca5rlK*Q;LI>E*Hb(JYc<X2BY8`)8\F::1N*XlTk<C#Dj5;;V`JH>otQhA1rJ"%)IV`[[*'95@]7*YQriEH_`a6!kN32ARjBMH():be!b_,-Pj/HD\S)l,;hRNb@]K]7!K))Pb>lqaJ:5j3V%brR9IekhdsZ(CGF(`W%(1KNYHJM[44.m`aGc1@SZu#hlX&m:&3nt8&JhNcTO2Sh6[U3#JYHd[0lD18ejf=k*l31BZn"A;>b]l#pAdQ^]#tsmrKPmqh*ftY$%fl,(gfM:q`BoP%ndHmOF(&VOhRe-rAhbM2:$1<?kB/S)O!5)cB@`2E*k!QPbdBl<4XW)ZD6pJN2X`;.;14ecN,9]OSH.Y1Fqf%^V%k_GSA<[hn5cSg?rot)2g*QqQhD_H=;bfW;\(]bmeb0<L.1@<45W>,R]6!K%&)d`WKIN:lOG0BM%m<,ES^[+$b^!gLM8KtV.^%W('%'XWnBOO/56/JS?Q1s:sUn$O7_"A\/W6,csL6Lrq8G]bi%W)hrjY<4K[Gc%56$c(P5&M(m.lrSeM*H8ZW7BT#[mtS_BWbBH_ZW8R+%GuV&/A8$Z8EFYMO+>uP#:fB(qE(Wnc8]u*-GslXAlZ^=8jR524Fu&<4\([RC.8fmE7OPVEUFW/HXdHnLrF?C+PBf;d;G-9;HC;Q(%cRhr+)*k7$@q9R&e"0BsZa't2dLD;<gD,F\D)+b,GE]Al2S3%t3DZd18U0(D<QrNH2(N.;AeS[i%SR@u%U?%sb`"5ab6k=k4MRe8%DoIZ+Vo;pP;!KNoN*T;f%OUtlo_%/'f<`_jB)`1e5S'>M@E?LU@)1Mr9ia#W$1=9uB(r="X:U/\1[(Xcdu@#H=qsM!!Cus=!=ouc%.])Xg::>7_\AF2hjToi$jsss-!3WJl(Xp08o6?jL0j!H#Y3Wtd(iR<bF@4A\*HjL]IDa\uJSGkeDFe1@_bE7i=P1n%Y#R2KU5HhH%/L_Re@290R9Tsq[4S?g%VQd3rB!luRnt7"-^l`M^'fM='[<WUTiW]e8"?-!l1<-cA;fL^SWac^36Nb>4jiuTCbrkF3/6b$#!-9i^%\s8H]9Q_9>\%(:;%bY`o!E8EB#Ztsg.<jAWD'RaAP\R,&0YnGWKL-0oTmM$.5ZDHu(B/.k7%]jdUlfD3R'Zr31QuMQZfREZL]_-D%#%#%?!d;p9%`>Dsfo3KU3,3DE93#&*i3>"O]G.#0E=>fY&5R'h3E6M3ej4L/9rq\&L5`Rr,"nhN&oZ$iP7qV<9;D'k91'-BQqb,"%h&(_EW>BYT>c\$-7DYBl*jaB<R?t\:WpMcu+M*95=U3rWUV<GlmRE)9nA\DIJcY+RCA-\#OKD^o$QCG%pJ1Nu&-r<]`<871\Ro0B%#i^t!)\r.!=@28F:iKFRM]Jl>W6dp[OFHb<QR%*P]I,U0NcH$O'aQ:[de7AKe/d@[2.obM7r0Aq*\OEJ1.!s#8S><`G\'"Yl52H)%2i%k2W_E:)jD(S>)SGQW/YoPc4%,1j3<e4?nS=@o#'RdqmM\l%#aL'M!2cB8WIj`uT;l)-h$@^4O*H^UBq&e5&*[I,oOQ$#P6kce%O8.0no+"eXMUKo\^u\[eB4Dao@u>TR0"U\r:%QF@&bLZ&#99V1e8Q$iBI0"u#1*(#o_Qf9=(gQP^oq41V`!/:2n=KBNKQpMBs*.,%J^'M(8ZQ=p<gobM'j^k.`b&N`L'+-]VcU=);"l8;HaIG5DjTm+/(,rB`qm9V0/LDn/q!%$:`>t\>OoP[kj2]A9H,A:h?kt);mJP'%CK+7+[`LnCGjShJlL-1UhFbGFq*trJ8XmeM$UjLW@p5T,FOui,n[[7;N8Me5;hcQB8%97,2aTUXQKpi!=0sZa:#eSL/8ElH^l*H&%Q+uZIJNhb@Fh5p%6;q8Ra'-+elq69e2O/Xm(oZjBjtjO9'It&VCKo>`n6Z36aS)igOV^>IML2X;m<A]q[8&57#l*,UN>KHP[Ph'/%?57i_$pdWkco`#"lD5ub#pGlk>94-Gi,pp!\U=L'`Ps&Q/P(I\/#3Qbgnc<>Li01'm'j0^30)qqL3:+25c)a,6'>/GWJuh/+1Re/%p)+6M(kVrLWcG;a=lq/Sq?_-3:==L2-8^BC%0))%&qHM4L(VP:FRmaH9m$9AjWLhG]I6$fIKQi)7ta8.':s]-J1:T/BJ.k%PC#8s%@0/Yp@6Yb)C^-]uATH"?;PGtWAo3G2%aVSs>-HUhE9.MFE%>>er_Cf.]T2&n\_GaClj-kaB'uo6`5tZI+lXT@jP_ft6V^P_Ydk\7%&Zt"o6+ib^?J>,0p)kqI<&[ST4/g+OAp1EGp$`7^DFu-8R.pXfBMarpcQUsWLcB9g.ZJK/"<YSd6H!P4@&m%Ud$gdpQ0\3;1"Lo'%`f/IQq0rH]T])41pX*8^mWQD!_;nDTj=11F8dbgNBZti08#9tO4mI"m1SgG*;V)K1M)u[0k:+p5,>En0j]>ohl!QlkrgA^*RfR6Y%BQb!hD&j=S9d-j:D)E84G@uQ9Cb>gh0>_A[RS)W8oTqJJ3Nu>5k&bZenFPl&"#6GNM,\ZA@kb<;j:__[#&kiKdV>qMNO,3CQblQT%O&KZ^mjA9HYH2"lV(,6)Fo[.&,:^I]f?l1P?":8.RL,l5(r.;=%q>:F#MF3YBVRFAd-rjGXpbGU[K8F5i#.k0*N\1U^jrDhUn@(+%l+N^`p4F55H[!)4ZZlb>T))#sLsZoihG.)m[>kTuT#-01G@;L_g``MCqW7o_r9hL;ld`NO'"P(G0lFN8)OX;$/ABfa>C&4[^RkUW%HLneWB!*<d<G;S!NP>lQ)Nhi>Ue\L'/sTb?0M*t9h'\;nM1fje)sURXA>n_r?WSs4NpX?4X4D3X\jU[`ePrFf>Vb]L:JJZK"XpK<%TROCNbVO&^XLgs"DC5Dh_\/:TYD9H/AHI2p>Q%Z4m4Om1fRAl,GV%^RoR[]Mqif"1&XH;:4e5,]b.$^rRI^fuCR-?e(0OLc@Bh2H%_4-;WlsSh7[lVa('=_.,N=uY0m)M_iSf>d6-Q#E^]O-CgFI6oWgZ0t4Gag$2L<:X-5eT_p_:*G(,'EFqHAD\1>W=8j8R&0PP.H9m%DTsW;4+1eD3/H@N,@eE`ho$D60`!DZVd$Ld'Bmusb%amgLFdPqN$a5Qg%3EIc+c+YA!'g:K\fM=j5`u&%VMPZJ>hbTl!e\V4-qZ!%0N:]FYn"e<1hdeqnO+.6_"J[#B1?9a6G&)S%i"3W&SGpN3F0m]rsA=='0(Uf3F+-snDI\)KTs;[4&#hUY"Sg+%2Wtp(T\T"5``rs%(>CerOK"e$rMnc/^p%rU@.jU#UDA%"'&A8bOt0oNg1N\&"I=)($W,;D]1%Q1/oR8tjf$-/a`ZPcbICd=h+SWp=BsUlZBq^_gZH0)%O6W$91XN(:&1Ca?L-3\WbOEEb0DReXVj,m*Bi_h*m,/T(N6l-u=gEC?_!*1bfeAT\U^<W`pmsij/KUe?gl*]A=lh7k?9gn=:Qfc-%<jON2P!KsV1;_')-*s.9fl2BiOC9LW7a*#?pFK1FJ23RKLfH+e1;rPHhFJ\+OfO[Y`4FSMG@EP(V&+s:Tm8hC[.qqo:%JNYZZsHo%.[hL+KGq\,/Yep5(TJsE*rfj5@CcrPb[aW&e5GEm;4q7\q%5bm[kSOg<3W?N:j]G!)$RTE<>4ZM!UV\f@MB9M8No%:9@+<EAkIVQ%<pI?^<%#Ymdr_=P_^Ig$iun(HoHpR^lJeE_%2pq3\Ss<d#bXd/euN&ue9Mocl*X2aBb$pW"J,rS222H`8?[Omqm^Ag$?jSf<aCo_%WX$;_$*5"d[.UpS<Q1"m#sf3]%B/FHIUfID_.o\WP"]-pi0'eGq;#Sa93+0R0FISSSV3?4g(R)&<gOF-&j<gL=un2Sp\#gKQKGWJ%b5VUoq@G>T*T@/r'a$pd9pQtD&5NHl`<Y7(G!u^V*X(Y8_!kpF235A@I3+)>P-LKn85;V95,XqIkNGuBcqWpSH?HBKS.hHE#K<UJ%%a\e+^P=7rqi@f<Q%lL#eUl"+0:"Bu+Z/*V$![tX]I[=0oa9iI>Gn'@RG;V%2Z_V>dj\J$dXnQa83Ct9\nI6GbDXBEW(eXAG8/?F%i"N)UTUj,@);PX"MoH.?$o.(L?P0$b^1\I%)C?l:fQkEJI"d)TTkR0ADuq=SUc46dU^R8ZX(%H@pl#M!DR5#e(h32p/#aG`#;8Q5%E;G`%"C,6Udp,pXf;cO5c+>+66bINFJt`0>cnZ*<_rX!)G'WlF%@J@LoE7t4/I#6j'AtlG&.ts/$XsemN.J\MD)?$meSXpUc;)bS%JIitd`A[fQke40X=26,$$7_pZhnomE.Dd!-h%8/^[:_c$kdjWqodbk`m'ih0[O^SGopGrmXF?G+`h;F+k`dcX>@<C'"NgmM4BeYP%;JG#)=6[*#R5^u>!nkHuoU39:-:m*^cF1gU(EaC%L)VA6'N%K803TcQg_nru#)/hHm0^%NTVO/F*q:L])/L=/hqNOY]JX`s=@2Yt%UuY/_:snXLVdBF9m.$`'9[Vs)!iWM:HWs&FN"XTVn:'?=2r)h,Hf3bHTff7@K\K''M/nWGl;nUABBlO\V[%-RjHifI46&)SG:DKt%.QW0/p#HN?8-V$s`!j^)<5s"cQpD''dK$o(ojYig@jhildo6]MCh5O%p8es*W>T/7oWTlU-sa_.UdPin_-JRQ7.O_Y#S8*n@-PJk%^7WaXDr:^ednb]?Y6uU`ojerj7"c$U",eZT\NCHl!d.ku3)qf6@>)T84XbZE])Jpd`?[9[RN8JE'l(*0DS>&W&/$RbI>'"_GnVr\%.QJR#+i*4PSfJLi<=7HCc(QJ!#G.ODc0uCBa8kK8Fo*,.DNd_Pf+IKb!>0l7=&sL:XC!q[T*#g1#MEuU@s&$^#,O3C[.T-,lLb:5%W/Z;GFu!n]-6<J\`Wa`-$c!)&"N#KoW4Qg=)t]0C4[Zn%g#J(sqmBfHPqW8X/,7Jp@L%Q,aXfSg$6R.:?NI<\&b?olpVPLcSop?a%#uVBZEF#eM$BRQ,j5`9o/&,\`-P?K;\)fIq_!!^>.qVmf],_-_S.o(MR/0Y"_.I7`EqNt[@=cD+jQ9#8K1UrtT*6#Z9_T-,@EVWl%Y`mR.iO+C/M]d]gNaB5'eaGk/%`;^uId8,%+SoJK4975)]<d%''Em6\gFY&(3`l]]j.p!PH&4fFdLr[(J)G#_N)UH529<LjbR/5?%S-C)Z3!1,>@r8"fctFIKk9W"Xn"nbF/q+r8W"Y\U+(3Y[;FGVu.RY.G>?2seN5CdE_pK#jfNn,g,3aJI4>'H*-0a11Up#"uJ4("D%B%qC(=1_Z*V>t>+mH1&<05/NGn]l0c!hB%,T6uRtL.\BC\i*IZP"^KC)RP.4(kPB(P`oXC"tZ:EkW1(kGMa4V]AR3>7OhaF9B;,)%PRifm#R<BC[]LG6$=t#JGU)H#\ib)o@'>3++ml=nQ^]'as5j><T"f!q;Ef!\OgAJcbFo/lb7VW?3'3Y[&L]ufUnG[9Q3+Y"bfn$N%T7-\IM"<,&ri-EW+ld9CCM.=/-Lr22V^3/Z-tG%DrWWaE4QJTK&`W)C87neS1>M5\<e0L<&[L#&M5L,FDoU75rUnW(s4@'*Xf21W%+2>OhVu;h%D!.9CgYqB5J(iN.SpY<TD-OY1h9=^hhlesMold*VSaOu2+MYTpH=;MESViZbQA!HW>C2O7OJi-S-I+VCR,YbErtU9,%W*WqUo.&GYf2aLMVF/uR"p;-KRK>QG'F(>VO5I^)C7Zu*8M+B%ehX)FWNFPpJRDo^@tIKjf?-'H[?f7l#fmUGa<V!B*,b[JbL3Wt%%Gc:7h>A\Dm3RPmk0\EMYS<c+rWJUX8cqR@HhTVc*=-UHT^J1)(^1;-id#NQO^CbCOGS1"DYtDC@mH7S[Z*WoDR:$(?*foI.<7&o%!SY?mkJD[PTjp$KF[9D+9^,l>Q8j8@Esi2lNK3jLb?7JK86H]C$Y?a8OBlS_h)nV&CD0:'ro]E8P]fD_U.-nm;N[e[+SAVU`ZKsp%NHFK$pGS,#ZfXm;_6/VTM9uZ=@d,i]Q$CP5&TOU.g'YnIiY@E.6IERmjS2":(-OKTC-;^:,Og^c0u2W"*f"==Rcsnd&u0CRK(siM%+q55[>;OY$!hV'&+KR`e'(32o$bkBLL%3XCc?\"ddc5G]A),aA/on]00+358DKE_i#r,onp77>E*W[<YK'V.H[5Hd>j(967M>*JY%o6GC5M(V88K.mdSWHm-[U%U;r!oH;?79-DC[OB]T5alRP_n%&/,2U/%;[sQ)KX4d8O2f2-fd8&W3lDQJ,lm]MV[9:b[9_:U`<k9N%E=`<J`*rErg0!Dn4GW#dLlUrKNfuHn'\;Xt_6b?q7FjVApfZ7ARKk3VHQ'BVp3O`^8"VcnPLl*3*t[h*^ir:WMo8*khep\M(U&2O%<57T:>;!8B8:-rbma%5:m3:W8r6.6cml>mcGW[rXgI&G3T\IAs4n_qmER-Y&\``BKN`\Cl2BG%a['h;"5X5r<O0muaLLEQP9$R<+%5)7Ms%FY0-"*d<UVm[d(TP[ui@%I498r'o3KKJI$]]6q@Hlk:omO*K`]H*I+Kg*;KmchWWf:F;f,k_OJg/6[L[Z=J_e(EiqT7F&i%ZgUDNBKL(jM,,b`W/L!Y)4aOT,.V5sg!7GYcU>gmM2pnV9ua1BmnQ21/-+r6,RjFT8$Ag%4W[Do($F;:i$O`N0rl&H0;9nQ`#b"P%2)O(.kN<V2CL3aQj^+9i`,AcG2iuM'56\Jrb!t0<`[g.uid:hdS+ZRU],]o/IJ&6*B+GMTad2=1):Xq>h=J.1K0<r8B]oK-D+Se=%`*43F_Y84d/t7+#[3sP=kE/td]&UH8lgL,r:HNp#@c,ip^&'*q4rV`,Di^#MYhn_>3m8+^IlPt0FFRnd@>f.Z%o$<1`/@s@iVU<!%QkYe"g"$Amf'@\%Q8d'Q+L2+0'%o,*d(pG%FSGkg*`7&@[HX2;G<X6^gcLcjU&`mr7%YHN]5ZT2LR6VXnQ\!h/8EAOp2"Zj+h,,V%b'1&UfMSlNN\)87TXcY&DCKjd_[#tnn'#njYFFhoc(:tSf`1B6G]_C]2s?%Y$.>md#=HGDV>4$Kolq_hm\chu(#0llG&VLf2sRC[%e]"Z]!iH/5PMKh&EX1`lI&pnEe&'KEG-6qK]p"d0&:4b2m42:ViNTKqN$EWtgCfl,_GKf4R5;9UHr$o4n_<-$o0Y>>'*U.N%VaU[%:/k&URHBeY/:I384'\gIHlM)iR*1eFm_5Ps0s4Sk'K*sbM9L+he3W0>,\G#1S->EG5nZJ#&"88TMI4[24AW>HG!%p+DsNWg.ILF2%$>-hGQT):GiDqh@m!rOTZgj-VP@alE1>AS.`Si%hT6;R9lS/(&Qk!0_4G!+'!q4CrL-CtL21gNR7&"\-@t4<kmWR48eukc%QITCa%Ra-9Ep4/]%m.4ZP<&\`UmH*+>]0YoZp44Cera=rf0/*C4fKuj+'45E.`+mJB[Q?-$(cO,FK[=b]5O-`geF3Wa5O%;5(V*'-i](0!%oRN!>H/=iK?9.9K)/AKj;"^0p82`e]TEM*[K=<P.7-%`2IT-U7jgi5COLDp%WZ<!"TNi-U!mBo8+H.S1"=>L0l5g[<`fdDQE2'1@%k.fB&J"e.j<8Se7@Pt0QX:n2O5OZU#29X6LLh/Rp\n<r&8<Ih^c$nDjZr>'UI5p6&h=KhERl<h>mos#WAXaesp)1[aMnG(c6g3$r%l+,!/=T&&[:/'s$N.QDGO\?lRmGlcEV6ZXh=$;*XX5(5'BGj%FcdGB^5'u#]Na"-HdiGo&1$PJ_0<\).Y'oWnM3`:5mgJ^%`s)1e%P4;Yh%R)Zi!I>)$3KF8\=jOX\,jQph"R'=YA]$`BEk4cX]aOEW`GI=+?k^!G[G0=a%9uKBh/%Eckgj&9^pUap_s[H1>;t@iEKlrg%[u9kHl6s=A&"VkWoX1O6%FOU?p@GOXnAsptE-iQG#^B=AbOXpCc)_Wb]UKUN39[8hq/k3tET5f_)`fSVcIWNIZR%89V.+8abrJt<%>.8Bud)BHJ4'5hr8[f*8cM8DS7LH`$n"Bl3=m525]OIQrgc`IEISYQ^*BNRoTW.'1eM#FrPT;7q8$H.r'iiQr$p#W^MbQgiRN,Hm%NmfK4BG\R)IkmpAp',+:Ls\9gS8`rsm24LYVRL3!%p8(fm;<g6Kpc:nr5s3;e+&IVY=IVM&-/d?)TC((7faa@rl"@Q\AH+dKK!$_%bt!=%G<m2$,%5E,4.nLh7"Wo;?'2Kh;'XT9DW4<hV;L+KU@?j!1O.\iB5fjOh%d3Y8<=`I#>4Nrm6Gd9`SfR6`dZ5]8Wc8\gt`K=%;FXb@3W)h`L36=>TVE>RRfI:0B3%2kYCPI6Nd.7ETrp:9a97@X\'ZUXCAp,3V-CW8M/g@i`)B]q<fuj4\gCDOmO73RGQ/u1B#U.m%"lsJeG<Qi*F&.WsRbc9__88+rrsYbWnNbjMTj<o1,9'a.a7!H,Rl2s"EBcL"*NBRmSiT!R8s;gl=FJ8^dV=![5%lB+SUrY:H/HLg%$1n?i/OY>'YG`2Ncr]^4>_h>Z-Zg>e'3a:K[9G0V-nQsiML%k'<Xt.TQ^+><g2<GO!8`(aZ!R94E>8'PHOmYh!DoZrI^`gJ9j!`>%g]q&[AI%!ujq/5MptkG_FVjL*pCrdtO4W)TG!-*4gVf"e,Kk6R9t,J]U7\l6;V.;9qn5-)m@HGKKX;u8hnRibFa>2`2o,EqG]9j&%n"B&bFhQJr\+2r4qkLl:$4lpPL=L+.de5X_3]c"_G!1r]pYG'\hd;f+bB8"@s$oKqQiE+D`i;cN63jh_(f@Ar'iM+Pbke./h%"W)%o%t4"D"b.#b&97"fIY]t.YKOd<fS@NU/.5'9/@bC:$G2L,OZN*UfdF&ag%0pmMA\^K&K-*#e8OtVX_hUNr6PbYn5ScBhnZEoNnR>%Z#3es0rO09oA/3sqSLK?/ddIr5ut(iBJNU<j:nYq.*\"j@'&c&Ho<1Ih2L96Ga/P6]ip<l#31aqCmA:t@Wdr7=DmUW<`bL%X_IEL%Jl"JSR8&IVCbs127oYg;]P`EaK[%E:,-`nZ_4*88:_uR\l0Q6LJE4rkaN2H"QIrd'/DPlc+@9;a7jeKuYc[Kqn0c".#d2P<KM7NT%<s]SuJt#Tk'DQsYXdqHW2uCnaARh8)K(+OrOIIPt$R$K@<"uuqYaS%_A7o$+59s^`P.tP4Ho4kjWpHDa;1/s)a)]R/eSQT;Z/l7:%&1Kg^e-*PW_,E]D[=0BcT@tpQT#.BFLGsda2]293c-tfG1aJ0m[]qnC?Ld\ZC>)Jh;1#.84j@9roD-WHj!<C(md0Xe[t]\(h-fB&%`%,S(FS(U_*upEfESBuI'5a9"6pol_:?O%6@#Wa*IYB?rnkk10fD?5-EEg_pB!O0<-@!KZ!Ac2(@*504otV\+S2p\`_sFr$iGC(o%q+S3Z+Nl8ihkAWcrd6t+8@Tf/Z+'+Hn;,lE+l+4&bL(fgZc2a`RtpmIh9!nc*\I/bEJ/O#!K!H38<::G3:6)oqGJH6KQ$us[s0r1%JZ/[+\ki`mX.0]Y&0L(M4OGZ+i+9PSe4pj>9glYoEJ&n5nAQ&U:8*"^$>muH\7g/iiO[md>k)i&a;(o!Bn,V)L\1De(1TJ==6si!%@CLuHlePt2MSskkSg2!oVuHdif^P-=PZ>B%_I7Ve=3-f2$lZ7`(MW#f<n'JEnCsI8ffj`peJ#ol6g&=mBnaih#8E49*Kh+3"27pV%"W0<Hb0+Un*sVdNaSp=si)M8lDRf)P2N,)JD+0KP%b149D<C`nOAdG!e0caP`K58W)_s@cAsU%9?G02G6t6Ph,^!c$%'5$)B4q<n%LGa$bhGt<sQ:qjBB"7"<`RKEbgmeGDZs:"-#"\]Z`-JVb=a$:MFhQ*33Q6\k?hYB^C+c9Pk>hF[Q.$B:p5VkoH[&B=TnqC^O"Z:O%1>Css5)[R`J]u><LrMY539N,b[OU=)G3<d@*F@tlTPB7sihoeuOk!_gX8D]Jp<2LfG+h*SXPJ$A)MX^*DIF\:j*3@Y`,"23.cfo8%.gtlN<#dWAKb_8/o_X0i+.eDX$+a@0Id^7`bYn?'2H3(3f5nHEcH4==YKEEkGZo6`FLqBpaWuVX8\Y@M&[`*7J/_:B7t/jfqGD@\%=CEJ<,U`hL)<a.a1f@;"Pl*ek(^N&hCFG).R/;anb,=0MGAhA`bN"8mAKWrmj3P^J<??&Pp,:Q5Y_`#+QfrdCniEqe^%"o;'<(H(%D0P'4@cB%Fp6e1PHR-*)l%6)jB!8gSRr^;8EHA9PW3*UFB5"j3ST7JK^6igsVOjgl82oqm!ot<uJ/#.coAH35P]t=V+-K^oZc_gD%qZSi3,-;[XZiTd^$]7)\a\r^mMuc@2[;B?#3Kk$Iedm<dee)Qe*(:FgK\.,]&6MbN;&:]*h@QDOCY[8fK,DnPm9KL8&/=ne_trgH%1\rD$_^nn.2^T:k`Z!Lq\lt#X4GHj>"k^HOelVc6PgHV$HA/o34/VPt]V+.S46]a\:IdP&WeRG6(#2V[kHJ&n"]e#R901-TZNn2/%,*dlb878E\MF+du?_E>lbG1Hhe;Kr5%?_!5<Erm3`jHrK_i)THS7LHYE]5EVo4&>GA_HrZ7,[JsfJ0*j9P_u2[]FGk2BOX*$T#Nf%kZ_KU9#aqYhk,kp);6.?h8*Wme";*BDKb!TL@)Em9*4k;@Pi2;IsDSaGP1Z1hb*rRC#LGgOjut8*4o8bk`qY*q!O/44QIkoc?%rB%o^1HT7io=fdG:A`#OGj=3jq^oa,p!EZkjlK`tPH6`sO(a60@H@2^iDi%Nmm5,`8PNK,!EHm$_I5W1Z/YGn#op#p?NioPmLq.]cX!%<%gVF$rZ8%*36!.i82t=)X[C@;j(eFik"Eq<h6"(C+1(ENT=OG<n0gu9p"tUXspbr=P;pRNcKHt8Y]<_r;2*9c\Q3M7iHU7l?(dl%kH:sMp[I!V)We<k#&d(A[toeIhOs"PBY='D54BM/I#O+;%a@`:LG<5k-;c2^'WDbZ>5Edd-B+W<?r\RM]@:nd@YG"T%/pCl6t\`U%S5egAQ/E=KXNJgZ@]dic:K?O&7D_a7)C1JK.K_/5LgEF:`_5M]-7=RXi(KAKf4/"`T&he%B/O]ifJ9QRB3/?l\O?M2pPT1?J5S:c%W<Nrfi1!C6-Nc*+48.=<H<J/!X*(OgO-r-DGPL%_b]O`4\T])sDXQ%Z]CkJRDujmj`B1j*`ZofA[jUA'`m))7aklJ<&:<lF4jhlI%O>]N$qcgPL9r-).G1bXrf/r0kc1^eC]_TcCh4Elen_\>D/Pk%so0^[XS<;'A]"cD-Xo7[.)a:bj2g=UKd,p*H58@Z^hXj)nb:AhV%iftZMb!j+D2oUO/9*dK-A.:I4Tqs)O0Wf"g24_=Fb"i4p<GS<S6e[j#W0U+,VM*aUD2/o<jgqO'77;=*Q3fL#R&FjHI(-2&/N3"7%C-!9u8oY9Ce7eJrVFZPfKJe(eZ&F.92a0*H\uiPmGYglIVl^`:eFCS+TFsGJqKj$C5EP'H!GV##M,Q0n)\0UE/:Qa8<XF.28t)c<%ph]JH>B+M"C*SmGK&GuYYL$'L'+_/!g9&*<W]#P<iQ9sW$2mi,((7A2*ZLQ1h@?l1-7b'oD<Wa<XC/)IF'7s!^Oqj22N#<`?30J^%b>#r+-)&I81FW`7N=H&4VIsRTGi_SS_kX&]^"St,Z$6hqS0OXc.'$O"gnI8I)KMtSW6p4\/`1"rqAWMFqf'%&`s.XKp6'7#Up)/6%3s&pM`Z<43L+R_\)f]#uB@_FKbS?&+fH&6tYq,),M0s@ep'1/"Oocn\K0"Ekn9]hgDYLXVn*g6pT)ncShouK\<5Z152AETr`=(Kc%n)sT=n3dFlNDG#*&"C:"h!RJ#lddFT.]'oQTN#1!?A(bMVcNGpTQ42<gsN(+HsWs^B'Tmtb8UorS__/mTo32(qp5fHBZi"kd,09m%D*+re)An*J\%rIdfau&eCbG=-V!M_IUH^&bR,#Brk9;30F&;$lQ&iid&%oeG\D<TgYGp>r9m$MSb=bpYXu-798t7!kpPSP4bi!P-%pTsgWqsMl7r>;$O*mEqf%:%U-0lh"&<4aIEb<^C0:\N`R'43hmmn'B#Gi^Hg5#GABO^Me'DJth_<l>EFm!Z4C\@l+bLD-)0+!>:>%"(]Mg6PM0u0$/Bon_/56LZCMRQ\TnAV$@XnAi,W$q6Z:1/+Oam?!=gH0pbp%Ml`,6[tK6,FjKs<^AK9apPiu?qg_c'DIsVY:B9Y&%i<JA$Dq,5k95Qj,M9d\fDDU'\IGB$PE,(m$Nq<-*\MLsW:EeV'4S\g)2f"UYT(nb@e)Qa703%PUTC3ia<e_d%`aP_\;p0GSC;kFE%4S])%RU96$!PR4OfDJO(kOsR7Vl-ZD*NafkT^%C=<#_-+o_g3d&L-"AW`CmYQ=6uk$'1^)&9O7B.:q"rl%-Z2^"%p,M(nFYp;Ab8%d^,+[7-?.cJh/MGq^jmpk*M=h_V5!62Da@K__'"Q)_nOSG^]1&_2hE6Mah1M:>7":\!l8FLO>b5IU4rrA+u_fEaj5`IsLX)K0I&8%CLW@;bRM8u9,b"Q*t$*_*eO0iq%?6[qrEMr[cQqqb&e_R$f0B1q%UJ0=lZ=rS[U&geR&US;e!Uk7C%\4Pt%%*/noTl_$#6ZT0bd\%++:Ek;!O?M#K,Cp#OVsAO'!r[n,\41HZQM&oIAa8_qE_5q)"_L\HD7N/Y24cA&,X,kK*$Y=>FW99*TFG$P-7>'=t!2!.@oEF=J"R%J'UQT=P%mq9R(MA5Me(tqRbJn77&_$P^&$A3*GHEEh)3q9l=(;pJ6i]*.>3n4'^01GfKqohL(&dDHZ9-2S<JOKeFT`q$PU]Bs*[$%\"k9_F^!CjZ8s,I^p)Yr]'r.ob<#bMEPU=kjDDThr>l(36RKeoPIS:3-+-3@Tbk/2@W1nOl7:Dto63OhQL&hQ%R#&5pF"dF.51`L%FO0+THF.-KI<ZKW85PI(g>f6+]3oN=m`;qVcupoug]%)rS[C&([sRW_eoY>1>DDm&3Go`!".&iBZu7tBL50RoB.$+g1_PV:Y;#_o%G!6%M^a3G*]&kLS,CcH\*&je0'j9`__r1p+PFDkk;Q)b=XI6GoP.MbOOu1f`Zi5:1nRO[#LsEOe*Hlr4pVqS!m7H/uTiI&Wf(-g/%.gB6?^hUZe1uKQ)<_^9l0:7G4>Wgj%0b((EMqRd^7D5GnECBTPM#FpB27IGkL>,Jid3<aWn-9a#Ru'9b_+$"1"7M+2L2A3u?K6Rj%o*&N*a+M-a.0Z4n6VQRRMOGm6GelOsjO8`g-OM<8XNs;s5d`tr[9"f4Bs+k-DWOG#qP4s8pI!#sLn/W-?P`RdkTm>A,0`7(l[Z0C%HTo=q2Q#sK7e:+7U0]RoI^ds`mm6lD?u4HZio-p'EG%tjL,Ee8aG&S8mqIP`]FER:Cs[>][i<(.OUF0h@X%0qHt^F?[S1VW+TI)B%h.+)hGMd#DLOGaU+-2\%7@NaYWUA^JGp+GDB!hH!ZPU^I.nas8%/2-;&e-3'+]I'o[90<APTF<A#%l@bT'%J(J/9X4c]k,'B(<,i%m!J_^E'#McW`]UBpaX6Wo<h]*KObgXTJ^g-RO(Soc]g-;i?<hpU*'(lIm>ju7o6/(<gaJL(T-jS(Op?0cgT+???NbB6aZ0S6dSo@%aG52iCR*`8Jg-(LF-V+RU9<[neNj\<^=gV.Q:Q4XR\E%5Hfcfs)QHI]Y6mV$G9`B0;tE6kl,X$oOq3fRJbl26"@oQ\gu!neW5DJn%J*5e[(ZTUOnQ]RIrhISnlDt&,o8h@iEaF(OrY4FMhl5/7;9Df"L!5UHV=-1-:pO8%,?js8"H%`b/_)5:0s6Ke0)a'.IG#Z(T&@J0%I>-sH\SVD4qQ5CL;&T^!J_<F!O1CP8UtPhaMW6CkM@Pq':/\3I,&lbQZG`'B!sPX.>aL!(?r[;q6K]"a.:m=7^]4slWk0Woh9rT_%$UPOe23%lVkr=R%X<`:Q?He?p`B(8m_hqUGe2;7(qf+ir2MuBaDC5..U%6HqLXVPNeS9gai]SLQi&F>`m=4DMeHY'WGS:p/X>[1Y%$Nm-"(6'o4(Q_g;CfOA.%8!(6lR,k(F33/%j;@<;)po3N'c3f.&lLZ)phC=gIUSRZVucc.:6g^$BhiVP%tYns0&?^P*qQF5[K/.B%3NYOm/]FREaYW.[;Ro4$oC,NfqF1Z$GU[l/34%G(Qg'^cV!,Ck.QNIn@rBTXB.S21)WJ);>b"i)Nfl#gL@m`$1..c/i;QS61.SW%%d*s\;<u)6%fljb?pjU&L-ItU7A1D";[G%=6\U.jiPZN^LK.5^Kl#;(:<X5C//5N!5Lp\i$+LqVgm(.k%#SYT1P9.[m+_6FYh`Df3%E;GY7J$S<=["_i@h]I.r#0tV'2:pL4#u'[4qdBsJSO8#X,mpNJ`J-j89rg$c.oW4<9;PcU09XN!,2e[.FZTn>M+l$/5okfc)X/3u%b0FbM_M%A+]ung?3dn^X/%Qa5HLjPdh>0hpSh0[FXUs<Oni@XdUi0b[K%LY$oEHA/A8god7J;S8+*"$egg`B0NQO-<XiD#K^`O`p%:I<+''Ds*fcQ0LBRRQ68Lj]YdZM]`U=//<eEd\q%i!o</[rYHrS[^rr]FblUM!pGtF%Nh:n]_MF;RU"L'cs;;Y<t_519'5&a=9XP%Xrii,RiAQ%?KM"<6dh1:nmlUVmA7o[;W,04Lg(Z+g7"DRi@l.J%1sB8TO/IjS.!oM0`4]F*YmH[hpU''JO;)S(/=DP3V6pGD\Kl`%#1/9YhehnEGEHfp`"6<jR?HSm@QjPAZ71Y;ka;6RN"\eY5q?;_a=/0]"[eP<9jkE'oKMUS_'j#9LKp#D"f)Zc@$Ie;;Xn"523+R3%:N/D+DT$ZIlW-N4!&Z.ZJ//B9aL,Zha.kL"'[TDlPG+WO.>4GU$S*fTXH,7j86cr="5a:b.';&ECf?+n(TB6aW+cmqW?T+H#1Mia%*DOhMF;Dc8>FSHK>)_R/'1:M9FJ-N"``T@Ea[8Fa4!Af\Z:A>m7':4b=h.<XSu%uE%FZtf<`@JU[9K6r"BP@DV56>\/^k&\dS:g=%7?Ss-aBM@GUT)pN==f,j.h7*"3mULOA=@eFkP5,6bZW0U6/-$FT/PW3S@I7oe7KqUWF]rYe*j;=dmGjS5uTarZ`2&=QA2n[l$l;Z%%I6`R\4K@1.>ZJ/i4M@MT`OjA!B/[:+U/bDB#"%SM>Sr/VSla!3)['$C,Y5j"%5ipfj90T9Kb>a83jLBAnpqHJ86ue=$+NT0RLT>%VPqYU4*950JV+fCD1fgCWE;uR5srn-O]lbG%W=V[RX#/M`$SkOkQFP9&0:,AkV$Xai?#EaSgh5/Wf`9[b_%\W71Z6]]bUP"TE)JN%.%@6tQ5qo<)N]J,_AH3Ear#fiNOoN/R6S*A+K]"oZ;j$HEM4QmNiao1dhhVs=90]K2RtlN"&q&-%Q)6tJ.WAf1>$#)F)>W]X\-l=%=rh:"P+LB>r*<obfesYe2E84WSL[T+FA*UqK[$MJA@m@J,b.8cTCdr<p#&=[n#?2-S"[,bULAT2IK?in&]omY*[hUECU*9mErSX7%G=<d9XHnV6dQl?ljUf20;;+7o)"Ea;pt!b19Wh;BO]22<Ri?=``G)tu8n-&X9^:-X[VasJfCV0u&<iSq:1Z]>YIG>14cbppS#I3f%T&1;Ya$uYNT&=#FdF&(3mKO)L2KC^&Tad>5/e55Ka^rrJY]i0K\iEr_DnDpVf.eo<)o_\D]tR@VDcH9H`V\P02u';3+2<,Ms7K:r%2`:akfD$"R#<=:6T-r1gQ4CSaV_4Di)J4P-DS^(U[64;,-P+"nPE2*mNLaK9QqSsSK0+FIlsQ2nCbhn[5BQt]`2f\.j-6DL2WTQ<%CF@e>'3=#9h,RCPK!c)EJlN''cUBKaOB%$8R&1uSY[i,59NU(@;5dZV?3%-FT^c!J&pbtc'@o`hD7Ju-e0_<]Lls'NUNgfp`G.g_%P]RrMCS8!7d>>M('1HgsTQ"'<euY]Ccu7;L$b/]MTMiE'j$=fr7X@3K'MuUL_s@1Zp2r]_<m+l0IBG)hLLgCWaoiC/'rBb_12o9B%r0b?.#Mjn2dgB\";4ntGRheV+:N448=:/$qUHj7%b_D9`),R0uGF64ZabPG&5.mZ+VR.XD`D^>%&@dB""OeV2X@<R$7f`uo$oJc`%eTb3^;rZ;C<RD0F.Cc*d0r<-FWYK4%.=&>!/II?hC*aUl)D!(=+O*mWO=43W_\[j0eEo$\YdoU19;t%kA8FMj'N!^5d=qrDMZd%!%&N%0$X<O$+6CFYOp!U6s20$`gOsO]<b.QBqCk-uh!0(OtU7"7rZ3i]>`_q@dQf>rhV/.ZlaQ\$P3!?[uRb,,:X_5#C=KhWS)+`:>%p8UnU9lO/3hcd$u6t&(tR6W;r=CEJU85kupg2/QJa&"c4"0/WSJ<Q/CZ5-)/[].uh:[k/&G+bZ\-En[she$i[U8k+'/%>Rb&l1WG%QXmps$8,jiU9HKH>K+C0IO-u+JE%KIhd.;F2/(*g$(SJ7mt7/8Rk.n*iqGr<##,\cOYAZIKF2#4QpcjKR<\4Q*>aDZ*<IYE;1W"j%=T_\d9j)KcNoDF)ask6DqEg_R[;;*0-\[Y)e630"]LL'`<\P&Ij$ZkV:7P8i9N'f"PW7E!W@)Q@EGu:c)9,WG!kjAa!18+<p`DYm%hc=gk$$>fCariCi$3[;[Pb`^Ib50$pXO]B8`Y&7r\Rmj`aagBBn9[;o$I5TkW<ZQXVq)$T,r,7]CquJQ3D@9/b0u'04"F`#"k0l'%@MIH%ODXiO_YRfh[bJ?%<_]<_%Aq5S##d5oA6fPW(>c40*/]6KM2$20oQ<%qk/ghH<c[0_Gp3pb.coV0i:[f`KbcPQqtl0h.oouL%!JDUDgMbg.B0\"Qc'LJ-"qpSl#]0#2C[656e2ji"CP$'\*OmFHQF=;&X,9Kg>t[p#K;-,4l1Vuk/QZn.&J2%?H79ZVI`<+tDE>BR%KL')LJSk@%>co^7Bjrh'CjT.&HjCJ+*Ku^A-Ep0l&JI5AnA&KDY,f@;TMRFm.o>%4\%o/JhI)V=\;4%!$q"c$fs1aJ)m51"D)kEt%3Hjj3p+E:q'.>I_`F8[uX),Cr^\W/akRTK3-uJ9J?R^.6Emc-/_16hWNP,IbK>T]p\&1LO<[6geBrGnXhuTJaN*$VrfgD^g46YUk%'AQIggC:]E%n,t9EO<^$ZQ6>-o+j,aC^HLMU__(rj5:@6E'T:@`.egt&1aJW.<:*tZifmT<7_fp=d001Qj1VQ"[J9&&pE^]h<'kC%A5@rNd59N6UZGDm44SEk"m4[)G7\cr\4#XJ->Shg^hS7'L,'WR]R0JH4XFj#0*U$W"t[4C7I[G?/HLji^bo=A3kYSJ]I%6gG%UB+%?fS"b";8%t>[kC>XACd6.$ZjP-aR&-;#TEfH/LBT*V#QTpCo%q)LW>P]1.74!7KX.K2p@$QqIlm)=P?ZYVn7m"CYJ;7WtdGq$nG'%SsZPcr&d4i$>/GUXe&WDAfX^.>iuk)/OeI<c+ls##+RdWD+VhN$qB)OfPke<`JU$2qq'Fe%+qSbKS!CQ$687p]P!KD>=G&QQpIr1%8@1:0^pck]Dnp1k"SlqHM\'@]^puKf8-tMV'&4604L3j1R=oO<6seX%U'*'c@"LJMLJX.>R-?2U4#(;X?<>ep'!\@4!us:S`o5%%%`9\4d/"J8QFi9K;aXF54$#Rf9Dh*$;+D.pI_/q2lg0R@H/O=Q`%Hg]*_=QBaYnK[qVl0mCV1k!S$B,gY74kL6Z@lC<$s953,<\M'%g.26r97f.(*=T;tC6[a<.&84_WC9HM:rGu'&<q2JaN`mUjBPFZW?sViqft.*-(d^8dru?tnr_E."0.!kJ;9CdZb]6=\5j[#?7@'u%Srq2;E-!9<:W[L[\8pZhdY&OIN>mlb]guC(;F88<.P)kq3p9ir!A)b<IaMg9D<^k?-@2Tp<(((8&-p^AWaDgE$,Ap[<MJ0#-tI"r%1'Ln?Jm,33n3_a`BM;elbC^X\`>;%f<_'p`/Zrr1!fVjk`K<,1NU&C-e<8DdWq$IQS>_\n5bJ]sD?ShTPmA3##iqd*DS0%9-^=^;%ZO,S(W#W^ndZ!Q./<M_0$T6=ZAI8pJK*XZ49jGI:!`\]QEqJg92P-")<sMNY"i.WU-%jUL'\+4k3fNEg\-%^>7GN.^#ZrhhN(pV3%<(VpenJA8c_+Z&udQr=&KAZ2uUVoMmH_gFJU#1Yl+t!^(3&on&1Bh(DM+0s-5*r6V.P5+`..!V'JD"\I1jV$;SZJrKeNn]oM?jqJ%+V3ic)$\b%%Y,Nrc--fd%l6bh!\?CI6><2//aP/hd^$mq5\^NJnrRU^>B&/M]VDcb%NZU79#Y7:1E(ub_1.-W*LrG@f79<#X2&7(%RHsbo[Stc.cfV5N5`&a;_/N=29jO%=O:Bj$)F`nGaP;a-4l^V+3mBY+$c#]4lPL&"-=%V3+EN=NHC5Q2/$GY)l"A]9?O9JB<>BJ[%CL2S7!sAnG7"B9mk[,Q/@1ioR$@Mq!#egjT&,$r90G36ZVOH2BRhmJ#ANqZ"h++XK[pC8&:,aUFnj5:'d]aDrmj;<D'7Fu:&t<cS%S)9EH9?(KIiQQX6-S(&)hJ#Hh[=W*mSR^d"[T\O.`+HngEdP40%eV"a\A@SI/[*BK'iqACih$6c1'jag5GJ=j*crqp-IRJ$,q@Ph%G+dD5':4B[YlfDh^c:1)^*9nCPV:Qs%:Gou[(2/jQ9`GJP1`u\!b=U)1noM(I(%6.ILer,FPBMH9F.4F#oWJf'Ji"t.7_Ump`=*_%1'O^DpO]N<]0HC-QpE+9mV;kl1Nk&JlZ&q_3C]T+>NS,lqP#ZI;GellEGEV>$lN?Q62[6";=W`pG#8$$H![`FKmEnZZc<hc'"D+K%C.9q9e;Jr8:db,RF:f]S$F(rqO?9',E3NP(7iT19=Gha>2-4Kc=%^Fee(-.W"'uKUoaf:*iIZEWG/BF[XspeL5;W/W!=:J,/tc.B%U_GCP[>?LD\),5+6]GnsOoI=B[^EnT>:TOfPK6W3`6&\6#tA^eXVNn$P:V0i([U/B@aVuj&[*+@@8$oMq3=7.Etp33@/#`cTtV/p%"4"6A::Q7*'oc1NK-Qm(-U'C:+VZU[eU"^BE?5D*;7'-#OFmo8E8qch?X4sKFq=]@4]!\C4=8Ua[gX6BdR^EiXFPqDRDDc^23_#c%lepVO;.>8`^I@(8I7pt321]Gq!k#h6+rY?>deTOFQYOetoP#'k!A7gMDZ$nd,A"qtb&Oq8]giF*OhP6IpZQX4%V^Lm]L4ufMs3ZN%kf[Y07W<i^YW&"W_>"M]!Pt9Y!+o&O)CA*Km>rPj4t=i9&%E2Q@]I8'Hf@TWqfefV>#R'=UZ*79DV)[hiZ'8RZqQI778!^'L)P7-%N:/Pam=e(n>kM>GRK10u,o=qHhs7ApFJnUtT;%]43Sh8?)h!^D).LU]Nh\52.l`"6*YuJ(5[NH:d4gP.rpp,mHAMI\'k$=BE$bmq%R1tt5l;.VCC<PHDMI+R#L1JS$"6N"PPU=Ein/+p71h(2p>fOFT?t_l2JXSGRklG0"`um[OnMRV9A3MtS$^Zs%,o9<K1\OORE8=1X%j>-0Hjjl*K=7[R$C;\RE\U)A7.E:!d<A/OPJ^%L<:iMJ#/_ti[Rtntc2V^T]XQrbW[+nNcXd)pEYTXmCrY%mef:=5L77W^^TP7^I%+Xb1S:,B[WTH$K<<+%R`U`:^2n-$Wj.0a<T=im7$dLIPZlY/E]&n?(ai8bI_Kj_i$gmJp0?LS=*iNOd/`WGJuA$GNeI:$\k.s[5B%h!dCF<sXGP$ScBA"^2Kc(ug>Ugn`.ErZEfL/H@:/'%f;(7*o%f=+G@hXbp^+.@LLLYaXWh5fu[(RY4m6M?lOYW6"eD[cSAc3=e!*%!Y#bAK;S(7`;Lq6pt2q8V_"d#*r\S#le2$WVq'Qq(gtTi+N5^V`,WSbWY,Ltcib*fVrWKXbpkngPBNc60OYu_ITt9CT\DaA0/-9p%JFH>@>!(QtAC$FjRR!Gqc"OV=Vd)o%hWKEt5O:RE9=g_XN>1%pA.T1LN6OOo6^W?Bf^*&8*S@H$NY::.pd_0S9o-l"ZGcbQ$aCtC%Zj<j<.V@J$*"J?q]9s)\6#Ldjg$=OL<o[Gj76gi+(OG0T4ZnP<Z;Y'9m=f63'H2RKL.cPb/i*!5SZEj9i66LL]EEcQq,7S9*Cs=D%_b?lu&=8Gq=S<,7&35B<R?R.rIicsKQ@-Y<',U?mkr[hQBF*/s)h[@Sq(#eFICsgf:AT9[=5VeZQ(ksYS4PjfS%NS7@,JrRqed1S%=+Jh:@hb"u)OnNAfnfkn)piE?EnKm.[=ND<H*_/PD(o)Z\jm*4BCP7dj'=U^@hsK-1ggeB$I55i$tq`3]`L/)Z%Jus:6!XI2]]\N%.L0\[lr.C::@7[oaSWQdj#so\/3X9.)7;7-0Nh_7FV&3n'/7$M-C]\M^?KO:&g5C9SH`j3;qi5Y%@3g*,P_h=c7"rO)$^hM1X5.T%+)`;T8B^'bl%IG[2GAD$c\&k",RS-#dgFA>L0oa7I^:_98)1c6!A/k#7CtlJe\^hbc_8Q1K>e&\5(.S%dO]@#[PRh>P?7WBN;aDi%:+>LGN[=cr1P0C.K)cd"?@]'YNRTcm2tf,U6S,HDfP-TX49eJ9CFbe.2U_=>WudYD5eohpjI0gAYH*9k9aD)lb%O&Y'T+OkEOXn1%&7:<MGU^)bbYc:9$T=M-,"[A@"]jpTGBTZT#6ViE,qaaL:D@:S'm#4pA8>QXqW=OR@94*qX,$:=,+Xjd[&kG]0h2?H27CBISAkVt%Vh/LrJKC*'@AUpi\FNDE2.-daj:J'r+0'8(g"7>qX\-07O\HMf9_<4UC8.KNiSc%0`r7mIZ/N&h#;s)JZX/Okg\!Yt9(e4b_58e1%8Ld)4Pf-o0VHP)[X=da_>/,;@oG1"I.#Pt6(;^D?9TICkCNLd3e<siOPJr3f&tIMH-fBV<:8Ui9Ob@3DGHfJlVHp"_i4H.!goB7k%5&2j8TiJiDV$'MRKetF)6T8,NVC"hXWu2U.a,33BP\6u<AMbOY_KM[n@q@2G_egd:Moim!21CBO0R_3B<Ifdn?hUU/]URu/+&R2P%_4%2/V?o:DbkQ*n"$cs+Q=8puB7.G'BS&HKVNt,TltC.oFo8X2<Fh*?A&`CZfuR'1/rin`YE--/+fX0'HJ8[*I;"^+gd%\j4lYZH%l.'#uQ+!'g"B:dHrG[Ou[d;o`!Zk;e.MSo#IDb%Z)lBlIB7P+toc&Qg%(3pb!]ibB$Bh*u6n;iITm7'qO'f>DE7rL,hoQ<%Y5efP%hikZW%S?Fn4]H6K#Y:56hI)\>4s^=9-<[un!R)<g@c']+eKhd5$D9Ql@eR]UU=(j;2n,&;&W.d?Q&RCAPTcDI9A]eJi\#Ioj;kHG%/IFj35EZVZFC7Rd=]DXNG!uD9?;=QsTbg]9?C<pMDKmtk:*:6e\Xa:sHC.'0\_EbHIBYR3no[O87\E$=!+pKYe&'YRdi94C-DcS_%-t+6-jNr"R"sEQT)rT6-+QH!iAA=NL:F$hFVEN#u@?m"bm4@*gDF"f6P/=7o`EW`/JK+ATaR^g9kVlV`c6g`[j7`g\4)]^4%`S!t%8/_Mt5coAmWhTP4R&1Z<dl@c;D)rMoC#SGXOAiqH=@*,'(e:9_UI#'=;j-\ip9hD%871:9Ge:jW.D;0U91)@r%=OqDV*\kTQUFl`%iq``k((#eO4)ddf[J<Xn"PGf"^u_iNLVnd[M2-hZ9%8V`\W:@>=+6crg+/RJ`X[a4Fk+QM8"-quO;s[/G'Fj5n>Lo<g%T0K9Ri=a%#'45WG@Kg"b*#kYE=<.X7o5$*<+ZHfBQRK5\&dTLNL%>;d#8!^6;,!K*Ws_B4()1!eqF=tCF:d\Jmfadm%NAX3$pMl>IK13_4X1F%3>fT&=n5%Da]O]-EFe!$g6tf:EZj:Zdb6%J6qF!Z=:LMJ&&;ieQH'._WUpr<qGOLCX)D?QRM2a;.&BBa=2`>k!]GCgk%+;\%>0u/%O<e0(@Ba>2$un>(G!JAuXT4"^a:-CX(kRa[`uh*K.>)-US:[36Y5ffT8n,,7Gs7Ph4?UDa:+2.)=Ke[bbIN8B1tMV/(nE7oAe?'+%\lEIo3\UZP.e;_?<A.O0,)*j,3gBh>c1P'Z75ROp]`/Or-QPGiQ$&Kt;)6TfkITTR(*!J"K3-P>.8JkHJSAR^13(+F!EL*Y'a<<b%daS]5@gXo9+JI``);hXY,Y]&%!BANA)NCpM%$&NRN5a&KaQpX?P)!b.-tkp3RLbQQGHgKBY<[KF[a_P8g.u/J;E#k6J9aONFZ#Mn%!2JkY0PT&Vo;i(EW)5s--1/ml.O<[UHD@&BED!`@l:W:$((FlH3mA!\Jm0tej(A,5fYYdU/n%?aXpP2RF5I__Q]Vl-D,!Xd<]%^I%XCOb8'V#_qQn9B,J@W"'2a`f0H'N!"7Pn![[$4c7GXkt4elNuW2?Yu@KWia1B,2m,.3bGh:["lHJOkRSM9QAE_m]-FL3^L?!LD.j%#3Hqmn_Q5n>Cp7H?H)^Tm.RPQb7.1PgMU_#Pt26AR:,<g&2o29R&(^`.2)<(FMh$d6a3XVdt]1(LDmqGA.jV/92#q<"i]iJ52gR:%q4+)/m\\NL_P`&Z\_2m773_K;q[YH'(rT^>E4o\([f?r"D'!jr!4]Bq[m]?>Frh]GSVBpUW,pQuOWHCqPKfLR9T4Q\c>K/"SD4/X%Yt5Sc!QG68kMmp,Z=s53""k^I2'3kXRYK>?je\@i1onu7-K!Q8/k.X!-kiV4)6hL_WFO<p88h-bR(ZLOMn`H<1#^WJ9Z)hIWZp#]%L9u?\Mlp[2K#LBl2+&XlSl<W72?Q=O&\>?.Q',D,dV,9TMcW*b3WiR:(i9l:QoqT6fkgkb7?Y_gN>b2sHEWdm&-A9UDAh'-ZC=As%Ci/'rPHmL+QoKm4\*k&TMSh%bPiq"9]Yn>m8*G\r\.L1!=WDe^CJ)Hi#LaZu`up4Q%@;joPpQVc1kY<])6<TO'K%\q`lkm=]^4>1%aMd<`$R>D4S/CAmCLiX6mCBPH_nF_TW'oCWa'2DJc%(Xr#NKd3)sBnnAhJEReFm*aE;Fmt38@_HSG6Iu",X3#)?^YJA<nJUA4mH+%W6i/gV$c3J"\-KSKaLh`S>+':Ik&GZYQP8sfmA]fZN*(-XqBZ$SK8$;JPj;?pcUuU)P/S3VXSpk`]%(n#=<Ym;j,To&61?$3,$%3%!U3&_<[g:abDVdUMQRWV9ES<_mL/k[*e[c$(5<ttB!0nhBmL`\AEUnpCD"aX)?R!A??or33nrL,bA?$$*Ia?C[O@Wd`;@Am!SuFK%EWt4\_`$1mDQU`HjTm\"+`(#+dEQsa!ZVAG4=ifD\"D%K6s937PiS'Sn9@7?(Dn!Ggfpm[d^plJX"jGg#H!H1D6S%m$:GlA&4[W9%rq=.t,Rt%H8A2*<YLt@l#q`)EB>A0jBh<-WkoB=7$>`Z_6oj]>TlO>1_LSI-bYF?q%+]I7pORcU!@+OL_WNJQ:On7o.S'Qr0&YDO%6S>&L6`4T7]'c#;9t=1GbaeXNPCO?L4'J4D_bQ1t;ND13d!;ZbgD1/#:.o[X('+1@hqQO/.+a&7/[MFl>d@W8b,FY+rhoH9`SrD4%FU`nK"dl11?q!1bp8q]7_gi4A(heJB:VIfC#EcWp<_s[1Bn7#7GR4W">]M%-FV.<`_<8hS<+&6"hN!%fYag"R,,loJ^ClJna(ftl%!\VG'P3/r-(q;7;=@4EBp3g;qF'-eDh0^@YhhMI(%u^<3f*Fm!HgtKOoqiBN1NQmHKr\7-kEXu@0FfB'.PO:b(,g:9iWdagO.946%9i[MFd?YM./KB_=iLe`7'(bqK2JViH^kk>bIcn+bD1,S/MME;XN6=RTR]n\+Q:ToWlKcXp;BW!FFL,(jJW+81r")oRcl!M$oI<<i%@e[N+JS#*.AT1lLfRjRiB&$'%k\80-IArY>%pWekOVaRd[$>h^&&kMs*2KZ=o_A"f8R9/d+_Raq,X<,`J/]@k"I;GS8_?<g!nq80%`"F3QIhF=D6#+kkL<?Pp_%'Eb['g7V;J>VpNp8b]Bd9l6L&c!tFEX^(V<_f^5dU5[rOaj5[<I'_AP_HIM,qa%TnQ.@.`<$h'@Kf7%mlX`:m_N]FG-#rR+4#Q>NFN="Ea.P>XLZJmDZT$Rd@8%/!]/?5#k)gS?@8O/p&."U#TlJtN:&Q4WX@3_"iuLs@MJp96!-\'c^@W<%6A2%YBcdVQ;JQaH.7jpA%^MpafPE,S7t>]?08i?D]^%=.hqt,[l8(s7bB8keL9CYDe0RE7*bUR:kQ5oWSJCpS],rqDle,!_LqbCV%Jkp%]j@)6LaK0QuK5G%;:`uJU1_>2(<A@3J_2-hSqT;'EZRKdr@Y0j;)KP?XOSPY-88JYo9n9VK>a@X(S*7,uaJjXm3)jKN/#.LF%\#+#dc&"m`/,3\@QOgAHo0Xg'k^V9U6OlT.6=qN*P@b3)@i:X5AN2;TG]Ia]pWBOh,7Ip#,WE=iLqY&0Jqh/ONFJWg*!ZAQd?\Fm%WLJI1*>;U'=!]:i8`^@;UJOBL%6X1X)4'l*7[Cd3!ARO5]l:eTc8p[)W]4CkKa"`8#-?Vo67`I:J;gS4ArM"j%`Z<Y8<d2CB`M>$%+]AP1Cn3*c(*_QU]+DAH6f=P%\(1m!KduO3@X+dkp:sGS/3m0i;(dd.A\>_7(BPe:K2kHig%M]7')+nIl[j5(poN4h@83>[0kY2T%#MRA8'D*o2?;2Mt&<'orei5&crth0M$X7uN78M^rFL(&S;hBn5I\oeUe\n%!/nYNnd>_J+XJ_s#QrdZ(<o]-_"CCf(?[S37$P)I+%?oQ2="LV0L58XqHX\.<j^(XsrGa\]H=K_^k7U[ND@^3@!T:6&5X!:AjSasfV?IWC0)%:?LEs8k2?YCe3?72tUPH&sfV]47D=0DP]%Ef!EsakZ/RR23$#<\'a\BoC.]e#/qU_K:uP@GI=Y4Kj`]]^l52YUW8@lLMd-4's:<'*LY]SR5-!;dt896^(Ig)lcb@VpHH-2u9k!%-"Tq9)XCVl)3U,UH^iTEhUk#]B@Y,40i(=$9G1AV9_;3\Lu916q^%7+^?_8'6['m3<XB$fJJB"HH@cI*]>[nS>mB\"\asd?ouBd$%Q?'om%2aFXemC$d5M]%Aks`\H'\c,R5-\QW-#39q3ueZP>3Wr#.fg^X(jS4J2S#V<_FR2&Z@d1CkR1skiRbGuQS,[,)@FR<BQi9V%7R!9dCZ-9Sn]&.H9?o2=L%(OV0EQ!?WqL^+;_9Z/*WOf:&f5=Hjmf<qcNG\rKj3=rQn1$u+2BjL%+PVK"Y/bUB#XX9!iGC]*Dm[_%(9Hg1f$p?,8>WQ3"!V,oa9E%=!Xq9@@,Y-'c'#m(Hfc\m\m;m$WeO)Z1QddTNaY[E!OlPV/.gAa?tL^$3a'-T1\Abm3Mb,d3A;B]%A7RXDbi;kmI]VDp3aqK2nlQ@`X*FlY<sp2]IP:?9JkFRgVA3d%GXZb6B@mlZfHC.@F=WE&!?m7Rhb;t]ms_;#;RVA4lDc5&+g^d'%Vbsq7/hY\h]kXMN><mG;fFLR$$4(S^E3iG%1*!C![F!$bM_"#CM636U.Gbt$`]I5:(-kdGdddnZkY&#L)Y>V;8DmD9QK41`K$b&=%"A3q!F#O1FZVk6F5MnaNdc-<A??oSa2MPr>*dl__bM>6l]>+=AC6\aF+8rg"f;rU8I(LFYF,2qMU5<hq@/UF8Dk1&$nNYs&)1?^A%'lh!>]_j#\?a\?>E4l1nVaMgt,MKbqbp!Yf)P:-2lliuK0?XK#EYn3cT>e-Gq6t56c*Z53PDL;q#1#MZ6'o]oI8u4D",M9-]Yj)Q%qP`H\Hmpr2N?n[NH^@lf<=ZYFJ@?EAWs4Zdme-qQ\S]26Ms*%g<NKl;?"V>MI"&E@"]rFSgB.k&G@S7+&,,c.@;7M5)5[G2(Yl^`%oe\cP/Oa2Ja/e;7q,Zk(n)uF&92&.1kFe#Bo']E_i&d[O*c=0Nbng/2?L;`OGtYcW_AQJ&oENbtD]Wf=G5E=sop./;"EZqsTeoQ5%a&%*$*Dr9pHE,KQWHbdN_Q`-u$9ZAaJ8+8Dg=sgR"gRP6P\oS_DqgEB<WjO"Xf4"`D.OaaM!)>#C3Iho+S7I]MGrgpk0')cYPUZU%Ae2A_rI?Z3<4&F0.t2=?8t.@._]G_ZG^lf+Hc'$orPfj;KCK5+!mABClLkX;!@qB[U6uKM#Kh;]ZZbc%7Yp;-\9rIIXe!7O5b;9q%[r&1">GKf)a7IgQC(J!F!Anb6Kp0LIIAl(XA_E!t2aBf_F`8K)hs2f'C^KD.&afpJ9A7uLZV>9\c)t:A#'XVW=$1DFjO*BqMf@$%%kL@uQKtUeQFf?a8'=up[Y`]t<oI9%''kajkInfd:nSC;J%;))1*!(\km!ZJK!4i(%(=Gq3@P2KhRNcE3D9d>]O:5RiRnuUQJa-4C%F\+=)cOeH`f![uW+^j!#H(Tc52AOhK*oLOd\]7fIahZp0YZDYP%Hjbr4N7X,&p&<nn(A#d:38`e$=iW"hN4%a.sKStJ`NbD(d^u7%'heA*fBhf9$?gluq0t>EQ&ttVqX(:(mIHPe[^<B7ZerO.D@i+")0(:c*R5_df='kH'"\]>N."?u!I9CY7dqXafKI.VEn`M*;i%or%DR$h0L[C+=G5(_`MG#5+4s&8cM]3m]d\3kVh+70(974]WCC6Y]kj*Hk^_8(B@G!qo!n9U<]Ca,,-Qq*>^2nYU(:!J?]jBjuI$L,g%L2`Dc2kA4308jr2p<X$Y`PH(r#p@8\!B>E6EiiX7'*c[[hlRnaY$Go"[quXH(Y5Y7J\HBd$YNjM!BZNBFPW[0KBURWg^25l[D,TD%.e`k0P[oWeL!rlk2)d6`jMR$l[Uo$oL7=;+,YI]#l^P>gH@,%mj-:ToP4j9lc/>PYSJOs3-!.29nc*"#[emY4J.'BbV<0<!LsmK-%@OYE]OtYaIGcOYNpMsD7BGik)NoF&"+nZ3lclQQ)=V62QJ125XDqZ[Ae%"dFSrL0KoQ1;2qDG+[%X7NXDN%6aQVH7QpES,=P0oTR%0)3,HR]e]!Kl#,SFK&'j[2L/Fhgk+U'E^raXM)l]cV>=]aOQs0YW%n/MUgS4pMg)am)7L.-2P(-mhLE//+qiX['d!f]3Zd68OYb2%6%t%<@!`9+,eejJR)*mNXrF%n^cK!P^tS,_^$I05!>Y#OG"^SV4hHNp(Zb,*mgZ##>Ol2!WWg'$$c=\&l7<pVfX#&<X5[fW[s5>M%(SgC7rAo)9Y+l\^er_d5qf_r=Eq<3kl>9aN?9[R/ZDV"t^*!2\m!/[/lD.VNFJ]TsMrbZ+RNg79#K3qpZlMa+aS/GA^9!HD[)'cu%F#t)r5uN-#]#e1"p2rBad*$+D"OV4F[V#"%52VKY4J!8.h)-EDa3kdNDs%WRmk)0lHYTT0Wcu,th%t4*JRknoIBiQ(gI$lH<NZ_0%fm]-ooWY*\*L/45q6E+$BfE!C,4,D_V0%D3Tl*m_Lg.m32=i=/$IU8N&kE/cqDbn5l3@*rpo2k8#i9F<G2%1E9W;/9';#Wo0ND&D%<hui[_gIQjRq;kG8Rkf=;N-ot5]AKbW0I>/qP8:kMHli?Xdiq;U1>F_&hWcM_:7p"E3Nr]eXBY7U3sE4PHXSkPF@3E[U:mjk$[Km%i4qBnI@[f>T'a<m,+abD=<KCk,YuY<NQQB^B)#ac&(\G5d2&3qR-2Ea#ggYSdVUrLd'EeGZkfRL5%uUQk-,e0h+>eZmYOZM5_@MK%MfiE,H.p?rq]5\4Z:%AXFHn;1_4Ff\i2-W?d$5tea-oV2;`#i(YOWaaDDdm/J<Ot_T0flog>2IB@b\$!OMh;CO7@D4mfcd:Eq3hm%YAYIjBT(%ahRVp6KguG/*Y@oGS#*)f0!u4Eq1S.\)c7\HDH;J/n>V,5[0oX(2CV6*?0WC:%IV)F>E)lW2PM5Fifm/on'QH`DM*b:%j_+OHJeOl>/&&[LmO>uArSLMqL8o.PjNWQgh`P0B(/Ga:4p*,-P.&J^M8sRGMk2^YhR45n,]?"MbalP<n636>K<S\l\@1-V)D@5h%N&OC0MG`c.'mj3o1m%3WqiKE41Je_NX`(ah%Ws^!IC.h5<\a0]Q5'VkX((n$ND;#$b3-YLALc%n1)*ic3c*mDT]Fsi!/QsNZ#%Ns%6\76`nn-jaD]U*:Mp;R+(M?=>#3K.^,,*po,)=he3Jr-e"B]I1[;3kc'.j!r[UtY!JR.7a^X.<j<:p7pX".^bf4f%/XJ`'[&q\sb%_A4CJ<IboeJY>oa5G\!CTF((;jX"$ND?X33c@5AoA?r,2%I)[Sak$^1^3PNm#?]_i=@so_K$C<ABR7Dh6NULd7\1O:BmX)::/'EZ%a2+4*##p^hM53UfEaEeFHH'3DNbs[YN$ttapq;\qiLgM[M1d,M;B`-p%RkI7.#XKP<(,K.Q&B?BgfQbL`>`jM'$cNW-mW.9p\O"q%*jup?@TTP/W5Cs')PN8=kQ@M*=];R2<aEb#3bYocJoPeZQ)W5$/&SF'.2RIL^RMphD;&lSh6&<tD+Gk=Z3402</$D][oEQ-KsP@&%Xb+9X5[f#^&C&&_`p:*c\bN4@#LM>]1Y8uZ74M-7mCpIhH?>ubmS!^t(5[%3BL]Z#I.-IFo%JqH!T[Wg@19=>.u1N"#a;msBl/Z8%K70G"jb^ih5e(gC,JUnebUg6hfrfa]V["'P_nJhra[R*1<Od_cRUZ8GfmC26gQLVYljM*'S/29jiR>qrk-Uc%dkG0F5D_9!4rNpr%>*<%#,tMParV)lq@uSL>esa5#c/*"K,XF9!3bn(fH&[cAb8>W$.W"Lj4e;%)E0T3RfX"fXjVKVGL6^tke]pK#oI:eecG3*P+J>/2%*T.)>%)+5:!:WAAWif'B%P,pME2l(_(]dbH%1EL)iY6!+L-A2Li7mdErSG89\CMbgMO+YFE:Q2[k/[:Dp*maOSS$BnjIf%9B?tGa%e*W)n+q;o<GYaeUkk#KkO?0pu[$KrE.$e-I:Q^94d1&u#;TuiC8kq+,JmLF01_OESUOa.9;KJNA1d(f6R1:26AmJj_05GgEg)o^@%]1qq6DL7i/B:&2TN4aZ9E:uJ_kGL35c7*mK-iA4ORpqSmr$kC#^t(?kAOo?6]CAH$J'=>-Z:WR6BV)JobYcsA5WenPZ!15A*V:Q/%&DZ]h>'DK%j-K<op2>1FY!qL]@(G'Y9a6"M_k\:;_93UMOhGY!gPp?^#p2=IY?cYXo&29@-ffp%lai>j"k2]piV?XUn25u8KfUW:%@-H4GJS8(Jl)]HsIWP+kp4X'^j_@JM+f@pV)/kf))7EVJrX?,?iJGSO_@c<HGkQb"[6o3nLS5g[90l@bf\%BUs3Q7206&V$U%';)%;%,+S'J;p;1k_2qIJ`To%_1=F2uDmf=o:>SpFdW6e*W*C0`-TmMt8mhL[s&b]-oghVG]gG5)hhin3;,?')WGf38\2E\keX`ZP#4M%%V+1.QH?HDni*38<7(FLm)s<bN@rM;'f@@!],_!R@+o/<AYOak>T4O-#:k;99CDQ'c/&h0na#u,^O/-YcP-#gbU0Q!q1fWD-_Hpk%&'e*U1/+<V%qnajYg[>%Qp8*]cX.XdoqD#NKdaJ*FEWCRmUu9;-19COApq.X3&7<>AAc4EhJ^>X4m,iF2oN0Ws0X4B]5r*)*b^,#%\Th+fc39Rs#a%R=%huWTk];_HjQP(OF0.Us5/a;W5$+40(S6qR)Xp?5CdLT<DE@\c&+1/2c2H#GSt4LU%/rNj/d@rb/Uq_(qFD(B%O8dC,-\S6IJ*7`Z;0Ga%4WU^i:5@8=Z(o5\Id+nq2G)0c@kS`Q^<9R?9Di@u+tR[lWOL@V_,B)Alg4n$R]l2+Y3_LSPO$PO;"527%]9e`R?nCLaaeK63]p]oh:*.5.r<[?HX:.,G//P'nS0g`^K!6CGb+Ml0H;7(I3fj&&_;XcTbHl]1.X0'[]@+1#ie.4$1gr':m$G93%P^;"@=%th:9@r+!TVg=Gi<s`38LS=;dAsqog%T!R66WZ@c,_WApHr9I-N+>_=;SF60pomQD[K^B2-D-3@uIYJH]\^aJb^<Fb9HKD%'&G25#92]U9m!_t?DdJoZTJ%q9#C>u3dl5Dr3@U*kmqgUDJY(`je"b6U(?eJhNYDBD37''/tIV"hd]f0\%*!e?TBhY?9691!c14?%\etrVTe&ld;;-hc_*K_nF#l]@#$.tZ'0-V;^n&1\-S:V_13Y5W(eP%t%egoea&F481%0t!A?,8D4,<-[]'4_4[T84Q[c,Jc^"M0o%IdX*_OV@D"qJIYVK15;^dL.-;%]T(0AcVs-anAqAEj?-g,U\@F"3>b.UC&;!Xtk=_GT<TNr`WKO%6aJP2t!YN3-f4m^XDWiI%pRH%UX`tX/IRF!\V2-X$&i.P7NJb;"rGX7MSHAIDR\![B"Q``0>?kP6->\n1*O,*pYdqJ`;7sn8b&q#-@'eZ8`/I/4V2<CC[VVmA0@GR%(cJ-@mK%55$aV!urZNAm-go./XZ-730sZEA4.A2?2P:)q^^?AIZo_['Sjt._&:B"+&du"^L&\tEhe\,[2UBQ9$TnB2I.(E+S;Wjs%qd=U7dd'$\Sk'*[6UBb'i.,o%FLAmA!)_a[h&H`UqGb,LGJG2GQ`i19a7FYi(:U>f]>E=YD/Cc0^#,d=Yk3A7$`fpL4::]>Za#TW%a:P<sbGS+-UR+fCEcLp)"n4;aQ`S>p\sUCp0+nu:eHN/Y"sT1(o\.b9c]7F[?[/J5\Q1#H+"R$Rd5scDg7o>"G^?uTH<M7.mo%)Q%f0L:dnPP][muC3M)iCfbM3jDE?m1OnnDYJg3d$mRgM+B-OI%ElL$?4=kGJW5/inBN],`s]MT=>)L/dYZ@R,@YGA2>'NO.eQ3"Ws%%N'M;b&b\2LTneOA&iq.'U993pNmSc!".M>IEWk5oo\5^>=HqS%]3X^VD=PFHHCD&S=80nnajoc$('r*P[mN@=do`<RO/gHo!!'c1%=V5Wla$d]sO!GlRmiEOWJ,P#5n.L/A^KM4PXp-Y&q",*\$j^PKHU?a=aMQpYMn"t,l"43H]j8LE`Vs7TI'AHF[bK!t^::a]VGqFn%7kK>-,cVFbA8%pG`H+2V\a/t=Y3d_AYu>O[qXp@u2>%74jJo`!,K`o?)W2Y1[K]q/]>dG9Pkt-c!".W=0%S:QI]run\'*UIHC_>(%gu[.m^OQ&uSo/35AbNmfKfWD&g,g!Y/;>@/_d[_;FC5n=kdW;dfERGePZY?YMKU"GcGc,HK2Z8('T\ImpZEn,X,#Y,p)PV<#[HGV%N-Xns#Fe'"Bn;FjAn%SgLsuoc&Wbaml"-UlHf:g__IGJm<q>4+*CeOT<N,r/>GN-CGLl.&]\BVc%d]Oe^OQ&uSo/35KA"Sda2Wje%($AdOASM]FSYPN!T.@ul?OC2*862,#qXELdR2PuG$Ye+gE7W//!FM@QrhRCej^ft?[LFkHUo2cV3$D_Y50)B>JX:SN_'7Bs6</#S%]_FE)jb#/XZMh3Bqdja8?Tt!9gF<#-H?3mS/%d;$GrqV&GL,7++EZTqbbP!#ION-r-M']keDd9UM1Zk%$[b1P2s]t\MES02n%S_o%It(5?D]^KAZJ>:7cs0RTf)\LS`SZd.1m&h]_d.^'T%8JoZMaLg+?"ikiI]ma^%`tu8+S%0i'KO.(-q"'^9n1oT-;VGQ9G0F7D/N/%)nh9sAHqW2parE,aO!"L\lsb=Ys8?5j;VoLMg1oWeJ(\DKZs7N?k$3V:iq`ndMAb/HcT$6$fdIX?\[G[$%\9Ek^L`n;f6_%]%]/K%CknW'$Zms%5YPebgDf]s?0.JQSl.4WbGq+a:Xk:W1c\@lpO2\Kn#c4YVK4[tGHKa$qM.5I):e-Ln)rtZ?LLtRG-,X`oks`sk=Q\m%_gd?e=TX7'B,'g@diE($)CiA)ifT5O(Lh5f;*=JU5,'D^$qTst:cB/oH[PF9+u&B6&][1sA.NG#n(KR+W-OSjI]8u^=FN7(<msXD%+:!U&j\cBBUNQ@[?>&2A.m6iF4oLW77p`fM5Ca7KHTNs+;u"1Nh_37A,2Nb&_l:27_OJZ]C*aSS\4.\C-nYZ]ZOf8dgIcrtB0W]E%/'!`3jbt#p*MG@W;Egtn:,EW0-QhDojNq8/C*$)\!@f#MG:c=EZ2=P\U&ps2H@f"emC[22b=db-ot6fQo2`tg?k8jkJD3Y"k[fS=%rtpLcB.rlFrd5]k7i8PHs&5T3^cG&9An-KR"M's$0=So=O()TkWhO@eNI2l*N>PK[1lUI[q>["oe__"sc6jC?ITG7n0(A9T-:Wd=%rT5NXCE2>k-=Ye.`TmbP80YQ.LkS626GR2nJp[h0#=-Cj1i`eq6u\e:RH#Ip7g%bcOZj8l)\]^:Kq9%RSIjU`IZ%7oOn?mIjrAI[%oSd6qRs5p9]t/'(';3kpqm9Gi[c2SRJj71H`]5r68F77O,(_`94@iE;gI2ms,RUf]8N&-J.\t!-QiSa55]Uf'_?.Ee5or;8C)8lN%H)-F*ZOPkd1]6Y3d^$s]#\e&oi+iP/b?A0$Bt-Gn^0k'7@7r5u/ja1UNs)q:*ZuPH3a]^JVFgokOooa1^n"lG?l<D7;eWV\-5H\5%]QUD9@"`7)OhFR*DXK'm7N^R.CrZA.8Fp#F\LH#tD8CW;*,PR586'n6OEOg.%Fg[J>;J[AQGk[@FB+obM?W>S!0nfX"T_OLNAbD<%&2:%mUlkf3(aoS-.")8/1[.%C6A[ef&GLofg/bG+q6a<1FR/bkhjcZTZprj?6-'<J0Co8H;7;V#Z(ZW.0\/*[kl,0Zf*8jbh::G&%2ji@VK,?OdYT]F-*C`Q2(sGY^qT;!S>hap#rV,/?Qmb'XBa@uo1g8L#&<`Ne>E)sCE.M#[6LbnY,Sm!E)mIlG6Sf71((&>[:jVgM%DG1j.i=hM<@J9W$#lsl,"C):hf&'nLZ%8:=l`(\I5L*RjV&&#BL?:(Y8)6O%rqDFeHVb+b"/)X%8g4"c*Hi/f[6TN-mrOR7$]PTV%$3Y%NX)5&GJP_ZH44F6ZJQr@e"TDo%MK(6g$Z@."_UUBmHiXX1^CCl.3%V0<Ml6Xm:qs_)Mi>/1-N^XRpJ/!I`%[HA)/_ha#tJs?%R`%Ln7?#Im%k)u5>6W[V)1:,g.Yuad<hB32psb<nhG+=7pBHSM'F2Fdp\n*>"QA8=\1H42P"1XjZW]]38p=N"D\Vpi.OmqBk&P\)%oUkGM,TJ"QpDbQgHf1JSlHrK$mDu"QoM@`)?:4pi<n>=mPGlbt:2WhA5"I@6]?XDI)o-8KdPX-3>[\3d\^<'egX1kD>j+'F\=Q9W%iS6M)m+ZpmpWk`.#ZGMLCV&CRi#'+2rhD^1J="pc''2a*^iP=>OdjKVam9$\65QfH+f#JN[eLS#CNe1H0?o(?6UBD`%k>UE<Jn`u%^-k2md<Ft%'OOE8nL2oI@7V)4TY+"!1p'HMhb\5cS$;j'P67;PF:g]]O\=,!9)u0N<E/)0c&TDd/RWXZ))Ma+&D&j\Y(NAjnJo(i%fBg5ECc)"B7eLLSU1`%d!f0'W=#DF@V_i45_e9;o=Yut#Cm(JE3_D2Q#IrM,frZ?u?peo_ADAudkoqlp0/hq$UPTD*JN@F'pCN$'%PGC"hKcdCK<+aF="7UU]"C3/==^FHeZFXR!fH4Y,&0'?W9QR)4(,_?R[]p1)`52]ZcubG^#\]bL6r_i%F=,JN9[YrU`9^%'KInlD%Z^WFXZQ=!i94+WcGF;?#r+JXg/jn>'G^RAuVdL]N)<iiJoO_.p3E61/2(JD#`4TJB<i7X\]e5]!nfld,/G'"R4F*en"/`d?]r24R%ds`U,NY@TT?ip_RPMQE@=He3AblB!Qk,%ZT%YaMWDICY<qDZsi7*O1Pp;C=e(62l6Sjkf&SmQIE':qcTNaY?**Ye&P>(lTe?91jl%o.*9Wrm[H@2crNZMVeaM9ZEu=6+V$IPmRqPf+ECc45_&[IbQ(0lG7.a[r_8/B=6.(Z.cl,66PrnMZF7\#'O!L(`$%DU6l&L-Dm\u%N84fP-mU`_#DUY;21YX8]LJ]c[i[[=dFD$&Bi=.K9q)1J44e=+r>7:00s3Cd>Fu8H_8OgEe3YGtP_kGq'+aAQ?QdXF&HTj4,P=h2%_=M]In]h[L[CKpi'jI`FC;P%Tn7`VdJ-ES44Ie_%YqhZd:_$#_QGn@72Ed#9Q2sKF76n#X!\L/p+A#oCNTDFZ]`hi"B^_DbU5bVd%MMe+_$tXF?Z-B\2SaI_g[j(.oKV[c2Mb=s4>FBHq\2]V'Cl5aD)2"USm6d!Dq:,E%TDS2sa^IW.r$c;'A,.H!aoYeqp4drBfmk;C%5)e$L(TY:c)JSn)JZpS?<_LsNUl)nO'YEa`A^Louci@G[*JtFUVesp*>hPOaRW>Qh^(h/`M`7F<Moal4Eqmoa`lQs/Nl):!ZVr`#%5GMGdRqVCIHXP][c4P1bB/JP%"d'9J$*O[=gWY1On`hgq!?ZmL[caHK5"5aLR3^kKXE%I2nM5id!)7NBAs^T*>-Npq`um;N_(@N,%Y$)?_5lBQZSBHPt3o-gD+ES:IKuin.+_f7sETh9,d]T5%)o2HeXWWPq+":(iM'sn2bnc(=/E./^/;?'Yhr7qu`QdRi0d^gpUS3g_%%u4/$f,[;jc_jcg+"j^3MV`:TV_ED$8`N=oC,uAcb453gmS3?E:.\,+qPIoUc/,/:15@SZL>C&8j`oC_[RU9nT@cJAho=edJl-AF%$56a8Z&*[!9TBG>TE*<9$g"#.1UJ.]n/)fLKHL-heoQE;r6Na5"p]$>klDH0YZ]YGAZ,\_gia.`4:I//9V]Rrf9!bQDbO[?=>Yk.%9LI266,H(1UGY16RkbW!T!CX-#Dgu.#O#SM4AH`92Vk\Z?Z4PHMdsm:bT]MVbKOJ*77_%S%,(-+eHC7Q(ER[4Rd1':@ImRQSb8Ni%P/tfWPXp7E-]>K2%f@kQ_lBMZ>q!R@Zj"9'T4]KmLcZFH3Tc7Hg$Rl5d^+"$)t:)2$STP?eZ8$AT3UQCl&`D6%A<DKGU>;qq6)*.%^$OaeaLY)iJB=f.h;+!`%ibQ*6QDNp&U9?'&bES#g(ejP\Y"$8?/r(Ff_^\bIRjnGBS!l5DkNl6&2%]aYF<tIh&XG\Kk4fo(-P9m%?mVkSlbQW`O0L94k4X%hq>C-Ue24/&r:j$L.q"/p%H:%b4]n<B6B?%P=IXu7A3'hU(_)G]OSisOJ@9\,PGlhk&Hmj#m*,iPq?O.9%:):aTXhF="+&I_+M0%S0fhgUjZQ6jFV8%+&+oo'(Gf@d^a)9.H&==hgi812\*Xs[58KhD-Sf=:I(FH_mgug#9ipG7fa,pk*k$Zgm%McC^NQM])8>Z+lm`"&0tS=JF>n'GupYe.hRn[E9ZaWC1N5'^q.N2d$f";$/ug16.a$p+.Pp[K:CQCC,&N1ii-+XTTb\kU,+99EWt%;`;j\C;K`.ZN:Pt#+AGZV<WGWmO?<R>I&"[<&`ut(14>%;r>'UV>jp5^+.LmYi2KW)V(`^ih+##A<2]9q0\nVg(I$p[.bD0"^OR+%O2YSsH"c_?E>8'/LA>=V@</9US+*!.\H^_kdU^n/<D@_:fS%9\!]Zo8*AOT7Za+pPg0#V7%_KA!oQ7:+%X_o[E/_i#MN9<I63@ZM%m$[aJcj7`+*ej>OA"fat*hfa&Tm!0XMN#("%]F#Cd;_NSR;:+d!<l9(q`3L]p)"Ii<=Vt_RBT_4ZbWJ\fC&W(#PIiZm2@\mUU[DV%TETN/J[,@SqH,8d:Q:I0b&U8toY;<#9&utL6$sIr.ba,obb_KV'iY#c&!A$:.Nm3,B(^LLAImouWCe1''>>K_edDQ(TM_sJrL+ni%TR.4cnI9_g9P";uU@M??^*O<5CCe.cCHXSr"O6?r`EppSi`lURPIf[4r9L%M/7u\eO=?s.m;cbI#HrckVh:C6V7(G+N(\:YCgf>I%UmT^V^_e^n"ETKd3R"n)(`+!,#\Cl,^%9:;*:J3h\]Ej.p\\I'4&St:kXl9"6#[_PKSTu!"1;nYp.ho^J]cE1G/))3+MU\U#2OVs%Z,mZhDCHQ-O;-Un-<q1pdnAH4?$QuCBdh0-\qH4H]?m!')sdB<VmM:"nAnFI;R1J'-1i5k>B[W3+;,W$^Q9!FEkl_jc3D@Ni<uP]%+\VJqeY?-Y1t2M-'2;1(cd#2([%?EbS6WReFj.2*OAJ;d?HdNtPIc@DX&unm&W[m@!u:lR-K4X"JHk\*V(,4>Z'fl-Z(1Zf#M55:%4V%+o/:D4F=/Gk$^<J0)`qPgN8S$i37YmlQVB^mZ[sG5U#cHb;,BT*O620!6f5?j6@Vg\lj1_^o;R\eD/ot5e!M:ghb\s%`#/ZZG%.T6R;l;a94D4p,Z==X=dkd!-1phqRQ$DS?i;5NcI^b%aaUT'hLB5(V&2Y5[*$\E@6,89'/[+t4*W?*:[:qI/`loW1?eq_$PWm]5Z%#6%jB00g>2.N3f]'l&Q#o9Z=U35ADjp%I"JPkNn2:_<fb!]&5\!F<_M%WV#44L0Q11gpo'6+QK#]DB@Dr6Y%B*&<(M>f9[1#*SC)%o'>[p@S)9A13;[]"r>k_?Yb_t0.l"!9Y,`Pq<pkcs5q?_orPJ^V+o*1_7X9L/`C%gd-MLj=Gg8u5dm,?;,la%!m<@T7`B?VfT+N`%&lG9X'<'@cP:84`YH3jC<:9tB$bpkFWp6ZsmrA'&;K%p^0ATiu?5`Ne-uq)>[d-Qq&>HKIDA,T(GooeI*ETl(FW[Kk</Yt)<V'io%GF>_geVE`&hkCt3*<?#B)YJ)u>iu,SWF0e7V-VAj:74.$!kY[f!"2.H98.^6Ide3e/Y&A3;D=su87WNiQ)Pf+1V(o!.--eK.d^2K%?F?L3g^T8M<LIGhWXO38O;hq$?mE0J>CH8(n/88EGM5!URmX<DTiN1Kh1[(M=03g6pF0VMpm/mkAuRT&ftO7?/5X&qJ9]Po5UkDG%K>;"EY0='CW`1gj=,:5Nleq4:ASI^/^,$$^^JWHjc&8\JK]aS17a4DLG4W=(br=qn"%CLZ'Pgm=E!r`];/!#.PZuEs2<P[,M-=H]%`)Yqm\WA,*Cc3!5O$CdZVr!f@?F"JMGubg@Kl@*5erW:fFb67G$_u,LkK6aDRJ(Ya#)/XeZn@D51]ZGgfCXUc7mXcc3%5'4-.5I*%<1@^c<G@6>VbC:d!4qt5$_<n9fnl;XVa_I5gjoE2N=od]@f=tFJRhXf#EGY'LA6t3gtR]$369(tlY\"YC0,#r@\/$3i"O'"Ye"@,%&o94O@$PM]_US'7/CfqeQWa,a(Wr7&'eQk_kG.GK;j1P4NQ#Hp6Zk=m_m_*/Z_o-lZn9Y=h53>a$Q>CaXE*jHc<PV%:mg`q3W^>L%)o-K^3\J$OGdPtYL*`ra5-7tY"ih!oD>\\=B\2)X;mi_c)7mi6pM.Z9]O2ao=?:>C`e_#A`J%=VY7$].G/2mJJ#_kd\tqH.M[!Xr%-?=g>>5D'&Vt`f2T7T%GioMA'"W!2ep;o16B'J)gX\8cm<iY>>(nn=F?8hCA_ds(Dqf%/doGdHkU2oalE<lqeVe",$B*/k[.PP1$%ZqH>dlS#AjWp2+(OP[H8oORkj>\NKKa\ujJo0#Hs9R7M\c6'0+o;e`P2;Y/N\/uFjS0tSWI]+Y(PYj]Un4J"'=pg&/BK[[.p+LaX%4*Q>r(e*;f:dtUc7qa;VZ:3*NH::$)Ru)?mWo*0Gi;M#BJO(\7P?9+,F"+U/1d_OkN[ej:fO1Vf`Wf=+Ioc[Oi5\M+WYjI[0>+cn%&rbJ#;!*ur"nj^$bbENPZ14I89CL4Q-=h^<Ye\aI=\\6J?i//FA]:-LF<W@ZJk3*t7,B[]W:ai%IP1LEgFM2OVA;8@f2bqNVmH8H%Er"1rBO2W_?Y/QZ)=Z?l[t@W/p4$=0,q;K']*3=f0t"!m&#fj`?NqN@*AEp2`*H3-VX^2dCr1,:<;u$fd[,5^=U!:mYY964O"5f6%0G3*US:R@@)qK?$+UTk7f"s+<#n=8bmM'u!QZ*2=36a*l2%TM@_^b<,j)R\\KfJ@(2>4Hd!gcGK[L%se"6>*B*Rgl(3.Q_D2a%kd%7B?63*uA80d_s&gRRF1"X2!t`f#]D+/p)\.eAf,jN@ulY<:,^GG3S)^#);K5Pa^`82fM:@#TBX]-eJI#)d:k"TJ6jQ,oFR;;TCma%T#,/KK.]/qEmqLL="WB,mQkK'3@7J&]((db1=DE7?TV&%'XM$W2kT"6#inn<#2'_KWNR0Y:#`$)Q+B7gJThV0!YGK335jRjQY=ke%;iV%7<X)tuo<JNmXpOnhZ(.O>Fts*nGn4*+\)brArmQgFBSO[3kbasjd%sdJ12u)&!G^70%_so3$SH.?'lff=Dur$p%U,F^!9laP%K^]hD>:/rBYVsti`:ti]%92a)Mf8KZAj@kk1K>%Cj^%ArinCbcqu/XASbVsQTa@N'Jmu5^CiQH;*d>I$.R&OHPGiPh,n<T$VQo(r%OW'=F>$2O,mNd48n'*2^^ho[FSi0Yjab9`skDBW;<4pAu$3DB9=6eqd50*l309Zg_P[e6(Zn$#rG'WD_CWQ&tVg,PsP-,9S"Hm0>%%ZqbDUkLd9lBc.R//j6$o51d#p,/GBR*a*>8P,G"Scb$ja:$0.(MSX]ZhS_Hi6V(u8=1rh9rM';!%\DlUMLg=<ARS3_d;;8s2K@t%)6S9J=q,?7H;h5G9l$Oc;qGe`frJH;VL<NZ:^Y599]0EYYk//ul.A636\)%1IP<dB5'I*-!OIEfTN1il24bT"W^`dCr;!#uA3N7n%R/c$F*d2UD*=bN%>fGpq($t/]KObcC6?Vh+[gC'F1o.<W"2/Fn9'g>Td=KFcFOhd3\=MR/K.OK[aYR[m-gk3n,[JXDZC;c<f\o7`%@WSnNGCRC0KKc*pZ4omK8N_ebFp"D2`CX5?%3BLto#c]KE3ap0&,hkXd.92_DUk_7GRgK<X,2D'M*q7Op!FnuoAF-l5I.BR#rf6F%9bB)u=m@,8c-Mc^Kk*IXGQsQn\Foc3(XKaNj8D>^@'UK_WKR.:d%,jdHVdk\P*u/pH%H75=l3=@Sg-?UG6<^)$u!(_5V^V(%Fh0:%XWt&XNu^/.$%XONl+3H/V%>]Y_bcNuMZ&Fdi1=QF0#ai:d=jfK%V(qDF\p-gRmuV/&cU82_"s)#:TBiS1/[,:7pp'UdmE%/?csI-%h_MKK3VNrA]`c*bZN9'OqA(@m]LTPCeH/=>7l8pdk),@h1210B0O"!B:tT1-%@nk6,16r5/=_2?1Jn[Ye09aD8*/W6\5hpnTm)uJ%BWCTiRdbhm82-<$BO8&m?;J?nY[,CRK8OiVo+LeHN>qqe"49AtmGk++5;l$E>e+uM4M;!`OOQP<.qTq?+q)fNFiDb;ps@:Cq=6OM%p&i=pe+@^h'jgG0HH"2JCYfD`MegKckrCZ^B.@Bj)FN,BldkOkJ`j%0OXC$/g2</k.'7!uF6EsU$\g;6[NFc8RD,cQG)-inr1JLW%l*YAnNB9ZA*,W`Qc20P>_H,5q-X808+@QBkX?fCeBq+V"fb_9'IM$of4tp?j=.bh%Tngb$6!\8m9/maHqi\)+24NHD)aMu?V?Ucg%_&(pU?,`;2r/#lBDV8qK1=gIgVB8D7E6>)1(:N\=6]V;<R5D%R?^"@2ITEc`5WJ(%d?E"bPR%H*A3Y@T*Y"'QJe*-\rPnnkmuQ0I%;[BC8(je&/"0t,qW0d]n^Hu)6as<9pd@(;)W&`8dNcXiCmqdM.a(>Ob.c/+W_,hq.?]V7\5I+.hGgnbmPWG]2:.P!:D%dbST!TN)%>R\,S*lt$[+k,LpWe&u@ljjic!+rirV\+4pUgT$?gZoXu4E_Ph"UF'%F,D2j/qLn*R]Y1qPYk99`D[9[D7d7(mQ4R\&VfY>gRST0%8pk-[TBAX'L]R-tr^K!AET1l=Te$Fa**ij@$f;u,C<`dZH7Nuue?0LI?%H;KAo<;TI&:8lRV4f\7\a.>4LHG0!jc1JJQ`q';ncOX%1_qLD_MSr$Hprjm_:</7SM`.r^rdrsf+FSIUbf7/?8=&AVA`rVf:aMJc591T?K/uW=$oYuJr,+?Ck]LP#`jo3(;cZt[p$"T]/VT6%jCieZ#sCg@6_kd>r4VZ2T[JL7l)!Xlq&fJ3.S$kdB"g:aL2K\2p$h(!Vc*^SS5U>fBjPQ.6uANoesi6EC%ZFI2o,$[JKD/JJe\#H%8;ML,EY1m"M["?2;3bY>WE$Mdpu!0s-MS+!^T;RBBL%utL+#p<j3hZlR[@K1+htG"ab!#q6ulj=!i2$Xce9WQmW1/*=U7=08oK6D%R#*8DERE(;XS/JN:]aMIc><A91$>n2d&_Y$Ne?f;"1`\(e3_lS#F2aO-$soQUrD+u/>NQb)o>o`*3XRZ:d:e6%i<F7ZKeusF<g%r%,'UU)-`>=6^Ae%XC/XE6+rFD.JsZWo2'k/k;hMrg<^4ZaW]Mk<1bf^fp6_u1-#?lagDq"n^-$%*3O+AH9,K,&@ZQqoZ!HG,M.?$P%75mKWU3A9\e7rt2H5]l[%*2IYSS_R#+U<dPHRO)J;(#SK<7L)<bsS&P_mUb'9arLVbOXPZIS::4N4;"$Ag`'9'`q%Z[Di(Z/5iJ'%LQZ+*b;Dh0BBk=5,H$sBou$h7D'_e!Kgd#W9?W$2Uh1m_l\l85@TpAq&#ob8(l"22W;b*@b<urg&!a/<`-VI51X<p@V'g<gZ@g)Z%41ERmF`J\;`Q7>i&"0br:0jA_r0fBSN?316#PTGtgEmWZ&aqi6fYkaj,A!f+I='>\0h'QC[crUuQ&FA7R4n*)oHsSm*jR?d6QZBu%X0S;W+;iN2@="-$"sN`a[YK+:F*LUrDJrh,bcnP+Xo-alNj>EO#3j.m:73/)A+`Y>BFmc-0US&ELqSA&Qq6:e$T5`(^?'U#("O=r%Wd.ec,7\f&S/^,N;leg^L#;Z=:kfbD'4=ef%:E2SoCA'3g@e2EpQrg]:hnZki$+H;mm/fRQXpBooUEe30f$l[,UV`[m4`(#;p5sU%oUA4OU_UG[.<N2LF>0q\Jg*5.%b-j%l46$-;_04lU$YDg.;?rM:>;J4Oc6$dgPe:uF;B3S,N*KCOiMq)pVB:BP%HlEopSHEdP[`Y%b$ZY9g.3N)6ep^-U&k(YR&^'RZ.+Xg+TQTTP(;3')EF,3iYfM<<5rDtd=&/b1KOCuPpaFd,o)l%;&UQYTS6jd<\0VDc%/8]AQ)R*%*heQ]S;-n\C5T?\*m+6=Ye)`nm$sp47HdQ3C1&.6o=:k*p;DXEEeI@@rFYr1a5n@]&'>j17neMT_jgg#gP0NV^JHblGCBkMkq&hK%E,4deI@Yn%&.WM_a=3k)k%7AW/SFUNVjpgU]#;7`!>q/hr[R[6&P`S'XmjoNW]X?Gq*"!EE,J`X&c#%f>>N*&1W6TYLeVDH-60?7%bbGVlQ!:uB;X0'pP<.Vnd1CV0b!QYZ-I`%,=tXf^dA0hWGEG<VE:PUBU\>%seA_pXhF)@Q7<.X&otK?eJE.2P;HhSN.=HG&UeJE6%LYH6`GT[3VKD.W\mhuSO.[T%rb(*ftkg(2GmKul=q*PS+P%ORTp\c?jI4INhP!eWEqFH*3G^(m3&9ETF%Yoq)`&)E>T;K]K].6U,%\D[2M8_@;ld>GVH"62DI@.0e;eb>^-_-jf57mqKH,e9O;.Oet?U`V!aZE[Qn9OB<2/0VD468t=ZKSXl.LpVOEQVPE-lqc`C=NI&g%*$B!ON:GN:Hs&o$Glr:+<u[8Y:e%%FS#N37b$6b27"R-;*st>=b.4)a:'naBH\>2PKiMj`O\4R*%a,6+^%m"MbCM%n!_`5`2Fb\M%.NW660^)8gQ"l`uV(n7+''`gNT&kCXQ6aeiXY+N]UFALqd-n1%!L9`.gE;9m.&o`IC/m_2_k38`I)DJ4>B*-<CE]D_pXc*RM%Z;'%_+kBXlQbg9Z$CH=Od:j,IIg\pk/Wg2WD,0'hIGDLjjk?d#nf[#d6r#[Z+j7<9+9CdSDP*RLEM6nL^-mONQa+i*)Wc:Ecs0(d6<go%R;S\XblS<)n>Sb9]+\rW<[SOhoNm4'l7RhO^^gDTlXXa7*Cug"b+O(9\]uO\il6DkJ)'Ip?Vtj5F\U#X.l$(`ZRXnUO^hmpG[c9:%,B$f99'.pLR<k>_d1De?$'^^[?sbBXa2t1>Te,0DastF(#3\,@7&ge^G3o)0mCbrb#T\5[qp?`2Kq@D.3SGYU*@lDPKS>h[G8(@`%mW*`RGdfl28B\sDaE/,O9)OpdoQK-cgYPh>-U&e@9YX4_HPjN6G-d*1a&!hG"!56i.qMYda9e"@/q.N!M%d'5OHN/0KU$p5RI5Ir%`A8D-n>1s>WKL=S%HOV=+F:Je&#LqID-gN?5nC,W&LlRik@MDr=ghb?6uT^/Q3Nm1-7F(,+']+Qh>LX4gMZ4l`Weo]*K24HA_'ek%7,C'U9H@%od=.#n,=R2_Qh=oZim,HH=GZ*[lH]:bepa'>>lZtG*T:Ui$=MtkZ/VTIBcn0;b<!^#N;f/5G(Dk25UQgNFb"OfA3(f-%bu"*0@I^8kKau)jF#](1-)_TK)PK6[ZHt8.gI!1<rV7?8I40YHe@ApC8%_o1#,%FI,LV216uYYua>D/_,_f-,#$$>P-;69`-7dLV%%B`3-);j1Wn8NRf*$gA`C,2MunMNZB'j4o1=q-7L9V/.JBMXkNAp1uTG<Mf@OtM9iK$\qt$cN*_'@$f\"X#'>Adkh13DM&ji)./=%bc3kfZAN`s-`7D<V-jg+KNWIagZoD'@q/5S_+XHl*Wa71lV?ZB@]sk9E0jB5oSQP[8>`&@DGhk8Q\R[pObZo2fKWaA!ECtn[02;:%-Z^]c'?B11;r@&aFh&WrTr"l^2Sam+>3N87DCg'''V!BVQmEq#Hi&GA0gu,W^ARuRm7OYFfU'kn+Dhpmm\RZR4-$gD1[^QQMO!LG%:5>Pdq[kH<,R.Nj(--kqW-R"_G;dfW(HDW3g0N[_(ukHW/gZa&e)%M043iQ82l(KG&Q<.M#"!jq=RttCI;l326sU&;SpP3rceS>B%jlH;#5r5G(pq3qp;C#?Z76b%u&/6p4jSC)K'Xe!3]j7RaT%nEqhpCNN<tZ!q(%2j[G?tliKhm1f#$D+jp=k!?Ddfa@V/W-c_s\;_%-X?2#I%seG6*/@X]5M4%0[F[96eMX2kUeF4d_rNL?!-*!<sof5XoNX0P.BJ>_.G_B-k,K82o7HFK,C`<5ZL9']t"&O9Cp3jfjEro%S?R,tfmDdH<k1gsW3l;F%F#,jTa)mD^/`0\M'.u['\-L"`#c%3U=5u9a3c(EYpkUcZS<XTF5AA:rL40qpQdUrIR>GLQlo(O6f,hV%NAVFd[WZ_MW,AE<Gd*0KOCAhEpOS'loW%Lq>>4$&:0N]Lf&:GQ5]>a>7KW_3\1XQ7SaLgn3uq:h+UrE\Od)nSOo[oW\X?WgORD12%8uZT[8H#QrCMZGU!sOGF[a.k,.hsZZ2'<!oL?HL(/AdX,ctko4JI9P(UgdQ/6\4l[A9sYrb:DPGaUBL]o97&l,RBABk)Q7'h!@mu%j,Rc!]K3un4%)\djNK&i7hjZ1S[`nS;FY]O6N0g<4WHJ.fH^$NUVbTG<O_b&OUrnjf=7NUMl-tp=RDIF>pF\;blP#EF".SQcAb@G%':qNGg`C#UW?g#8\g+>!a>UJ+mA51:&Xn#H[SiGkRcShZ]@n_$"r*8^]J0AjWiCb']4G%Gl&\!UPJss0<"ic8KfXlLTN#dgFNHY!%r^9Ze]``.TMX8M$8VUe$nf70\20Vhn`8PEJYF_S:JJrK/[WpNuibrf&LPL2138gB7)rX`@gi];=7\40i=s$pKRH+R0S>+GsJZR9Q%.@M\`7h$EJ2-"KIhGJT0Bf.0ih"F!@2$qs!=DrP0Tkd0JjKtsDEb>OIi!m&k10ET'>Pc6"(9,48:Qt8F3Mj,L?.qY1k"K$gYFW8g%)W*$8j(jr>.!Qc_;`!T3SG/4A&I[mk^6+>qml-LeR,)hc?eCd#KIc[=ngK@cVrK^BpP5WF#!gF+]A+K75/-)GlN\Mk?=U!=FN8>:%0Zh>"Qrgq`Vabjq/W+O2DQMD(O7!.DL+iuH9*%-ofhmt?4>uV"hR1s')YEBEV$Q?$mn'h=27(H=C3,T(79]o'A'&-[(,/ni4lgWr%S[ABfTe_gLR$uQI>qdeO]0.BSH-Qfm%>'RG8_XDn+AB&6Ce!Il7j`8,!Y!%G*.E`@-lYn#k-FpU%-kju`3JE=p"6LTID&oQ*FI!b%PdTK?`cm;U;\k_B'27q&dO4!IE?#/tl>:D(=`K&Lg-GfYN9j%HPf"PskNh#K9^T8:KP(8mH)o^V.YUc=+?\A8^Xp"R#NF7B*oFf*%lphJ#Wp\jJ2q/Q#<N\B0&0R8PC%3VNl)H*UV]k4u[ED#&9'lZji0f3;6<&9CafYgXH:^hjkk&b;-,8FsYTq::)cc^S1F(P*NglZX%=p2Z?UB*ZN2$`j'hlF&g+hYqM)QH\I;WmGqDXBPSp?@&GW^\&WVS!%q2<>MV*863bWJYPjK-H8QMF'_I_g#`+R\5kCDE+JIkLWG3%/iUP!a*=uYD*#cT?$9(5<P"h0<ANASp/sl;(%'/,5/M/2X9$;l:/ald_A0$pAH_p*!9#uHI+-l[('2bg,564OlLb@M+IqL!H6([K%3(GG5Hr^hN$aa'6?@'tqbBE(PjN&;)L"W<nWiORZ.9d5^Zbd/!7K(X83JVC7HsWA&g!a*cA5"LGO/Li1M%tgn/5!2(L_</Z_<]K`%\$3VgNN9GRI#f1gmFC]TCG[0#A;uR[("$#qe#`!,<jS+54oNc\']<9)jej/!30\o4#]$<2WJO5_Q+`J3id..`c>H3n]9UQf@I`eW%an?:0O;BBT&dldWhX2>FS_N-qEXc/2@YFja7p*,bKIKb4CK>2#VF;MeMfUl((IR,(06N<P]W)<mKBQJB+QhS7!@9W*+cS8RmgG-l%KR0I/g_95P9J.jVBS$fbI2`Uk(HO5UP>X:_9+.P^XBb-_TkG_A@mr(u?."PQ*+\,Y^YLQ\e[Wjh\R(E/ohMbaf^jj?12,u'A@r@+%,ZeF2hD-Xa_K;B2!ho+/Ot*SOHD&Mc^aI$cM/&W?@b5_h4/@\fVB,ql;!4c^P-g1^WG(VY0VM-r8s0h>QK/cc8;W$`>>!D2=C#G;%n!(VZMA^">oGFH5n1HT@jYM]@.3(s%SX83U+AEg>UkJ,J:3YP302qOr"sH5'e,udg\R6in9#m]'?!0fo)Kc%%Kka\^'Y3D1/,r=>%S>,qB8q<2i+9*C#hnG=5j[r0a?\WJN/#DRBArkQ<oV<ME2fW&\(:sbHG2N!4kgj:'d$MFBr>SPO&q7G)q4Df-]8h^&I":@ei@5`h%8q\2qTtn`UIXZokX,Q6L=J#8i*0):9=dQP+C<5hJ1#t>3@J"o,SVf*AL$\O-eZg)3W"[t?mh-/)]d\\F_VXnG>70gr2jB[jJ("Ik%,76>onXFT)AgI<LIc%9:J/mEA%t@[eE]?Q@-_3t<!)f)F1/nLsfE-c77VU*6\&qS9n8-qS5\S6)dG3hdh/ib]$-a.t[))'&VAub_%2DO06g!%rF_U0R1dmtR5<Wfqs>28]$K-)g`4j)q.qGspL^N#1;=Kce/C$NZF^X+jAE"nf\6T34k0=Pg6Ohsa%1i)^BH1_0`42l5)%2ADOO(e.qi#5@08I!I8ufi>Ot>^Qu3Yo+?KLo':&s&9U`hpgMN(F6,a'#U'MC47bl;'#6XCIR<S[YA6Bgko#$VE>b5<`L#L]ug6A%UV;`e&f4<f%$gEY#JN^Sc@&_NA[OtQNcD"&FA8%B,Y"+&P19qrQoJCaZW5W.M"!gkelgsSBu$24TPOIK,92`;ak>41T_,c6JtfUs%9Q<7YhC7#)R&">7To.lC'R.,B8^#1kp[XY'1]UnF2i:Ui1j=rJ\=a5k?0qO>1%fbp:/hH_dQ>FMY1S:6]e<2U?S<7D.4>X4r9nAC%#CsOB,N%p=:,1U^@/c%HNd$B4@kj#/BN/0$KELGT,nT)BZ9;4CI)#\9p#<L:<)[4Rj:UV@E4<OO#c+Q!&k!iVTM3:_?eSLZcdJ7o%gf:+=<,WM&W_[[O7SK`g=R71np!efG[n9%*#E%C_&Z?"1aD6d#hm(!L*8LJZ^(KI"*g)RL/uE['#)\enPLn?[9'8NI(Zjgd/EK]F%BEbZ]=F,/S-oq654!9Sp#+al`s/Fik:;)[i)RJ_t4J>Z58s%sN(@)-Nq5)p9+4<IRK1M[35El9XKO!HQ)A?(ucL*]n.*3``HPGZ'%2hYPN[W*tV:&LU=Hf0Qt:,3(+"2SHcXTJVmYX]V"@jTC5*=o(A49)8jd.Q'Vp4HV-Q-M=oNAV8;U>F(C@8:HN'13U#,fR=A;s/eo%ajup`D!D8Cd9nKJi,iQs&&(08(O<[J&AdlBEkT2=H;\9fk@J#TqYDmGI3SPfIgm%-DB?LT5%P4/]dPD-n^#r4rN8kPB1r*Y!t4*L%I%ttYT^04KZbhRsrQE*[p'0:X#bCY>aeKB..iUMC":7)!h]J2gpY`1q%4+s0VR&ck81++NpHe/UC*6D=%fM\H0\GRsaRY)A2PAR.%1A#]W%m3DO@UR3cYQltTj#'+N.Wc#I4Dmif[PL<rd*3TEEOGlGlTusnfg>=]<OU`a@(on0q)]_(>9pI0?P4,/"ZCpih#Rg:aaU_G%8E[FCr2l:b-H\aRX[:1S<k7#*2\[ft(EoZPSU3%jXaq_mM+B@B"q4rcOn*Lfd4"?h;KiK.1j9$l-O&mON-J^s3/p7u^U53VoFnIW%17]E7ni;hjdLEG$#4-aG-Hs3^29$4(;5/WqSP%6H2K<>f7@q/?!u;&n:6Mkd<<IXRbID2R4FGoIDglBMnp&l+i*<DhZ%t>uM3-Pn%E%OC(O9M"S2;^u/kZS!cE.E/=Y7$c_8>'I89lZ!7E/9dfH[.HDc7&U-.g<.PP3TIpP49`1jC%$Sa*M?HlOT"oERoQUM+,.*Fq\C-%>fND*<b^W>>m:.jG0ii)a/SZ/Ie*[#q9S!I/43'4i:23]X!J#1(aUOZLWiCEG>%5:jjV'5P"!u=I#jg#89bF.USSGGcipIU#lS>s%_O3Z3h]!1faH)a7':@FDjo/&DjLM/TMBBdn7HEg(-@sFi+M>:G6&*>c-(f0j]6W>)WP/aI(aPJonOp'+6j$cMs-9'1VI8N2:CF-`%HU0h2[pqI.$4cRd?5oOIIMD3!Yh*$]YmC4"@*FN9+.@Q6VRBip+8LA9+QUSl*$2'U^lBYkV?n4*>C/_*6b;]A7HgD0*L>tk#J]qY%aFsk54nh`DW!5@E`f15]N]a\;2ufpW7NE'6RHr]6R$qHt\77_J_(]Jno!Aiq7beN,9jlg!:1_BhHbR_df6n#n3Hu#AkcM1)c]'@(%T^c=S4sSo],_o]6EdtL;bWYIQr?)()0E0/PrUrJTpq-S$T76fYs2uLurf<u@?T?t<5O-#]qQKn`n,CL[r;FD1qChj=0E:%PO2$2E%2ui.2riLVF0>IJskD0)dq&`dgM,rLlmgPX2jfnS$[$kOY1XhkQ)qr4F>Y''u]R=BnBqRMG*8&9EBPdksp45:=2^0*DpU:I:Gp[>U%>2-[=GI5!j/oCbmP6^nEX\QVC9it5H\Q_K)"ip=F7sj;+G44:ai,Pc`+o%)%,Tp?%QOSdFNV7L!)RjeWrR][9@3:Nr2;mpI/LK(0%XIQbtDdh`i9@:U(D$\e..J;`3F(&W`kGl:l+$[L5m^\0Mls3-[n(nH;Sqeh$m,^)c3!1/@DRd(eiho70[=e?(*H1/LK*?>er,oR=%G='&/EIGN<Gi(UO:[]DIhRAiT4-:QO)Yq;]me=d'[a-oS9i"Z27D-<i0-,FSjO[4rc!4eM(V?ThHWQ[OG*V)bj#'J*XIN\ZB#.HL%Ga)O:Ldn1`RcQ&XKtAT;rSm]D'=u<F3TLlf(90t@:RWgdUIO^gNbO4rd.sV)M#$cf^@X<,A*Ul=H(BRp7:hWrl"R"h]Or/+r;8F]%kA;H9[qf1K0>X5MD1u-HFb-1"SW;.`_TpH/E8A.YNK`12#g5j+Bn,2_>-%^s]PHHmb@;4?-FId0(F8>>F_%,O_!(AHXG,JgGDaF7%a(6Z;'ULRhSHCC_Kh#A/Bcn:2Zb:e%IsDf:^=A9-#bO0OM1_ti$%(;SQ&`NCOhH4t[3/\;>lAUgVUoT,0C&@;UnHUfi:@0))tF43%@HCH1muOZ85%3M<f]M*BcmuSt^H;cQ!q@2r,(:,%-,0*2o1!A)coH68#HDZcq$-T*p#:V!a7@(=ODFLc9*6)g4`r<1dN72B00T*K%[57j?>aHO[Vq@c">Q"1=Fu8TqQUX.MZ]S&=F*t6]CBpR2LR0h<%rY5sFFsnS_MR=@_T+k_-l]bpV,+ej?rc8f*13^nkJ@nBhC5#?%k:aJ0-?FtYGN>Fpc\9(di;$Wn=Zs_>[@qdPgnp1\jV@3k]W=N0dq9sfTCYhf#GTU;$<iQj\AH#B\^6RderT-b-NBZo]pcs[Nm?Uh%A[tCeSI/fA:2(`jg->N(%BjHnD[@K<;b.CUX-5G;90KI[B.>sh_#/r$_T-CXO3_/QPa;B3R9XfH!*7DG#@I7>]huss\9]0tX/Sk*%\SZbDDupAp?A=@rnb:%Ug>kisr)-l&LYVA>0ZcoEX4?1<Pb/@NO0ZCEoBu$id')E^0^W^c5lVQ([<U9p65=>L><sq6BWo9UEbP<I%G(17Uh08oWRCi3:3&6EnF-8HMkiLP>T4eVO?2HnH(-]BK_PIuRoZNSh/1,SUs(e"H%mJs)q)U-'322s'/FD`d]r]u^di-FqhO`_U%]W<ht6@2,0*V^@+k2TY3@@gs&g$de4h1,B;=&D.:WigLZ^m4X+Asf^4i<>^tnppU+c^N(V(,Ec]iW;0[*>onNmZ&sZhtD4i;$%rh%^Kdg2b=Qgr*>B%jjA^?_R4oM"JcC-QrkX@bot]5Rr]?dT/)NYSDeK4&rOb4"OU]_TnP!4[cs9?DfKg/a>3a"ucp=T.6c[[J`GqDD%F<CT5\m<10-IgLchheNen;3J.6D`)tSG$*#rRco)mJc-AHu6kV?FQ?+6dG%S7seQhP)^^ajc%.F)IIo0pCeomK"f%TSjXuZjUqG.%]?_.IgCN7"==FZlq.9PB8(RCt^9`Bc`o_f3ZRusF9/5RqIXU(?Z_]KQL3l&flsn=q\=@5T\@$#bLsoG.PmCPQ`[!*qXOJYSl,RL=%(R!T#OLr0Gc0FYXZ]HbrJ5C"gXJ&QtOW"XhN`@#cGZl?CWf^^O%c&T+<,?sG2'2O>G6+2m0adQ-G?Zsr>OQCi=bk@lRpC8&CN;8i%Yhf:_NarCRXDXYUdU+&&+1`pF)R'WO=-HBgFR[b9#BY(m?-4/Mc=N%.WsS8)A$HII_fC"O/_uY"%YksF%;XY7&Rr@oWhD!(NLah*%RIDuC[6e+JI]eB',r<HiK+eoaZO%X1_1a`qSn=g$g$_b`=RYPDq4u.-2Qc33Jhto7DT[nB1lOcZ[tcCHlI!Kh(;*d-@-rqI<)61s%osh"<5%k)^dsOJ/C*sfZ`/olteHWmTlh0#uL@`:RYrA2*Ejanl%r6-&SZ@-'#hX1tdW`e^>eq3Rn?'AVOPsUR_8Y$Ab7eK;gr9iq%)*Ne8C^?C9`_AAS]R.Ih=Q.a`U-sZr%$oB-!73u/\4P&;&3:ea$^ITQR@WHAHG,S6_2QNS\SnV^5/Dn_DE<J=8hPht_^Z'n@g@t0%/a9_[4(&V"Yh9FHPfZ9^hmO:JedGg25h3J!W!,qi`R3jk_'%h9k@#)=+#@RqhaY]EknWL8`t,;X5R@oLklGDH7bi^>008N<\mD\)%CZ/8@'J"=Al.u+%7V<Z%cq+e"3Q+!dg-B_(i+_0cj61:a0HS_=>nY_qW4"gupk+&\&V`OC?KM[%.eQ(D)SR,;.s49PrkiPVU3BuB%[c%[E;7n=dGLP>GRVRD"dJS`KL('&V8A@-TQ`_Aq0'WQ1oD@0m%O`msXWMY$:&5WAXB(IYD9V@=3e=JD6?cP7bA^1s(rOfBf_I!%%3sL3^*7"r1G7\ipWXE!f3h5LBGLnQ3M+6WRN9<bpOO*,"o[Fb>hS$=?]ird:S`rp<-\Ke%eF5TT<K77nTKs`!e<d>\1^f#Ve&nj$%6GA[+S:cP$I]MPooiB+ZYVko]m6qmt<?(`h#N<ns$i!P-=J[d14&$fk"5DP6pBHT\ZDP/De[fr?d&1#J=o%aFpPm4Z)2,_H\#8Iu%VUq$5e(D>ZU7%B$J7^2T=l6ABO3:>Trr2(`N`O#aV(,Y@ZlC1+J.ZbZ5jFidNl$5/Yd6M#,MZ4dTE37X[63)9-%l5FgIMnH*GWG;%hi&9o=215par+6jeJliW,H^Tqi])a:X1BDNrE<T?/PlX:khF@9?FpH9@n#DL0DAm`=J"@D@&7&7-/JtFp$k(o^P7B[-F?PA]c=:J%3D$&?*u5X%??O#V#e-e`bd,hA`FI;LmeF_gPCG"/rQoH0MUF5PTl]LcCi8&6[e?]pQhA_oXP`N=IiddViPjJFGjQ_8X!7?kMB:]3%Dfrjo*q11TZJ7&dI94a\`8@`fM!DcfB_@n*UL#MdV'U<=1RTA2nA1F9"sPYhC<`j0[_JncGP4%%l8Tt7P'NV]8:L$^*dJ=JER7h6%@F3Z9V-OOW[AtXs:884nSC4LQ>oe2,>,A,7/,GRQG0`M;U-:\BHA1JWn@[HR?KX?7OW-mPK6^pg9oJ@/7g*8OkSCJ8m;^a^!Td06%[V0AhUHXBMSG&5INI(q0Pq.n[2Gi,tpg]Z(aE7?a$D6m?*=$/'I9`u7Fg_f20_*50b/M%Bg5@Xk\3%N.'YR;1[#VrRT!t$5'_h->%&-bB\^-D#0:@aRKhq77]@W-"&2csm25j``j2Eaf#8&!!P*VjsI!TPImOiP!08V:rH7_6oY8+tR#*;JjuNFIZ/GOa$&p;q57mFL,%%SM,2B'N)Kdhq$X`]*Y_jX/'kpd&1fgo[Hm^jFV=;P*Z()5O]L&+8T!8`pb&-J_2W%qRN8\j=)fR=-`E>YFk7PG('8"9<HYhOWpXu%,,V^,S,BCo)-2U%iNnO?>O*]nV$kFF8_-UZaUio!s1d!9/\>K'\blAJNC3R9,'<sP\!JF*&>P4\%*UNW/h^=[EU\:PNVBMMPh*Fh%&A0uCD(Ye?lE:e5]<!kiVYVpYs.G6lD2b#s^.69is&AE*<Q4jpqEVso$U&P/3@PKrZ2e:In6\]T\LA=oEY#Ktm;b[NlL!2q\mc!b%DRIM,It,mb!Yg%/S(j:p@Epc<'`(jW&%[+;>N/D)lG0T6DT\PZGMZ]G3Qc:d]Sq:-MlW%4AU'87Eo!jamJbUf:Y]&VS+;lokQ\^p%&"So`dbtCUrj&A9R1mi>Md`k$o7KlA54!mBX1@X"dYG6O^qUo,Vk1LJj$Mp([`i?dGnR`1p?e]=&&`;F=#m*Xb]5FWhk(B3qt+\I%j]@YDK,*YHZ1IIe-YTlfPOu6fT=@'dA*Pg1eTX11,*#XofXIn8(DY,"9WX"h8-M.Mfi&-),ordK`W>=gmK;^eInF!nLc`:.nqkK`%"]!bemqa73>3r,NbNul=S/M<O&AL'mWMWNRMI%CFfZ-7\o7jON#hMaT;kP!j=KS)V*J=<-PhbXB`T<BSdY#k-"uR%c$ol[5IGZJs%^q9pL*IL*D;Ll?r,</Ao1=sL=)EF]d9MY[P,P"3YSt#fm.M>T3C$EVN=6n>I`\>6;;hjo0FH5C+QlbrZYPpMHMX+[Mn9Odi#G77*%p.`)ZF@j!G?[3>ZcFQE4OJUtn+jODi_n^icI%9bWS7;=TK-Sj!W@@h3(;-iL[U/aW,;*Z&KDj*1`U%n7%po:jA(;L=R=3>'+mgli%\N]LbY5RjQoJ6&-T@r!',g?75d#"c_pMU5ZcpkO0YE.b8IW=$KW41nn2A5dlf&6/NpMr1&Hf(H5k_`9,\,3?n;,;%=Z%?CLRU50U%,+&>srp*q/KM\2:L%F`'@]-PLf@0lVkT`69rsVqYhK\H:m='mF].XfGY%MLY8td0Uin8R9ZiN(dG4i@O:1_A)GFHm2dVCYol4bbt%a:WTar$IRf5fA:5[3"gos1oP\hdqJQ?&2,a,OcuEVaEni2Z<ST(,N[p8re]S3rju,a1>nF7Ff'X!MA=UeW$lc&1:q^chcg5XrbO0%JYBqE&uO2g<1392b62-94nA2HOish4bq3KRb[guNe4s8gJ+ZGbW=i9;MH/&%eGuh!3!:h"]e!A-3g;lJqo<Rbf-dHDS^4[Uf&`cX%V`6&?nEo4ZjGkr:Dfn^^T:OTRL-KY<%Qm98%D;Vkhu"CYDur,J?5XXY1=uuWIcM1(4+R9W]5Q^C%H20ongE=+g@k?t]n_YMeA/`*%nVJ-WHXdh1[(S]'G`&+(Qf:B!UKLPuoVe?0If&^625g<HkAJRH#lp";rr*hm?EX^(f6sfS,)pZ'S%X:LM<hM:PGe*$NBjrG8!E5D%B`%LL33k4)IU8Y)(T4Y'5$uP3h7Z<%='h;0>PS0?ZZsF\5;]&ra+li,BBus8T:2X)G2iA,;OXnmKUCrWY<R$M=B9m!RJmFC+1pQ!%R)1c6RX7Pa]im[9.*c<-?/EI]5IB/=lf+aNT6a7Eb]>*6C:e#55H:FCf,og^O^A8GKjh!`7G]JB=IhAXjT=E;]\PO:X4[4P1Sn;*%XV+RDV4=>Oj7u:EfZ(*MUFYng@J@N89%^ZZD>it/7lF_nGWU;I;c:>0raOM.oJN49Kt<M&Ys!p,aJ3Pn^"6j\Z!c6u23\VgE2_a1%j!6'J=p>=Hg+oCV4(na@*c"di\*\WNT6Ec--[&4%"/>lLm]X&ilN/>c+g<.:U(@GD6I2lZTl[8)qCeAkL;Slgd:<DBrb5]$(O4dh%n>Quae&s[%!t`F^L9911dK8/a.!.6a_Ld@Rqg%:.R^f*;A9Tmm0J@%Ni$*Zl5kH<[Apmjt0N-pV)3HA-4FgmWIL)=TcJReF<4J3]%UUK6E/Agg*7XU8u@(qAD\0H][03:qM4,'7M.VBk8p%H8D)s/mkVd0]9IOJRa5h,RnZASG:bg\:3=Fh03$6<VQ%59bSBodpngl>0+%R`oNs$O(qUXifV-4'P7Lr@n4cPudSDh=Q-Db1u%DrgASSa$18XGNJ*n`GpOVFV#d=>=#1nl._u?$kW$C4Z;h]3840+/)9Pb#1D-2%.6n6frO]>\20,GlkjoJubB+?ta5MCl->[PhbKTlc(HZjT)X-_S@WQP%"8pMS*e=KDoM4oPhVmaC0b>@130$>!-/O-bl2J`WeL>+n%(k:<I5$OUE1RC&VTS[Ft]/H=]?$9mpT!IXebJY+CY.=<E,^gijW<r;Ansi-8EWbL^L^;$#Sd_P.T@P;(Pmk+$S,RosgalhQ?nLOa%ik&X&7$gKkC;QFY)^D(j"$mrae)7Glhq>g5ZY5f0e_Z1:8Zb2Li)<_6?2`E(3OMubRC(,]O]<Oj=h?``p#PqVir^oo7puI"^G#.o%2o<1lT.TA&H>T#Wf-+$3LUHu4aX&Jq(SV?2^ElYC\R.4mV[<.u@WFV!$rH5^2=l5Z[',$;$R$C71>';t]esC'Q.nE<P=(p%%`Y\2%\o[/YY[qp]--h4Z)$+Ag@)`nH+P:QTCa?eP2TeA_EW]r0OD'_E3+S-ZNB2m1AOYLSd.$ojM=VQ`W.RVZlbZMf%&#M9G>MK"n/S3-%:@*`?8h<CEF`T<[`BHj3K<,"dDK]-',1hD=)*B]_D#i%q+coIlWn/4<HT$nWG4H4@WWaL9!P0JiI44CFW4W[:lTq&_,;(85mY\X&%OjG89AoWk&K>LNTk[oG"_pFS+pIVW&5B`W$;3Z:Hq@]3g:O:fP74a0'>),D?,UsM3]XlibT=6s(YZWG@YFJO-oim>(q>e?giAe;=%WjceKc<4jDa`^4o2eo$#>b[QpQ7l3Uc4l.]0PdkMU9E[pDnQQuJHQM<e'KfZ:`brtiU&ifK..bp%PHi/(3#JAJY^[7A^+n]:urQ;%4*KF?gf>bU:4\,`&l3*?jhuAgih.H*O&IF!Fl=YP"Lln*I"1Ebjtt'I=5"#9;&i7U#Z_r!?+btYL%qLlH+F[-2(a7"/'6cEZ@l03%LJG=R#28mq;$2Tf/Np[6<H59bbGGJt3%,6PaG&SR2,MKkH92A(2nt+)RY-GMfT-G2PH:4-5$O_'#F$]^`.W;<5sf=_7u0.9\Fq)_%a+jC1$RkqC?Y9?rTa+7O4af73]jF/X@_s?.a:m`W*.WBjO>-YdQFU1$+mhVZ=+Cj0d3^u%'>%flQ-`3T;;o"/&&:jm4o&S_Ir*!M%77?D)S8+_hIMGL8Qd0R(_B[Q,=h%2'A]8=M"7=KiFVa\ZK&FTeR'C^L40&U38.?"^5l8'G^7DrN$J6^r^X1;RW\lt&YQWP<4JY:J%0(b3S?L6<5,ci?*0QC]@XdO_"c#%^l#*,MaA9Z=H3Fo(iE+,q2AH!uE"'0iNbsg'!D`-,C,5e)=4XNh_F?Zj;5&S8FfE<Y3+aN:!%?#"iDL*hk-S/QZ`]jobM*9hp,SI,M5[osn;.1YB#`SY]`qegr2ICF$CX$Ri6n$*sN^`CrB'WLc&,q:h`hmq&U*'>&U"eb'FrQQ>I%_&Q;$e#77t`KJ'lK^K&>D-U^1+A06cP]eD?ZKKOmF9ouKPbY`+@UAm]5n?[6Dm3/:]dE*Wg1EM?qZ^H*R0=hY.I;R(LCc#1-?NK%%>23Bm=IOr@48QP%%$nJTX(mZfW%4gL7KW`Mnecu=X16O*Zg_J&VYp;Br71o4\DX%WRM/J<mP]%%9nTu@g<5OOjS8)b$E^K+G4NI1%8+7jli!Z%:&P4eeJVo4#LaO'IDa%;b/I*F255=cYbn#:%VOt=BqJc(q<Puq494shtg!TZX>6q^_,>8C[qd&;m8!%/[1]0A!%=Hf\%S$fh5eX%<GMnA(bBDp)A%sR""If3Ym)nXo=ZYh?5R/r)jGa<e]n;=a&WKr$q+*4;GG%%TaX`Ph]X16N70u#^^SYJ'ScsqDeaT"/3%r?diES\eupo@="b`Ia<B[%K#s\upIp!JAk;j2=bua<Xsub/JLSJ]Zi<m3M;&d08e!W8<&QZ.tL)`IMl/rd($(6<#HfnCmbV/0C``%@VuK::<l9!A<nqJ\Hu!?08Da0>AlqDUQR\RBZ9u2k<hRs_ZG!c6h"uhDGr9sT;YGTocBXi"uO5%UMe6:*mB)Q]\#5hgC8$FSYNFB%[/N`s_?,h7$"7DH0.[NDhBj-6eWP'=du%GE@R.AD]PnYAM;QE)khp`apqRJ!@?"@F,UC19brXhqBKucn&^Sm,]Ag62Enl\=a;sI3%4lWm82.J.3Hd,.3`3Kr0_2*oM[l'_KK<Kuc?1ro;93J"3-(hj+\I0A!2@MaqB&>GM'0@G20"46@WZ=MH"'54[\CM]^ij%Y+F!000%LG"N`an/)<BtrNGJSCr=:%r-X)Vl7<bKT\W=o=V4P8\&ub2aKe'tFXs3Tc[KRbL;Gd/["uI(64Od3+&5fn;A"Z_"dSgZ^LTFtojp%boElB*^](Hp%TsuV"c?oN_PmcpA?n-R"&b,[n]$GaC+8j.5pYY6*JI8:q9%?6\d?5Cqf]Q9%TP0^'o-l?Y3Sso-UPUn_6CJa1*s\%gd\1F66jreT]mB`G_A@2h:gof@PH<]XUU,MC1)uoZ)ep\+?*1i`Z)(96-#6l"7=Ib,W`Jpf-Zl?$TX*"eQ%G(fIcb<?U"D]K2t5#%_/4+/a)sHKjrGu=R/HeM&MrLpnpp<jp[XRb?ESB`+7+bS78^UK0]-Z9cp>E2KLP%7&`V1e;1g4Gb@S7'W1[ZBgT3TH7?[a_JUHlh%;V"2`e%UEA(.(G*C*7l7=OqXAm#Y":$=@/M?u<>m(iZ6>"0Ln*V3og^n<`*')b%W.1Ogn-&_A9h4#BHn1uZ-j*AJ"elEC#c]@$+"%%>B_Tf+lRac1cCPeSqf'K%aUElnJpBgi52j):1WNCT"S,3Nsltb/YC*J#^-#FBt@mAei?C[8uCfaEjR+A0F=]&=WD)?irPOCJ7k`%3Q'jAB>H/OE2Zc`1$Y%j(8IJSgTBIKfarJh"'7WY"[<FRj,!H%1c:mBkB?)kMB?<aImV*.D7]?=^!jpD_sNC]o(FId366]1AcC5\%`;f,>,C?R:Hh+X!c+cLBeSV''r;'>NJ+k7=rV)@nVfPAU+5<&ks,rciXd8,s58)#os6ck!#C<h.8s7Aj-?eVETKWq-huE+ZFh8du%dUVk3\?YB$72X[T"f@s!=17pQ]#3:*Xa\WaDE0hI%^pmP)tO"cVqge!p$>NTf<au6FsH]8(`HqN`s8$:0(aeY]q*WEasM6(1`-!m%j9HX^q=`t[7V4jhe%[m0#>G."5RVf^0dGjV/3`8),'g5)lZahF2K'WK1#WssOUPL_p@kI&aU&o,UD/L,pG!NS%:4p'.Rn.WI[\Cd%n`jXAE$3*bcP%GY\PT7LQGMtf5q]VYl2&ljJ,Y&?$?$+6<UM.2c3o06)ur$]bt!/#"K)jrCMV!peN)?cJN=1:]3nQI=JK>;c(j^h%S.2N?%;>9@=QW'I_0t8+5lOi&lsgJEmEs\OA]Jb5L!Zr?mDKJ>=35e>GJfth&:0uPS)2h$]n&)mMMZIh*uFg.$XmgQ/d'P(KgGu\%Xfo9KBp\O0BmNkU1TOt,)NX^<>]5DBF(%[g)S,gor88=%ZF^U1qc^X4&(PWCf>?eGRgtY7!DA<VJ,ku8=^F-]k5u?pYlI!#a"GIi%@-N!6kYd'-g,@!jS)c92Vm$83%1Ug+/Ed6M^(D#>e1j]Mr'Mh'=<)X%d;1\UoH6AI=E+;>g3%0+q_&oaa0Rr]jH.@kmr4!WgnO;d%eYXE>/:$Dd-eEktI@?N0DnkbD`]8,o*]I0Hgti-!Eo1,SS#ZrD(]!3fDoKoJ\@&hK"!K@9XaJ'ZkHSK3;/m2rSm/8]bY]Ar`0f)'%C@=K!&48T!:?(,5k<,Tk@V>AA(M5"OI99b-iF.&5VQP]?>P#W!dP05CCDeX0o:KTs\7Jk^@'t?"kgeYO[g-n.r(]?3E?2ed/q<_E%=t]+kHM+c1s8Ft?s#+g-UH1N(rY/RajQjQE`?'("J*[ERU=s(KQ3cKHdtn$mhqm-kQ<\AW:0R",E^6!A_Bl+/3[]B(7Cldc)*&1E%p3)Fe%pg0lFnJFbeDfabQBZ=`Ucq%:ktq$'_7BNno+"]*950$nV+dI8kR6p)<#J3=q=1D(=+cd#iq3GpV8o-)dG)Rl^tf/MaRSZ"%iMGYm(3q=P9Bt=O#E"u/[XaR_?bUU*E-p[6CMEbQQo9b0I>(ILSdYud=V<62=sH)<0V*/-(BadU+V>,e)O/Ak>QBghl*+Pfii?Q0%LpNZ3'fcnBZ@SN$8Yb*=kJ4[,YQbZ6J'1rq-%e#-^?g1>pLA5G1H:FIUUYR[B&m@3fHD;@m"P<`oRt6hiL3,#>S618@_0m*TU*jL%C<iYq^PghWD0;gEm%WOiH/1hoVTTAV!<2Es\5)6[3GoJ>(s\ucb$tAn2q;qkBLp)/Lp.hiiT;DVk@":X/u_]RT,P<1b&Tp1Z6!8S%,EdC9TALSI\#f-r)WJ`6GT]Z1KGM&gbK""n&%Eg6ARqo(*k&LI\%nu4+=V235;hk^9LkI^a_OIqcQ;?1<O63P1R!4W!TWJ$8mFp!%KU.ctSa=IBRYOD[5c(g3p;A6Z#13n[[_^'qFc%6d[4SdlRh"1\GFFAB)!GFU-2@2_&;I0eJSdV5`p-=E$JF)pDBDeTD>4FBQqGB)%qG^@`-e,RX_B9%GD/MQ`Ma`MgeSD_CBc8_R2/9/5;[r*J@ps;glHUJYrm.^"cbZ/u3()"1']V"T[6"j,B*gSHL=J,.Zs?_"WM,dY%Y-f1*0lcUc[^GQ`2uOG_na&5?];$@QS!g-c0Gt1`/T-N[1M"^;4k3:(b2@ke%n(+&$MW2`%gmDG-Bo:QPMqWWm<&P>/r:X('>K;"%CC&Hm;f3!Ci.NXS3,h<a<%1J?njoA8_IRmpRQHKjXqK?"G0)hPJR?2nm[a/U\+#(BK"3AS`pD[UHq_'rcf7KmPF\Vg,E+GgdrXnq%a*b>LG>9k)'eodq?;WoTPL&1t:EY=><:,[H+MWc(#K7X\*C1X6+aC99jST?r2rFco#)Q0,9^ah;#CNr[2=9*J0a5qrlZ?-tNMS""%r>deSR#QfY:+S2Bb0RUXXZg)QUJ-8XeVFHj`m\I-oJ4rfNjLfA#DI2G^J=]fqt9a+9kQZpAqe#4AmXVD7Ops!Id>Z;/F,PXG7rPr%/iu7GcDM$t/d,ILr-"o-LgB-Xo=NL];KuIoA*uD_Q&;>?r*\$sBp*^lidt^ni#GN9;PM34h6(^.lZoB8\Xn^WEPEO`;V5n^A9$:7%W!L$TocM%9.7:H%g._p@UeKDm^\GEV5\g?W5Mg.\/2,m.K#I8!c^A*HGP%11,^120%qn$BSXjI^`;4*/[Ca<P42nlYojHL;dY7[X%U9M3$kE,.iH<IifiX(qOKQoi9[S4n?>8]ND\)l?<G%0CT0;l1A-u_G,Y(\7f2l7;!NNkO%s!,nllG_uc0\YcZ%)-f.CKfk&mV[5N%6nJ)'R>#-`ilJ,ki6&osm9(LfVeu@lIWokf)blZs.sYam3)hA;-Dh`O"ts"VYttrQY29l9V).oAb1in`DaVnmLW;Z1+D3!$T>+94%==1T91SQ-c?4'?K^&#9,>R0:CM4o,LK*q4+4?"6IX.h\/RP2iYO(%eJ<-%ds@%#=T,o>tdpRh(H`-#JPgpg!)a?Xu?==ODoX>'g:%2Mf[eU^=QqF*(1D@bP-MQppGLXX)>]-2;Jp1:C_co575t[9`Uo?i9'thN&=VLV$VuFr1V,it%H$?)7Hq^rM]FpI2s6I(O5+mmuo9%4XNt\ea7[j30q<#c$:Rm`\&^ND_cpskg$_dq4O)K(eoJ=,Ou'QN,+92]G12Do$TJnOqiF-e_UXQ8kMl2)T@ZBZiX:Y\,5T]A,>Z=%DJ3D5@C<hlC2f5j+!:@da"2_<Mp$0_jf;SJQMBT[%2b+;BGGSWr5>cbT(%sB7,Mm5fK??<*\6bXOcG4=s!\qGn8qs4R1F69pNG#a%M%"U:H*C6Fi6,N$HgHf+:!A[g&u^#_mYR8I6"V>LY$$6Mq)^EZNV.<%-M></<EL(kE*ah[oCR\%M7LT%Z;I"TW;0IM".o@]kYU:.%91)_K:\:s;?K<`H9UD@mGI;_2Nb>&&/WIbTEZCnBeYC(Z54oDS5e\L"kGFf/f%7LOM=tkXrFm5aJX;H(AXT]g)/I-r7?#,77VZi"%m()VR:urk__ieiQ5LB^`.U'E1rK`>EmA00kZ,B>53>DQ?(,`$dP(!fD4Zj2tZ/;WH+eG&BIh+Up)[B&DHX">tDF`0I3Y:$en_WC3%@]8ITR@]Q9/G6R7^:@o.WsWTe#68OLP)V]ZZpEIRmUF5_J_1r33)'Lf4;*^/S7+3&qA)/#,s:^'K?Q\8?9bBZ;j*!=HRDkFQ"SZ3%NRGa&^4$rr%KA9Hr3_`J)2VSCU>g1BUOpo0c[#<T.,9\GVNUC?q`9`ueO[<2ci\&6S@c>P;5\RliY!bCq!#L?3pN#$P8J3&UTfZ"%VV/ouZ)1N.[nG%#B=d%kH_.0Xfp@!MXogBpD*[?gj/O`4`bA"V>Ig'@a1H$Eid:;d\hk8Ih6W@CTC.JpFkfaGa"c)ZUjWg;l`G=Q%qg8W9hfQ;o03p;LDcAp)DE[sCQ8$5dH!]:%Dk+7Y\3&VOX=KaM:X@$Jh(Z@2m;W(]4miR1-VmkH&jHW*aj,)bT3`f?:]Hf0JVW-4%qYT%)pn0Ee?2r^qFCokCTUBC/LEZ@nE8hA3Ck773d!N#9H+S"LJ,X`G`b+C\d*A7UE\HG;DCkks1q?4B&?Cr&qmJ0R'2BSO<AH4^%W0rJ;\;F^WYQ34J8@(DbmFL%.ms:rPVMFHbC/ksds#rh8GR:C;?JelmEYM*G]o2CVgKT'ikAKlPU6j7`2L5*7#pJBmBqb<A>-_&Y%Y!P;sSu0K1$RR1d<]c-e+*p32e'qX:]aT.pH4aJ1E"VQq?<Y%$lX^QTKE58gRk>58;d)RqG9`DAJ/$l+cY_W.f=(H0N8<c1^q0g^%P@J0rI6E"Jpc*_9FUK:;Yf2scmT)"$HC9DPahch^J*bhEd.(&d%D@H+)gZ_oZCuKOp4g;'.lR%[,[S4@dsYpfKTA:Ki_+3beNKq1%dJnI&eirh[.h<HO0DG_=JRA!"?cl!AO[o'A5FD#]a8Wg[0UI9;G2[p6s82ii0.1WW.FbI!q=`pR5&'fbs2W%/Krs=CcQ@W5LRL0#%?Da(.Mj$t<lr8`,,(=kMHSF9I2K'+cHm$-[np=`7h`_)@4AO]kO"qEf'\C2@g8?P@"gWo+/;f.57Z4u'rPenemcOD$-j-"&Mm!bS%<#KK?@;eXhBUT;P(c#gBZcl6sJU%]LqCVS1GQI6'p&O#5e::%e]ElB-c2\'B#?;>%3`J%MG[r$NZs-."bu?^]1u4uVLXg[c9fu85%N^/DG.k9SB8tJ!\,5We[W!oO>!#rc?C-Mlgpp/gVKhGRfo;aQUB>Sb4Ua@1.m@mU%pA,?GhehuC*%XE(Xb?%_"FM*4?\>Njl\h)K%UB_H="rF?<cdq@%#DA"(65C.+6@Te`Tl6H1Pd@of3>k>!$%^-u$Si?TJq>-^Xs7]p%Gq67Jr,g7-<riqY'_PQ#C^2HY!B(1KOd1S%ao9G&$Qqj;]gjTW'0W(EZkNbD;g@!hN$iCcb[r&E;$_Cf>B)"qp+-Z9PV*c"MX1M)_dM)""EH2KA&&\,0CbjH+a?bp)UO.=KIe8<%9Ig><OS!*KjTR+th4='^'0FdUMj6JoXR[Hi-%'1Y*p<!!rpi2A^]!.hkA&k03pj[O5)+>_cY:11+;%&jB?XZUcidX^SsFhGYb-[&%LA=%rhp'V)Nf*>>s8+eIju+%rP-=^(^-EF_L/=D<"69>sZ\m5>1-*uA->oN/4L1UT/TTftZ?qU'.>8_Y3H'E@aR`j52.k4*B@F@:%7Wjd_3<^IVSd2SM4`ECa:,L3m4W24\b#cNg4KT=F/M"R._-?7],9Q&QjN=fTi!]"bKBcj=$@PZ-I6mt=JDaUiX#8pld6n#$_qOdP%&^43?H8#iAPoW,+iE]6k0]c\rD@g%/#-orj1QZI=ff+gQRPXAET!shL5;ASCdZ':(=Au\<4oa(KBm,>GkVD5VGbMVrAm9laMM?V/%.:r:Ts6st,o=t1GTDm[8s0)%"r=Aq_+9(lH6T)crpra14qHn\u"\LZPloLJU=bt:b^"q_<b^Rn_UFskRk26\NA3!N",]U'Lf5l2I%a9j$DSMQq!Qa0+(p(UZe"($>s+%(@=?$0&NM3X<S$SY0/-MKXo3lhCh5ED.+$>3rBR+1H9\nMI.ch:D'jueHh@e]&#)&kuo/uBIK%I2/d^;Driik>FC^kje&a&t[;E#CS\1MqD68N;9DOAeI\+ml.[D\(B\`14]CUPaP\m3R1?r67pUrk5ertEQXs_Z>.GXLeu&9gnPFP%LZge"C;@*NO;>l\Q(`kWdY1DB9iXLj;':K??>JEP2IY5dLSQhhUTO[e*H*@E0p`&Z<0DH3(<\F;gt4njXlk'SG]+M>':<('<DV/N%ZM96]+(c=4DH85Mla58m/mq<\AI(=K%?hs1_Um@:p.K7bleo0Wpm/lkG.>6N^l=eY>R<otj,s)W%eCdn_3<t<M`Pai.]:Xsc0qfm%h-XaT<Qd4>_O4+6a8K6-d<"-CF'[2-o8ksK-aH8KF_EhfOeOt95Qfn0Ij,m`5N-uK*jDK.j6X;bj.MA[d%lq8W%e5p$M,dK6Tk0t%$+=GR<U@!tKG#8'<1i,VX#Bf&O[bb#Y_.@u"q81gaJ/?,5i:\+\@5&b6TiE@>N$[rmEEchUtt-VEN;3Nb3$*YVs;<-^&6eKT029S%.\@/Ph4"r6@"*\RU)Z4C?I#_Y%SLS>a<F"-j.UiV2`UL%4?X)rl`W2#$UksJnkdR2="k!b7b;)d<G!>.[9BB`Qr2d11O]iiL$c65%OaN3^G6)V%QLBZK;q-@?<V`n#!2!rM(>oE?Q"^r0UgP-@Ct[@,Ia_`__k\]faG]\oR3/EX33.nVZL)blb^c<M(%P1q:.^@VFlZk<%cVmnJ,#-[W6/fQ@:;`[@U!&XTc6/'b<kCA*4E%BWgXn)ucg1<WgK?jO>)\dH\N!2E3R!H*>b%P;dH5!9O4PkTY80>t%I;!e%f8b1%d1SC-/R9uTfNFrZ1t)jbb$ej-Tc/_XXr;)re(UEqA&MV0WiM.qSl^9k4d.nnej,P0o8:j9>cm.M,S'R2+pW5^agYtq(7AIbm(p5h%%$^Snc"H:3'W&.%W4#T+DL?4oTL<9Ol#-+Zm*V6.g[V4^@t#G'/JZ-lmFNkLX?Z#mkfR#?nl[a-cYM#AfL7hGHgte\r4(W&5CHYY%qFB4fJ+6%_ITL(?<EWqpSLDWZZj\nS.D#@=FIJ:+%WgQ-*\qQB`!c%'T4f[Fmn\C;'Q:EK9MDj;6Nt?#45%7HB(JR;GP[d'4U@HJ%^PI%(1LL/Q6h+0J9;l1/SA8&3n1AX\r*+F]$lb5aFs'oG>CQb'Jl.N:V3[*4Fm0W'pt##Hd,3Z^SV8NMNk\Qc/U].MWn>e*/.TlL%bsb@2Q\s2.:o"<ArSK>B?>K*&rH^4Tcb'c%rfmu"6Ad1X8nAhU:PWH"Km]/5UT6\P)b'SmH='AE<ec5S`d/YZf5[^iO3P"/=:EU_%o2j]pK\X[hKKeq=I@iMM*&1e&HBGQ8L)#'bK6i^+KL':2TBT<9F_6>PYo)BlUVh%qMOnB>r(QjGo6knETo`JZps=b(^a-VT%O*Ja%C]q'FcYr(I0g#o_YuJ=d"0h?aK!G](6$_!)^26#FfYMmE)V>d2ohno-1UW'Hf+ZR+Ci=L/LSj1?[DluqkrEB;dW47&.IN3nkdECU%$Fa=sHcq@N\-6L1f&V*$+.)kA!>*p'2T+IDG!@J>OS6ge:)8/\=[n.EW.CleTVsF6[Fq/a&cRc:AI][:H0TLhnpm,t5'$#UeR;9+%4AG>0W)]JD%f]\o+3KMtk%d])`N10R2hij&T,O<"bY0OZ1>lL6aD:dO?^k)[bISuYqC*DL"[[S)T\O3gICuSIM`(t+`iF1RmGnq&%^VX>)8+YB%H[)W<Y0a"V/>&3=fu&\fC%8ao,ojJCq3U&Y2Ebr'o09Pf(;Q@/3E@\XWjLjc(rt)B.F=[=*:H]g]J*0`JNp@L-scCf%7H7&9V8%NTE1?^E\LG"6Hg[r;0"]#(:MV"BH>H_Ok(Ci`M'5:toBN4/%l^MB$"R:7g][(f2t?:MU5mO5D2r5ll9f@RDT=X0p?(\o%KNnrOmu!\41(8F;%pG22"kUNYF&TNY4kKa$AA[rL@UR)LbKl,U\/uFY'RNj]/d"OY>Q&2pG`9S-acHniATfnoq1tFYS4Q@ndmLDh%\t(D$.WH$_c7dnN\DPlk-@e0mR6P%ihk2"kmLH*ms"%_^3cAS"7JM]AAp(trA4Bt6V*Z^\h[an$l<k_olg>"i0B@YR[IZOcW`%</%QRd-%Ma?p#1&m2[heSNO8qbl=f8"n,%tOfZ7[SSY2$2[':pu8WR2dNuh,OMBF[&`dDeffI6o%WsT$2TOH23qV'+W$TjUB40KGR=u%77\C3Q@gIl/`-%\A)>"g9WE:?h3.hhO?N'2E@_g01jrn8Q\P?$1n_;e9>TuZfo!'@;Utr+!+X\kl2BU]FLR%eKF+d2WbBDg,,6uX%$<<EGVen*M),P"*B]'X^\Tf;Z,!])rfWXW(Q!eb<r'H16p7I]J+7W69"3t4FrVufe@fN3.m(^--g0=r>d]Pi\%0g:pF+gG$5a6Y;%)p7,8iQAW-/%ph^,EQQ&@GAD^V3qamapN%19h`F'oe9u<=APQ(gu&r;K2jD)RT7VW6abV+*&-ghK,>>)h!N2BY.mnWs28O.6QPYl%BHI0=+*B\rC@%DSBR9F[^qjk;P.5c3Fqm.uW^9RB[X1H_M;im:$C#K%&@e&g_+9/e/jq@>JC4h/*WT^_al/j&"W1j)lM]$0>]AuE%eh:GrVkXD:#i[\<$N&e#4sR+/hW1Y9S+kEg,HB[oJ>Q3V#lEbpK.%!kU(ec.MkCd(!(*^V(kG6A]F#LR"7UVR^6^M5F_a;dm08_n%/gPpdQWBO,1?PHapN>NM]Ir"n)ERo2bl>2=q*P>[cO9]4B;,>B"6[WZ,VTUpPnnikI)d2C72&.B7:Z;].@FRl4r:HT]XA0ND2ZbF%,s*)+MeIS]%3Tnb\O2843uiK=/rGSfRq3!;A6u/L/uo(?/,9E2A"Uo`GT,-d=?$8eVVm)js%d8?rp-bSCL@)9,5f'CCCc0/1j7%;%7?T/V<KKIoLhYrQ0sf@O>84DYPi$]^9>`H7]66'X1:53a^PtGnH')TM7$cd?Z6^1a`4$T&?ACW[KNqg9W"3?QgOje^Rq330TC.2l%+dKrDE:!UM(=$pa@:@Qk"+DahN]!&-jIGLVj0.Ht7NRJmXeJ&5:O?uq;V8rncq@195-T67iY:..KWEN8IVg`I/)>,p`iRk04!5Qi%@KZ1AQYA]>C$%@*f4F)O3qu?hM8gK-krh=/EMV00j&&9]&,(B5MdIEKS]bBsFY&E[CcI25*?rad%Hf\^TO>A!/A%C.L\`,/Hu//W%`uk/sWUY&kGa$`rk1/]YS<s0gE6VVXqY*5QRO(2kcVm3);qQ(N].RRiVqdp0=J$l8e$o2is$U.'[n@nKk-[u$ECYV#!#1C/BD.nK%2i1o`$>i5?h/kP^Ie&ga8S(e.e-jsUOmn*-Hp9cNUYY+Js-$7'AVPIOUH04d`Xg,>.62npeh1nG%`EAZBCTlo+V'2qo(nQb3'[Cf%P+'Wm5J0B*nu+59ApY+S2"I]=V"Snnrp6u@oA*P!p$!kf#TddC?eViMF?pDi-gIIT=oo<qS+lRMJ%9ppKf5B2?hD'_hEcZH@+++d%1Dq,NCbRbB=Fc>b6!+b8Xmc1-TDd?EWdBn@7\enTp:9AQrG>KukubKs\t[,B=!#[qE2ZnU>&0;k>TKKpgPMGK5:Ui!q3Hh+/<p2H%^CV#DR.&dA`9eS#h82:KIW@_tbKU.4"(b0]B)I0S4FVcr[FIII$TpU3?Tj%W.2Y*mglXN.dtd%`VoOs3!u+.I]:2%=?[1kO*D7ga%.nD53P35DW1*Von&,qLOT72NFLFrR8ldCC48Oa8i6FN(%i?!g/M'PaG:HS&%5DW?rSiK@8bWZM""]]IO%lL@gomop0QoSJlE#]=O%&7p;*-;^O6pap=T\LJkn"R0k4dnqi%N0Jn\WK1'RC3ie.Md*DpAf;;!PWSh$os>2YCrm3re6KN2@!UH//+dpp!^(!B'b@V.9IIF@%":B\Lo3\jQNmP<#!HY'An<,JeX`S]FCK'(Y9*3]Zhsof.<8DJ$YL0*Gr&T1tG:q5[Z_f8A_!"9a<.-cj.tKcFr?`RDc`Cq7>-_\:%n:1e[N?kN7fBW'U5ZR)8\),BuA2g91860UJYf[Uh?2YP*Td>NO$FX\?\al#Pbr6J.W3$QQLJl.DScJ>@a]a"FW0ErP1f,>Ar8s(T%rT8lGHsNC!EE7X>DMlX$)#@rpH+&bU(6X23YoRrb-S?jO44&VZLX4LYVTRi#$aZ2D$r5]8NPjZ5JM1#kgXbJHq)'0m9ch,2TmjdB%QPOf,eoFLLRu3YtD,"iC;K1/RRJ\%WH6Pc-99Ti:("(;a:R&="0:/XVaF6Oem,g.S92nSRCJ$^0:ggl:X6B\h(MR5(5E`*SI8NBb%R^=Mt4-DDhUAa\[IWrB"09Ok%b';B>UVMd+F'RB8SaIa_VM=Ya*OR_+]dV/`,h39,I`+9!S\N7Lk4uTYU7q,l;lbn[oI,HZb<JCM%?q-"6Ggo@9s&ST/93]AtnK=2+Eb!TVePK-A:jsrKFMgcWd8O1m^IG63Mq[PH?pmG.k"m(mK;X*kOtQ%q-<H][!ou0K_6"i[8Eh>\%gJ2YfMA*#A`<&QT($-J3ASF[oq(bdWorJANSutk`G;POQ#Z.:2+Kq[.%WpGB<Of\4k[la!9@+7=P&q6Oqa&V;9:&BC9jIusQ_pum%Q,L["E2(kD`8V5OYBEd&)jk?RJg-/F0"GO=lZn5N/k$C)(N\*fL,?54%E/p/\c^W"6W]>f%M7)c<GF?r1?H)jJm6C\^<5HopM*Cp%r_PFQNQR0:`q;tn0b#ork_^2Qg)60@4Bn-jZ6BFUHu0f>\gfsc0OMR_/7h&R@u)q!;](2N"a/7%E\LQ2[H3iBVLHuaV5l#BNe:ts%'b^b2$2J;>R]%B`G9"#2=)+8jVqIfH;`e__U;d[#3H>9;9,Di\D-]@Pk$Fuf.P(bLV4"KQ7UO>2'r;NoiKr'%M?ZJT6s:KiPT\Z1%d"O.e5^p!qH>l%4!2<0/&5]hb1GE8>E`KDGV?9>T<Y8bD(RQ@7L08Lo>7f?*`>b-t$oRcVJsH!i1OAu@&U/jL]a')^r1pn64"4E7%5q?P^e3U$VbLC/8X\anr9/Z4S9IN`+I7i/'BX4M<SZA%0=P;^14cYe(ij8j9HF>>LZm)Z;*+ut7dNrgr&C`;>'\++s(SMsXlLRC9%2PhnM-g3-LKaB(1;dAT;6Ih1_YP_q0>&F\GCJku^SY[&%`J;\liq=9h)9CT><"V>'m@G1`Weg(EH<%BXIPt3f-%3ZDTtFE\j<YA:%TFpHu7%pA_[:QHbV;6_c6Ht:ZG)&uqb!p3TWS4?]kEctGC_K'<X2b:m21cg=ld$)_3e;SZ9I#^Wo&@B0-]8(hoaDP_U+3M`7(Tmm%8Rto.m:DUAM8[pb-n>C<c"cPmZ3CT2<)(@hcjn<F#'sa-FCIoETmDgC#t,s'e]?@jn&^_"Y>3'eFd"B&p*1rb4Mh\]eS2Yl&N7mk%E5aCIKB:2'!Ge)5*;uTsZE8FM4PeEu-Eh,YJYB2][UX&`+:7\7,q/5D(>Gjk"r@?3BNbQ[GVV!^h0QLq['%=UPjrdk(oKcQ0s_0\%968BThP@S)?357;KEn)<N(=/S><N#KM$+Te*s'JA1=O^X^#TTBgZJ350EX7[JBa"EfL*&1>H+d$-9:<RaNbp+D/QN\1P![ZPu^De%BkfM*8d*jCr,eU.d^3-9\=2QIqs1^6<TSNU+`I2aW6Q1.UR'j!@\O(qeoFuQ:sdpr)q0e=0H^uRi^WmX8K-%b\/gc($oF+\Ms(a&%V!]?L-Pi2[k331`e$EQE=<i9V,\Tp60o>P.M7)l#,Ju6]k2KJ+IIUtnS1!rNq3!jZl3Xr@8%Fu`rc+`B3e@!&qU)pl:?"iVgPMLo%G9df*Ha?;[$ko1:CI:UC6WUN+2j/o/kgqu8a,d=n*MSo,ad;'??,_p6c0MioeU-&:.dj24j1]0+52t-V?0bRsh*`on.P8T<@VSH'%o8Vf<(`&jqnI+?CP'VFN4`c(8X%)`VPZZ`:fX`?)h@5K%;_N*EM*0DR5[_6/EFM_TA!M_J?[WSjjd:n)0YXa":T]<mlqi\<&up[Y%.?-0kVdhS.6L4gQn>NOs,EWG9[`OZ#>hk5FGF\*Ucj,2N=M9+`pE<@7T4/Gu6W8*VUogS4Fr"h9DO<C#Y*O(&WC9f[:#KjiS4$;?%'JVq&0[Yuq?-AL+6.H2P+NbKOpJ+Rg?Ze7<"a5!EaX3)RlQ'M*VFp@3+sV10L@3bmW4aScCXI4qnL9,>U+VpHa6V\(%pr=?NJN=Q%)fi_8X^9tj-25UZ*&ROHP-$l1&Q6R-M$+DVR]7^$StA('<9qnjd+(Yu]+HVX`>\5<S!m^rdu>4gGD\2DAon6S,,[ja0-Y)h#^j=6%"HHgDml=X4JS+Q$]rJ#WUJTg(cTnE(,.CgNHkP`0)@57hdAFL"atZj:(3Wnfk7<sOC:_'lXqZiieT@sGXd9fgH%>ZJ2?'(B>X<`W%[KNsOQE64lMV0>Gk-flq&X&pAQ=:MnGYn$pC4`eQ\Lp0u:sTV2(ScnhmnR<f+Z(jpI2)Zt-A2r):t7FXH=B2_[1tQ2,u$$^]g2pC%(t\J;cd%=Ne-4hk&a;?+Qh=PhAn(5=.cQFSr"pF&6]`!p0s0CtPt3YuHcl."MI=+#'C-Z:,:K_*9M]HoqLK.&co[EO5Q'A:b^[!]%MI*CC4sF%pBn6K-2<GLup7X*s(.P5n)V(>9<t#4JWQ<s*)![-`Y=QOGliBI=#%#6`1J8FFaK&i]7jVs?pf7r33pEZaE;!u<`uobn%qeeqQgp:Z6;`-m]?;X:S5Zb4SqSIE/@d*p$lJP-9C5NPt7L^ebPO_WDOBfLu3esT0d@)/co//MI"Zuse=Cr+=&8]?_MmVIM9(=H<%A6IAY;M*n7-JI\iS>[*ROBEm:&u<SP@V)#o\"Te!&aG(jLajeg,?"rOoa4Ote^bV`4hIW#<>=^P:?iT8e4NP]r"-FSZZjJ+&LU.I%`RcZGW/C@REYQK@o.&Tb"Uqc4VBC^^/eE/_\HO_VKtL;&lGm'h5F<sj_'NP!Zfb0ESs)uT_Pj7@=3#9I0nFD'\m/q-@QI@P8@(fj%*gP+M0l@tRO]lSl1q6)7%NQ0QWg\hfBfog5;19(IE2%Kl%OqOlEl4\uV:o51<CRVXE:a30i7)SLO]b+BUC6#%gXbb@qsq1BH$cg+%-t'J0P<[RRhBf8IrTeh,n)!<tk#o/OqsqCBg/KumS&T=*U=l^<[Ek?0\anYCo&Ep6qYKcWh73?)H)=ad[T_;+Fh<+SXhSf1hjuLa%1nC[#;A[IK*nkO=2nJ[pp8OpdJ[X@QhS0u\rS(OiO/A>Z\VlsgLtM@\qosl-=K]8jT"])lE5j8jl?ANen?u3OD)QhiRW0-,D;R:t%0,qCVqE_U<0'dTUrhaZcgUZ!RQ4CZTr=9t%>,>i_c"oc8,2%;*p8WR\a$5l4MIu2AefD0W0"Bl`G'EBjYBQh3mPf(1/u.ILD'KEk%qpfAP[2S.$l^RY3c(#PiW,]0:p-4pTH!ad8lc+GRd;?COr.YGhmFLqfQ;Tq^ZnEArf1e<PgPbJQrNT0IGB',$!R^7C\$\d,VnV$O%r+_hP$+F,?c1L2oP.Sea^=Tm[D:u8CXm:ISS"32<XkWgsXBdbGS]e?aa8=*?TQ/FqgsTmg7GK?2<Q<7RMJ01O/$&`HNB]te1;c-Z%!W8!qnGc\O*@mWEE$NCsKnh"=golo)62uQ<s44DGeg*mHl6JMd6iQgu%NTV4[F]:QCdA$@qKjI-gm(C,om3oCa2.cmIqdP;,g!:`%!4tu*'Cu0&=RA))+HIVl]JQepDNM*N:1JX]Y5^_FoAt:hWM:NFMhg)iJlsKKS!eqpS-00?gP@T[gN.pNa@mlWTA9s=-CHl]k5Xcn%7,"Y4]P[X0;7c.EFs=mL1M:`/!bYb,fec",q?4i1F%$]TFJhQ>k*T)V2$IAOK'8P'@EG)P59/h<M"_['Y@Y<?-h<MDW9&Zl4V>)9%[*pO.CQZn?[e.-]CFH3c`4q+KO]Qt0#;o#8/L?<"N@Ku[SE2<?9cT$1!8b<ti0<DIn-'ZGR,W2_HUe^JGdjN)&=+;eU"1I0@k?U3%:##C^IXT\_s7?7\Q6OI^kq]?7+.W+]KE2`4oYi3?Ga@gfd95b"`LOhD47PPW@<tWtg5(EQ.,.X=K!I3`[4:'SSPTVt,SBR8I$ZLF%1`,8@FI2$4l\e::a,>T4#cF0(MNkYS\dh4GiX.Ef56qS+[KlCfRoc@UbVLg*9^k+,K0%0:d_?Ug^d%d+=SrEr;>dWe`pkX;NGZ,1%AN`Wai#,+CAOHSmDn&geNH%`d>Ms'sm&RZCV+C7)A_G:(9+e%NViK\$fil^c>VGr+R"K%4Iq'/;L@d6+/I6T!r%KRp.M9&a:OS?;%!S:-pT/nVmE+%HLSTN#Mk6Z]orNu]gU>AeUR?mb\;3I5MKbB!b@qR]nr'JQY62.#;AuE*8qR6(c>Q1D3;OdWjhYc':^[?Q?,Q+CK%f,&2F#F@Anf1k'HrSgE2l&1GX-<T`7o@ibaK-jZL>cTO,Yk3EjK!_7sH@=DThmdRP;=Gk):MZh*$"grbVdDOAFp$(8dqWRO:+ZjU%m@Vd](U_rA^DcJls,#aBZbQK^.=ZnudbfU1*Oe:C)8WsBbQH'\_ZIWT,]%rf>*5EO+NLl_F&/B)c\?Fl@IV,jjJRW[DGFEfkiVnB%@-T-B/Eg?`FhMp@J()'tXuEp$4Sl8]k4ekA1[k>sIsSHu[WUHNrUFlUp-1Lf\+K89;-WqgoY0)HaF!s10AGm6s%F5=kWdJ[m+:@l%H+S>PD2:XId*>%oi]l8/m_Qfqc3^1>kAd6q6*fai)V=_p/`<1OG$mY::-r5F>kl'_GA^WobmGD2h)`/_SlaS_h/_Jh]<9W+gN/g^%=^c0#*!aaV>@'_tod*h'l1dd($+"_$.]o=+##u5Ln#?<D7-H0$W_D\kqHq6U/FVr>dr!q=G<+@6_o%a7"$.'**g'Q)FStHH6$)j/%1mS)*:hf+U^],*Cj8UkPFKR:Crbpu=Zj3XBc4r#'[+-Hl[bL`5h.pA\^0B]`Hb]CFEb+'h)I^hXRuNT-rb>bGr2RV"U6bfeQK;9J%QM'^ioBre3X&9E,]8Ki\bq4T?oi]g0<EAb<IsX%tnH<b6oi]Lg.e1ga'saI"hEgJAIF_ZBp%NrAplgO1Dbo>hfkm7C/i;iU_@brc%Ffq5F<R<2B3$ej5?LI/=g=3F_Cj4H62g=Y$VaL*NRMgiLk#B6NqpS<H]@jd_G2C-koX_#8cVSCL[GJDRD4^4*><adERo.B,)=4PF%@M72Rl/hSL\#e2B^Fmi](&%KEa#*,Z[$YJ&?d8FUo0;(-`qa2TOk21oNBB4sbMD(+G8n"-pPk)CID9oKJ#<Q)_b4fADpDYKr&j7C%-?.Gt>\-0[lUs[X^?-['GF(r(EY[Z:Fkr'QmH%+AjaFU<J)BJ:OtZi21XdSp>b>j2ZI?C&FIVr%'TaS^8@,Ca4(5hWDVTF')ME]T%s3r^UQfn$:e>\jLf4]A(>E/?%SS$>Kdr?t[$4>P;/K.ZbB&BI%mA?b4^2;WYCZ2f0p+L5r-77*KBjq.M?f!Wc0CNiEn!g\6pWB6L%;,eTW+>B\I]PY(\_n,Nnm8.aY=1><<X4D]c#&\-s1>Rbr0ZQ,scEHH)fnGo_OaLRVWA!u5]6Db9q)=-:L%W't*DO+dH#nJkLn"%m%Xlp%RjCQhj7b_m*I<e>b@3to.>$k+XS_j<9IR/=#I<jSKGDS)uqnCNIh"k*YI0ZZd`ND:M;;Xra1/7/Xens9W`IBbk]!U&;`c^>8%/7P*Ufk7G\H1S\8rp.aG>MVSoNgRe+/BF0/-,fCMp3uuD6Z';M?FIKGDRH[@:<sC>h-oV%c.qm(dX:TH=hAh1kjCA.+b$H$L#nVJ%\-@UgDuKQ649@T'`$&KZd_X#F:<BDP>!rG,BVNb)P^.\&HesD/H!`(Z,Dm1mHdhac%\aaLT)F%4:uj<"5'O6i05n27qdoYjrVhVX%D)I/djoD$W&\5"M[Cp3^)nZQd""K\7mfjh=2ZHMOGEZQSs2HVYGLk?0E:3@j>m@KAZmZlJQN!c/^5BHenbK:n2k/u%dcf/%Ptfs^%o+k:PierW#YjiKClaaND\RhE'hAjs-*^laV2Tk_>VR1S<Ze0#Yp(49KXPHlb.)_F@D&gT)db3!6"79?#ht)h=Wt"`\cuZ=/-VE*h%7NAJT!G%G6Z=15Xnju82r,mL1HJ>sBf#WJjl4TmPCgZ%,E?>jcJFZXV@AaX<FC*IC;"Rg'I@*jq'"k:qWFZZO0PU,BhN#E99G3^k%3aZ99Z,A(-=6XSHITpt<Gr1a.f]lH8m_0:.Am[=>AIiADgs\;]IsfX'>a\qG%_$rJ=C3N='6F:;[m)B^']+l#7_=9AORXuBY:@m-%.=3/+ViYMUPlE4r1tMWK#qq9s=h6+rEbX#oiRI4\":qU^!aP<I5RRI4PEjYI74A\?'T;2L*h>EphmQu/]RG.LqL5JdfkjdD8m70R%-[W;?G"Pp<g_P32>q%i-pIV]cVlA*W<-3#<Kog$a.t2q`pdc('VNsY<X/At)UqnC[kto\Z@Gj"\c]nZ8B!]TL]9iXS6N2dH'0Y>8%1TA'Hl'$:3D!W8)Y<TQWBi]M%dX9F'a]ASH:JF'[^co2+*hE7ISM$I>G&J9APLO:A[".kZ8\;[6a0Y+*dS9&?:Q)R1/PWt6\SEK"%e(g6$opf>Ic:YUs=o3TGe],<^b0:k^r(/a9X4@26BeNAm'bb>fY?lB)UL#MMWmKm84mp.&X3Ol.\uGSlg[8G1C[@SI?([C\GLGX?%[SnB%d&'HNU3;IV[CNoZ\QWb)i^UCF!TR3$"Jh<V(UoR;J=i/CRM%Z)0>!?l<M5Foe+;]td!F[QVf8*&OH"\BS@-Of#2J:"jS!/a%gu`597/UK.5p=]P,Pdph+7T\A5CY:k-T-j3NOu$q?Fk!cO.MPQI@AMfF*1f,IKN"h4mNH7UKLZ3g[:h_Vd#ee0kc'nG*gLXbF+p.%\SM4]h3N%A2!^5(W?u9@@6fVAj^69u&fg-I0*h5)D0"CD+C+eFadf?X=nYagYha/_KC2@c>aoABE0g@%W*SRfj1O&_QL#5&27mfp%hU:2RK?<L4h(%%(oUialPj:*^6U7d-=lGaOZr5)*Cs.ER9)bY,\L$W($'/"^9+ks86alF.8luZak`d&42`SPofE.`7aq][)H+VO4%IW2?[pU=c]V_2hNWiSu[Iob@3EI6I*p2),88?[@G>9WIN3o+RB,]n/VDP4:\TXAMMmq#)>]5o[&leBQ\\3'02VsHb"0UFihg8W=H%C81u5\lY7PZDh+r<9*f<Jl]uQPC1YBN@s2/kUR(:L65"UR@U]Y#aCK49&$.$R=4<6?kD%i#UW%Fbj8)EUV<3B?+&>6e@2bXZX.J\%Xn]?3\.&k&o4I1VijOobK8-,pWt:0&%9l%i*UQ_97Ro#$aHBWVhQY@6lLoAQ;H7RU0uka^l-d)o8iI+%eCXciA*F`_DU:u>J1aIh%!h+870(6m<.e=.D=e#&GG,O$Q-[nZlJhK$nc+GWXeN/D./$\&oHWLn/!i;)Pd#TH??utsY2>.(t+kWWX#AZC_J\+\USg0/-HN'>E%IcW]LqshliIsCI7s*PT"5PQ9!@'9cXi-k<:5!N3JZ.\\4g;\EtZgEt=>.aa7EP$@Ao_Wb'a.%9+?S:-&h]>!@O+R&(oD=O$o_R;8%f5KfHQi=*KYr;@%l.?O'bs+ER>rJ#3hcS0fG:SaAkD.mDoq13oeb7MiViCAA`ppD!=)7g"HgfS)bh_6MM1o<O[jU=aQDQ#F:<pUJ%/6JAH'=6F6=pk>N9D36_1&pV)h6\*^=4_nE2tuBnVYo^K9tBeC<W27(X67-]V<*a7L]2F8f@,E(f*O?R&$=OSpd&bcp;uB,m):br%J*gJD1idP"s(lK1U!p8-DfiJ)QMp@De5,p^l^GON?IoSBmBkW/4.k9b*q/P8bKdpTc]na3;.S<2o;hKIfBtunT\hA&[gNH6XP_27%7>%2?^G!o_Uf#RXW^5OFc:r_s]ACdOZnqC2>:gb8qq4(2p*_^F7c@dH\PMgXch?5V%GJPrYql2iqT6[:]KqNOj8"mj6+s6&_;h.2%@rfjuS`?onk2GU;gm(WPhQ9K??+tTV46Y6pCH"&JU)+kok1-X+VJ(TH[(i28Y;#0Fch;6NI^H$/mL4O+[!L#>jT1pd)KpUB-?H34%Ttb`pK+^&4DPRO9f)Bi7qS$@aPnWo0q8IA:BPfdbm.\K:[tTJ2b<HMLncsRu1"Yipb]iU_h=n\5-jkHNf%QO;G&.p&lMd6A=`&'<%&*hAeRt(#(-F$Ge-$cL"GNt65s!DY\A+TB*eUg*#WG+;1T,.o^HpX45ffD7>?0gS&K;T6(S%h/J%_D<c3%EY=m>$T59>>#aNNZEQ%KO`+5St,,j]NF)$Iag1;p;r<kkL#hdKDKfF6$IP0IT(k?0@"01>+>6AV5;N.Yc5$Z?8ZnEhYHu"mS)IB]>nPMm\"pYc0]aP3g]KC%YF#7D/JJWiA_oE!rH"Sqk\L(mmcN['M7c.=>Rks1G7)rJnA[Qf;)ILJEFaG-o*=)WS2rbsH1[I/X\EH[HM%/MVf:"Xg#gC^d@bE:%O,M=co*2<ke$'e_+(#0<[G25j]Q!YZE7!L+LV'SjK7<KPDiGk14=G/"ZduT-0!A<Qh_*t"qYg;hPJTUic0)DLH%X\F1$fk>a2[On%rW[:i0IK)-hsKJ6g2=Z2S5P!2g2e.+R1CBVfK<hag2'H+\'eMqV1!9c)&RIhB@+>iZ[]]-I!S)25&Fp:SR6(O0;q1?_FO-h`02qB%oZo1S,0I%<@rj$B+Pn%VDng*sd)B=ZqKDDFXo3L:#$pP,[s)?BpC\!oF.(idaKWOLo6J<?lj#%VYLBSW3WCp\qZVU)pC?I_:Hgqu%hPNSG9uM\4.'-0HX*_TlXj:)*/S-j8GO+M5PmmNe_sVDgHg+pfs(\f4,o(0E/buHt]pZ**DGQO@dJNh>_[65<jt?[8B9%f1RG0:h%[8"a3jtconbq5LHI:M<ZhM1sbUC2HuC@&[=/cN/E_1-oOm(Ru;jSd5gr;!1oHiD_LqKgD21\!1JqK9^.455$fo]q?RY]ePs44a<+%QNcF-BPO:*f-TJH`LGPT?X;^0`1Nn$f8P*F0\Z77^A>O0;f*ID+"!T%Y?<W%^:Z4]/f()BrQ74qA_6_P+FI>aoipIO\$9!+lb;n7%b5YN7lYkh<VpCFrNqN>LeMk5@rjbktCM8+qnCTAion@DFSV6O:)&t_PRnJfK]*2P#B$Kh#oqp[!dj]A2iV1U6*BQD<?b`(X<UfZa%bC"YJ>o*?a5%br:If1u#=82UZiSu<AcUBp-FnR1pk$Ga_?`f`/ZeO_O?VW.h^N_*?AiZL6]q0K.]_WZK8isJipum.S!h2>;S6p,U%h?r!Nqoi2f&$E93Gh63F1Hh"Cq:qKhZ.tmQgH9lO+0U1N4?d$M]^]O3#,nf;[^pRh[^NdFH9Q&XrKt==Hu'ZR1%LPl_knPt3S6?!%@a;I\-FfU$QCiW;#A&9+k4nO>I/7cYQ7nl%c4LdcDKLJS/,LcMgRbcaT'e7h(kJ6Ai:=uUh-[C->+%Zr/j-4Vr/$3R*HZ>nI(=2m%[W;c[-.S=JS46Bu9<Qf*r_YH7emb!`o_d[cWH_7jrhDbr*gEcP[DC5h+6u5%Y#?9%3L_#<3Hu)G9(npg<&c:Ars=+tcE%c7s4@07%S`;AWK@9JM=IDHje&`%GmD!U:B`I6aK/SVm%GnhrPg[V#CLs'2@*i:#3lO\<T^OXK>+8j4S6B&l'B"?h9OI$ErVUi"/$otlDmrW*%cJ6.@'5h7GH>0QZMJtNCajQdVZ5.^V)Xga1LD/gEpGSoD(ZrR>F!:D+Q_^l]]8]Ou92a6"q-.t15+9AN@.O<7(8ePVqo<.VOn$Sb%T'$(25X-T\?o>`+1n/X?I[f+<j*Re#57=qalkA=9[/*SY;aOtp4u5pCeG.4u\acf.Puqo\A^[/.VU^/3hR$g3Zn80.EP)@i_6qbs%-?jo]q,_Wc)ZLt6HuA;8:PkQsHmtH4_T%3*8+!4Bk72lp/\`sro%J2uo4itq=6H`)J"lu>pcn4'kEiLLp]O/aIZnu-an%U)J#"GF%2GN')>1!r:g(2[4":NfTGeO6.el%u;db2JcaKF,=ke;1e2]g0uI[ZJ@n\0YLLYqo@]KVQYX0>aH#b,t'p0@PuC1WbCNP'4s)Bco/%!EfqTITj`lU5O]25J_[.*\q'an(mM#[sU)+^@6X%hQc)tBC@am*_d?Rm<koJ_^:-g$#732*H>eO;jjINkE=P6UUe/3:i6qeG+"Z.%J(&mI%qSc2>12X6ID]`AY!.kl<d1g%&?<,/0n&B\_i1ai3i;T3$5gk=!dZ<PR$1u.D)AjHQ5/OMQn7r&4sk3=G"1[H/b7/u*i_<0%reUM.1>QfaM6p3+P'kGo5=<$=RtZYKbnb97`hrFrIe@ijgk+S)J(2ue%K.oBql(=-\R;GDL"0<`V<#;O$g2+!>[.'!mU(:,\b@^P%$S+:Ok>0Ed>QntN(#Qaeo@g4GLK=)I;^@YsA#rCklAY9/DIp@n<\0N,DUK;qk3#r\j2&t5(pp3AE$E<Ye.$>*Z_!c6p-lO`/Sk$#%paUbcd;8<EQsPXt2,u%Tj.e+h5Gdu#Na=js<@k!sT3mUFVfo/Y$"c*=BJrUL<(2Q&h.qIP^RI_\@TLomXZB)_Pi4ZeY("[oq)#N#%9C$^Fmb#jNg!=0_1%;QD4&^S[m>'piq\'pON5Du:C\?0N68gZVG'pQ#BF<=fHVB9D!POI3QL0Qa9ib3><4VkiC2tk)\W&\4f;1IX%@joY<mZ.8(na#"'L,/.Uo#(+DVn1QJX%1RoS1O?naU+N4BJ'1M6>@_?p-,?Oh.eC/8Ak[@qdkRHZ)UPEEA"q'.4>"oA[q:Y?U/b+%F[24Gnh/68kA/1]OHKNOOf&o*ZY;>4GDHV`2G-+XR/mYb)V2CCD',ZF/]0c0#it_T5II8&8kCOi-InY*$No&'0Rt?o^Bt)<]i10s%eG=EQXDcqjR6`fUmZ^hf&17%s's^rBFSRK=5+c-LRZCL!De@S@0iruPeZ[*uWG"N)b-NJjD!UDZOZ/3-MUjO*M3i$Z+bAgtb21B8%PPA$/M;PsT&hc)iC:s]`GaIb%/!H/!q%D]#Me2"pWtIL4&>S6q.;jb:*g6LT=^%7S;fuf.SH%`:rVYmK9g=!7be7FL#lb_Z]<]Ak%;5?@gU/?qS'c'c<c9&-2mUUG*_>QRDbuaXqLIlOY+ZIF.kNg=f5RKV3Y=eaNH)r.IBrFa=Q0IH^qq[2dD*S%S?,;q2X@gP*Eq_Vs%9FnIRcTdfGH*a2A"r2fpZ^Phs7O5r\+hc[E:(+qtQM,E\QPSD6&&=IiM.D<I&Y@UO9/(eUh*bH;%C`!EVin6ePQAGbO`nFm;QI/Z%)*sV$0kIqtQM]=*[&>M-SP$K[%#mA,'48]c-Ee#'[Xu-'^Bsf%+RaItcf-JJH#N*-$ngok%t%,b_tdO.\uJJc9RIs$ZP$%d`DrG^%h!?F++.rPfUJWIqH^W4G7GmPEd*KSeZcV&MEBfA6q>Lc_*d>"k8\:pE;_^5_X)EGJN,KQ?5*fauQ2P^P=atEiX(Z]cAgNd-q0.56%l?gk=r1R-T-7Y^<Q>n`:>hh?UjL=Y-"C8""aAq/3+(C72F=pQQg/4n#8*fVp7q\T;[)fDGcGmZI3`l"lBHJ&\6ZAb@*:&T5(l"fZ%QNRObh2;`rcVi<H']6TE5KeamrUR/Cr)8SDq78i>CQ0R.0=qoj>TGH[C+1XZ99BQ4SjtrXEBpQE7/mYI2>U`/QO+tFnc#!1Vk`g@%gd3?WGJ?qE%BS(rcO6ugKm0_#g!&tl"^ARhO.:3)EEL\O9L56KaJurG;In"J]fl>k):"mMGt?:Xe^1(316epc,-2VG<[nOtP?[W]%=kK+s:"V9OYP"R:n71#4UG@`<2V*,c=cCJPfsp\OYCH+R@?(l,*7<!P5!G<J;QMVKAdhRrHHG#G%GT2G,)E`N@k=Z91\UgpdLZYl%=R&['>T0ch/nCb$@)ZkG1(LaE1o,tUkuJ.^MSh,]p%^P'Qs$[[RbGoO+H(-paAbF#rE+HtkcBlSe""/[Fe?#kBt>a@.Gcdt4N8\<%jO)re;/-8nq,=9Y=th.XlDuhAMAX`.>fpuQ&PUd@VrPaT@-WT=(dKW`@]hm8QO0N=O_]<CH2X0[p5ToP=$EXc/`k\U_aN7RZV$r<%kO'[f.BGQL(D<nm:Hkl>:X6WmkW-c!_7.NJnH*/am?@e3-8D669!R9:-WTLMXrOJ\b;3XRoAic_AYIC7*b3n#[<6oI38rIj2T#bQ%^2G&VgY^)qTe"H^bA)ICk0PFGJ9j$8in#,=bFpH4T]=el1$$]HB@%B($P&[o2d`">(M*u7QpXq/W61ck\`IKbFQFB^EOOe=3HW5m%,(m$P>B%@t](-9@o]ZmY6W]jF(Zk1HQpXrH5pm_:d<"No1[#JGaKp:(aY2t*_(K:WS&tiUM1OQ6pnp7,V=Kipk<P.U:>/I>oY@hl%W@6gaTdLY%o"V9(p##cG<:&l*T:$PB5,DOYH#ZGVpF.?NHfN=J#+'eL,sMhl's:IQTCTRFHmqS2b3LS"Ru;BUe-ZR2eMjBKInIDB%O4h^H^7/FgV>d'eP'osoRS##M4`O*E&GH"@5bT;(fsMc+pBhAtJO2X\fP+U,dp'Y*r-b?qU9.Gc=4,I1:A$Q`MZ)f[$&N3%C;D$@%P22#n`RR,b89V%]iKA18-1YA$.KkCr]l9W]aU&--/W35U8@#RD2FFH<,<C=SZV3R#WR]->&K,5$*hHHoaf!^<q&*.,0l9UU9\+5/%Ypq#eVMT5t4Fn+=@KY9Vn3U<243g_cQ?F67f3LqZ8[biX)\pkZ$9)#K>:#FaPm>l!$S:M%0otf#ICV`a,`f.$me&!mZq=%A'a$\l%Zrrb!;aH[DV5BNs_!et_8^T*7NTq;^5=ci&Z2;3!q8IW,7uJU9(3R$Lkpf3k=7<6c`]V^MPVl:c=eC)2_04$Bhi;9CrC>QrHaFed%4+?:JaAf+e`HFIO4f(%Lm2%2'g\m=Z26lo#Q7L+,WmF1!L;UB8<lf[$fH/_uM_q9uo=i_VFm"?-Wojo94/hi@i`RWL78S$Q76:R-%gb4/cmg3QC7e5V5Usp*U\Fh0"^717Ek9".pqPV=sW`=m<^k/(B]E).e11aNNT3ZAJoLS:PkFt%gR9>?f,Wl<P>7?W8Qd"P_R&e1D%;:XG`(%ecg46*#Zm*`fNqH1.Rb&d#^OL-oOBqGTNmhC)NMK7a74Ui]9lLDq@/AB8O.8q/',?(1B2ipP,A4lgl?;'u@m?)\Jc$Eo^%P12,l\sc.Ok#DSG9YVu5qn^GAK98;PiZ!A)[QqQr=(@%/U89lVK0(,0GN(Qb7eb!^bVL<.`6H@gBkVoI_)!.#h#.+Pj7(,44&673%dYR>jWTMj($HY:S&im'F0D?s>GH]3]:h,A`*lT=7q=Wt?L-8mh2r-,bV5g4t5QBXXViK?*#BB%A*qJ-k'IM;gk/NNIee>WVPqU\Y%l3;YqXS6%[oBO>W"$)nX3#OW#n9)\aP,TY?AL=sjfEp8uH6[p/o"foJc=Cik$.]>!WX674#@i%_YAZU0D31-rU%@5`mTum!ETb4K%*MGMj5$U[4l59-O7aFW-Oq1VS>B$Bc\-*mHAAjHh+"e.HFZ<p37Lg;JoAPj5d_Mh#Q1NsL\J]D?Eu?hW0#HZt#65W]"6[Sp\b/\Z%MiB8f+Pq.jSBMeM*"to7ogu(+C`pIrSc>Df3\.ql)'Iu*T[Jg"H*5SNb)qeaql04h7JRBGpQIM-LL!oo&jKJFf7tO,,0dMHf#lkM%Y)lD?+[Ym+5C8V@_i:j8jVq;Rpk"NWM(fOl3Fl`%T2Z6\kH>Sg4S,H`jV0j.PKg?Nb[/LVe""4._6n9Y%$'@*@.%Ya1=Wuc+ro_3%%dp6X/RAA,%JNe,[4bMGKu4o'4>G=R[AgIq#$PBRLSaR\Wg_G6"uUF_hWLah%*$=ON\_pQj7kB-5E7*9p$86TA>GZXMdsk"V1-FG%Oc!JbOcbNM`fZC@r3^:c5j)d`V%5,cYOcX#qaW2Kamc+^'ANgp7"e"4RTC`OWi9rO.9;h<1L_h=g,k2i[D.h2=8EF)fM^ZXh'A#N%$CA+MHNQjZPmWipAY<]$#>9cO<I(i[\5]tk@`[,9Tk\i+.C%2'GS+7-no=@hiR.5]Y-K](p>!A^N2f3WJ'+sE'(08s)_Z.QUU+hA%F01T8F.@YhGf\&38R^qu^r^jrX6at80_=B=O]NYF$=D8V8S-cT*\=Ki$&<':q^TAJOY^=L@ef<e#<jVl+&%d1ZobN0/=oNtHMuKd%=BL(QEFRnjqZ2S/+&4pZI-KTsqe3GsZ2"16KpD;pb#dTdC$R6/AUW0n:3N*Y8Triq2NiEgZd)N%cHaXd<jD^?3n\BDoYLF*K"SG#%Y@ZhT^+ZAFIO<`be_;Ske=0(,7:h\=^6`HaD,%NcCK7d(\(\mMT\3SOP0.W;-GH<tX>254mp<Y&%%9b2H[PeND8Dn5Y=C605.W8e%Y]GhcbEC[6N5@l?c#;@U)0XJ1b=AJL)0V"&6+;f<_ElqIMcWiF6'E10'47ZM%n.GM:q"fCLRBq%\M!IBr%EKp_;"kYns6<3hGggR%]?.aa'Br'/JsPg$PH/403S)u\Lhaf'D\m"AijAV8[Jh>Y)%CchiCu4(54),\n*#jY1j=XkVi96'663*Cj\Ia8R?COlCQBiCXRMdN%39Fs\Q/qMK98/Z%qG`WYG]Ya*K>h)\e4&\-E?l4L2e!B0j?BEO9%oOFMTAe(?i!(LS9NmIJb^VXbD(cg:.`*nAWuBu9NbdrbUr_B%O/ouj]?]$@.7KLJo>=jhaJR.M@3Qq=9\FLk4#Z5;\iai:\/+83flVL4lZlK?jD;E?>e7fLb+Z0+#0M<53h%aA9Tcf0'X)Y.2I2pE%Ohg$4A^g=3Jf[QC?'.MrD`1l9YP%,4FEtE=]U#g7e!7lFN%pg)(OaT<9(TuVb,3@G+47\-A':amA$*;NU*F6uV5C&/kn;k#0kJhq%jjH^Ya#LEio$/oUkoE8P?!]-h;:WG?Zg!4Yi>j>9Y!RU!(p`DsEp6'NYs,R:#2?E*fl[$O2XYCm]PA5?r8Z"ubNkfZ4mm-t4PGh/%UZ9LobKH_4H&88oMa#g9Go`\@bW)omnoF!#2'5?7VT[/Z9@<`@ZK^r.D[KgE.GTs"%)C'pLZnsOT1tZ?Ou<:Fb=G>HJ1I1^jIOus%>SSJ(EE=lWY,G$*@?+3fG-TN"<b5n?MlWDJC3@)@`CT[end:U]Xdd\P?<p^Z>2ik)VdIusb5:f]/&(nnW)L@9rcMlf;_!X5XAGq"%lBER*UV$kLeU8nok1j%`9(o6&p"A+Lol:n<PW&`g9YW2h57"HY@s^c0^1AjihY<iqDQpu5G6:9$%:/*K-i^$Pd+ptWLoI5M13]Mg%/uk8KPH9=!L$hEL`^lN0OlMWUQ+<qqatOgCbT3]=odt8enM/eX13ZkpXqZRLE1+<=hM!2b0Jt+2,im/7Z/o-D^!:.(($1<R88)@U%2hkS/f9Kf"qB\:"n?8V+>3!i-6o<Nl-dmtoJq*O+=&og?1&\H,WYNCdmeB.IYP;K])+CmFL,*Mm%56pCRSpJ3P$@3fd)7OalPgm+%)N&\:ECE67pA_(2lH">mRJ7><?_51WC#]s)))S6L0DgV&)7d2Vo[6B^_ph6t][11\S](%DegeiE^4t=4`7j+n5'KTKe%U8iNGA9S%rA?]Zp8F(@'ipbON8-M)XgF?b1NGZbmkl%OIFNV?$eW7O%#*A101L@k!=;ohX'k^2S.uGs%/E.RLA$[3,8[BBZ>4`B%"m+J69g)M%1A'.Ji-r\.cT.VG4aYh18kNlq@T@4BacHe(`;Uh;L6m"c?8<eYW;/i]&o1p8])`SW$Inl>$qXGS*2:;U@GPZuj).94W@H\_T(uKb%_Hj!1GpDJckt64GP@80Z])aGD%9_XBVoh]5`n`nN,sjkllj9h6f3@]d/:eQVU_4cen9g1Z]07\.Z's/1h,/8p.2TElc-^uhlHC.!%FJ7N.k2otYSG>-X@Vt2lbP!`<@dV3pBjFskZ%#!g+/paPQ6/cWKc;S"#qo(dK53s"DpJ`l=l[#M&*3ko+rQuZ9CjY=87PO8@=om]%nW">rKUimjmfkQ%H,kA6#T'QRN.lO_<MIVC7CYMjT#=TA=.ZcL]gGkm`3_;3`,`:WmLPWD8lI36@S49l?89Ln[-,Go@ASiiXa6#n%lDO7N+tVtWO"Rp0gLtSMksZq.X[gWUV9V]*VFp),rGl.=4+ilH/DdX?h35N"H*W[V)Aj[=osdu^A[7mX9r]C,j9l4[JWK'iRJZ,)%G<C!P]:F-"l98$9HEY1qjRsVR5;+AGc^%l\X`'2?qj-U)n3Oo\I[HOpqH#.(Xkb_0gI_68f3t/U<l0GDGEWPQdtML\mJ@tuMb2\p%QaqHP>ngA1bLG+<F%Kr"I4i_Aqe[)YC2ElsHVc\8D>Kt%lK##pp[>br%bp87@aK43>%d,%1Q`1QW_@:!ZTet<U:"V(iT?#]n7[0@%(0@$$e)(RnU>.tOlG<?:l[)JAhRBe<\;ld$P;Bb!>73ZU$4!,9cMG;5P44bE#H^_LYe)]FCMe8Z4I[`=FQ19K`P^2n2FBVis%=A"%D0g*eoD)+7Q?1sPDf5H\o;;M7htXRFBr>h^;D$^3$La4H7,H5@QPlVuHXp`,H:6rYI65?,P4pW7W%7KRVmY'FgRp4cH!uoS<AE7#%fdq(sja'H=($b^(ecuSb.\79P]BOMRLX!9]/:WYWH=`E8$DCIRmbEc?pLScWd&Os28h7FsAYhO>1p.&-9']FETGO6k\mf"g3ZB2:%X)rd#oj*HM#Kp$##)^j'.2?H7540AM??JkU94,\+09;"n>GDV=hWWTK]:/%s=5Pq@nhCs49\C9#F0rsqg"K6>B-V8@4Y!q;Ve]9A%i/P"snf0:m)cDklG0BVq%HJTu(>r"jf'0+PA-%_U=[im/p;,%Gf[4FQ1Z4IV`I=26_DnZTris)"f!kUqm(M.6[Jof>j&Y+mNQq"H%aJ\`Bq35WZDnY*C*;6Y<S@>/*ZUu:VYMc_0pf+DJ4)gR/=dc@DETg6fX]TMbIH>:LZ>=s^2Qk,%/JYM93sPlL=Ifrmc9ZHH\B2sZ%#1UXk;bFY`b7Xi@6nV%79_8/?;E7lY3oB4,oqlaZB0.b@-Y$9fcrn-MY%1TbO\7b$>=GI<]PoLeX?Y!3?"AXoT'Dm>]=Anpa84B9%).^c['%2*SKaY<+iZ,b`NR^i@;3`-:kT,h[Z2grf!;=g[qd]`I)cN=13/BeEpkjA0-4c@FR$pB6%Ua2iZ_BT#V4q:\.lpWF?pYEh%joG*cfbA>E-l)EBo+.AqR'WI@[%UqJ\OmWFNb7i*DcP0)15Q6cTdX8QOmR'&jX]r>NNXa;TbhUJ7JU\`R7<fR_G^'&pEoEK']i!>%9DVj]q's%R2MRrRI:D-T<0WI0=0?a;.*@mJ;DXYcKdXWsq=I;h/ue/<DWOoD)lceA^]'X+j/D8kR9\d!)_/V*hgj+_6e:o\YNe'r%gJBnQrQ5q@mt2XnY$^TONTG#UA6lt@0U'55_\MM6Q,cKC\E-8(rCRgufAie_L:Vj4HqIBJr:7FJjmc$D=R4Mrlh[HEQ7_/UK\nPo%Y$X2<k#H%2VQO94f%h/e<&8[qapGO.^N(mE5GF[dZ)&NW<qYcc^Tq$K^N-?TSs;3+H%8SjJYDE+jio<AFsCO=1eoM8k,M7=YAu77%Gu_U6e`5tZr)pQO?_=oYjh7U_Oceu+V5KR&cHGC:K@fdS-muL(?hOr'@I*cTVl,?#D"P;f$/(TMQ24`TXm9%pePBfdNEXpe:6it#%h1s'Dla,_94X+7B*5&F]Gu_U6cp$(SX)_E-H<n;V?K-9YUZXcS=7mNF*oAZj\[0s/]lj:.c[1ITB$Pn$Hgn\'nu@/Xp<-idrC5+*%X&@QQ>b-p2L.891Q_%:0=r]jJc`QLl\2HNE?,(ttN`mZ3YK=A)jh4Wla#=DEApRl*lf/#HRS6UaeShB&F`QdDc'MK(lb+/b9suIO%lSic`g:59A-`["XA_%Aqf<8FllMG<p`O^M`lL@lq_lZg,YK31jBKa)g4IA;)pdT_].]9;=Q+$IBYNqNrX&S'FoKhg>Q2@tr#Cb16%IX*qL3Ds\3\pg&9B$Bt=GHQ\#lW7u4f>^eAYP^:7Z"#$/oh1id:K>.b]<Zs,jjs)D2L9>H\piauTiam]fC^Xm$r8s@koE9"^LsBC%rReCm6X@It)]RAJa&(BkoYM$i[:?3%pT1a%?huBhpptoCT$F's>DB3E=$.d^jVLtp*PCTOZfdpB@@9*OoTVd"oQeC)q"\?03U>BF%=I,?'0oFb';;cjLD)$`?G8VJ<*R=XfC_*Dhji@:9EYCE,+A.3"9\uqOrR@C;cVBpEmImm\QS4Z::L:^kK9$8gbd5E6DLu[SjRO;Y%2qeqo?frM+^_J[\o6pMf`7!,l0BXEAq\.7>H2RYdrp]KYASc2\?8a]j0<Q.]YMZH$S#sk>A*[F1B^G0"4Y_+uIU3k<f?I[B_&GHm%%X0OdN";Id5E-n_$`Z>crq,(B\9KiGHsZS%B7)e3gbZZos7Fc"H#Ind+82TMj2[YBGO9R#A%CFkg3VPg2fFc2pF!dnB?#E,L#@@q%R@Q-lQfm+MgMb!%093bp^6j0;E;J&_KAc8WBmnJ-#@"AQrjnPiS.(bAc;%Z;:%((#_nFOVT@TVsd]%a1pBu2jgE1egP4nTioC-_Q%GgJQ#fR>?;K;`kE-#Q;\k]Dn_\i[1,HL)nL5cQks/#riC[GoPVh#B*X4S_1mDSKJI03fqqETTI05I"j-(n7S0=,kIsB<R8r]sfqk%WUJ[mE`XX<GgHA*bWcQnIPI-I:F;0eps.MOnkZd>T<Z&\>f]`?9KkN+22Q"Q2mL+TZ*[X06p#tKGW7GPjK15C\3+hcN8+#^#OB4s%`5:;f(P'2fR"%'j[Pj,`gUHtBq8D8cqg;l3c)9rc7t7CLXc5Pr_J(HkC!D9K4tn(\R?,rP)p9R/Fn4P^mR3NTB61t:'@=K(m`^BC%MeD[cUHcoID_,6i0(IQeKCGaR(pclYr$RlkXSUQ;js0_7HVVTX3V-l)J'P)Z=(W9=kG%fof23P"([,b,?2Y'aMS!B2]P6bV?G?F6%nJcJ!DQ"oYbb'fC8?Un(e+pomN<a5poabhrnIO49k7>o7#E84iB0#sJFK^UhqO9W(qVaLVf^uSV]_1no$qlVn[C21l+YiQ=c4\=C%Kh!E2^<TYA;fgO!cL6,Vl+P2gg<VuWd%C1gikA2j73pOJ!h)4q*P8l)g]WQi+C;Vu&3JU@KAGEhL1bd_A`]Nh"Sfdg5*EfdhZ%%<%^H&g0l0C^jri%8DpiW/4=Lp5QO*BWDq4U=S5mQk,?<giT4F+GWEBEc#o>uaY4+YL7*HUPq];4DSG@>+NL73%HFIVO%2I3"\c!e0;%\Q?VZ0\G*,1"/6ih`4bL.VX='9T@/Lf)5B]o_mq=p<J[UGC;5HRq>Wp7L^a!KLQU%:A5O/=UVUQr[n*E@@9];rq4Ae:Nq$Fk[.[j%d=.EX^K]%$*K*\[ZsiR@,-QT]JSRiN8,/<Z!"jVh^]9ta?a&skk=#3k#8[<omH$-SD#N/NLKN93Z6tGsX(CWT+#,@1YW[6LX%,):%2;U!Q\tZ@D?.dIfDDX7Ik.\J4fe7oHB;NseZZCg3kNtcs]$8?.COP`r4Akb""aq;^I8Uje[^H>3jHJ6EoUiZb:Ne[`o:7,E))Umb%/Mq>VbrW1-ig5Vqg"@*7a"+f]=``X#aqG52Z+r=W"eFZO*s-72,oFS0cKWmEp#PM;\T##iXM9)014&`sRGMt+`"Ynn#J_SAcL\$3%Dg5DXJHd&8mB`^7EO[BkZ^^X871)XVI:78-roq8=\T'f]]A@Ei4aWRI@9=CmnlcGMDJlQsSiX+X`\<YOIA=FLdF5r1l2Db;I_i]3%DgqK7HBjBU@-GPXiu>*SF?ZKA5QK@ra8<t2gt$)G"+03(gqeQE.BM#fg(PTj,/2<c)/JYPeH^iSRTnZ&%,gcJJi3Ni;R!4DH(:Kg%^N&m[)eX;bg3;I=XdS8Lr=@=9;h]uG_uSsZjc'Pe5lP20pA('@K_!:)C?;jZp!,kq-j$D&LQc_3@n^rA[#<u:b7M#V>eI$@rqj78%\`J`L#tSlk4>!86&5mS@lmF[?;l^)tJn)Inn\S$PB_oh=/"X44pXD:n9ZcRR#\e`NqU2fJ[4\ptB(TUd:r:]A0!pf6jRLKAXWPf9%_@KR*<M(iGBQ`lX?(7-geNoQqKa2$N5O9:g%jH''b2/I(g$%OYW/GT90$a1IjE6Tp9.HB_W[D+4$g@_riJfStc:<nTG,R%3mnpZ]%[$K-O87@D40"tn95IomhBUJ;+bnf\`[`<Xc>XLZ#0]Ym(>s(ImV5M@_(aE<S-tdA"+.Pefh58rO6*SS3dl0/q=5RRr0k"@<<9.U:%6(T,Z6Rq8D]cj5DrtXX#DQFK9q-R"ECXX0or3%O3n0k0`o=q#iZemO;T)TPe]Ja&u7up/#+%GE8>WF0X8ZV$(76/ClP3VjXI!A>m%=ri'7UHTq4=(ninq2,K*?8j$Z,Ks;Bb)3n.g;0u9XEFjrIjKV@.,^Q2p?4_:n*!Q>ohf]-"%Ubhb3U3E="b?bPp+N1B2XkQg9Ra@%^9@;9&`K(.gp`p5?[Rk*k_IRQe=*p%o*Z_cYNOn.2Aa4_aStj['"0k4g4(]]D_?G3S$ctTG@"2armCGnO/nW1i25,#+tl.4q5'Rn%SW!-t<HDr"E_._Z>;,-435!Xf]?^HRX;71`=m,f9^V@O$[eJLB(RMW(L"bS@o#i'&r,@#>g2&^;LX#j@f3;n^2pL)pIAO[UnmH<I%-ZI\,B<Cc;I3DTB1?%asH0FVF^^e$'hTb42Ma'+(r^Y^&n+GQqDRZd0I\3eBGk:@bbCs0lgZ.JZ;6W6,I_SaL?=2IdqMfJH`rjLG%qd[^&eb,Qnf%'KDqkoGHT>pE-KLX9+n''VH+8E4OiN&B<=?&>@19k5(*_adqGA&Q.*/d!,2F?-D$'lYp75L9\XO]W-VUt7f5ArGE%n\!JfD8#u1]j3^lACon#jj*\^g@Su:Fg]!SnV-r?n`S`_B=-r"?XI\t';pf?Z%:&Ag?/<uO!h2m^["gIEuX_f8Bq-"`o$HP1)Qhl%dPLW"@IJ5\(7O#M=&G6p1o((^cE^'EW&R'_4*PKpnt3i`^U2Zpe=US11[Esr[Z)O>chrYGAJX/Bd17+j5Dstm9`@<@cTgnIK`6h#%maa"bDp6-1>H<5r>MhV:_EQ287MN.ir8GLQO+(3J-tI%U/c!6pT!Q,?$.87n'QVuXrZ6R'9D3d[0oqlR[ieDj*r%6XPp#BrkjWEY%.1DbkbA<c6A3,(O".oBbFaNiM"*\N."OQj6>@bH*\*/>g*%iSkoCEcZ,E.,eHG+FjkiMfsce\9G3thigU*c^=9=W,9htpq.?rjD?%mEI$?4m)E=/*l`]maIOQh<t8pk17#f_8XTMqZiH,T?m6@XNHLlfD9[jrIpCda5?8T1-$f*[/SjAOQE7A8Se:\)S#+RA]8iKO4<pg%2[%HU1psjgaKD'Lraj9fdb\HD;i.\^*i@"BU<3MXIc]<jCNeaulC1kUF4]f-@K7H@VUZ,cl*-N@,JKnnIR\%E07t.nKCgqm>D`JH%?&=`e(SmdJ?;BoQAAs;S6@*97MmOe80U1;P3ccJT2nm#AT.BNeHa:<rS]4b-iWpp=]u5-4aAZ8O7>&h^-0,>K0,N2$-[q^cjC'7Z%LF@9\.E?q^"lo;H7(nYGXBV0SM"J*LVM,QCP0j2+P4gQ#/o.*+Y$ni<YFjus!KW?2@S^+BZf;gB`]8<506-L81RNV=-06(VFRG!6%m%K6E#pJnJj1?8@<Sh<R?M5ai(6b>XZf#teCSs8KM7V@.FmV<F>&q&YhIm-llVT_B5^ZCdD\>74g$mWhq4PC"M<WOql`hD0a,.48%SERcDr3U%T[rLb7LR.l1Ga;pho&[1g)iUK6QO>=i(oK7Xk`:H=\!JcBDWgBl:S.Jln"p!\kj@[MmO,[dg4lfrf)Pp!ou<5B23O)7%Z%ZFtcd#P^,4UjfZCp[a/o'IGaZO]l(#2gZ+r,>0^1MdDM[;T\Fn$^H4K,h$FFVQ,5'[*m"MM,fHd\,=WofkB2%N="&:;uc*)'VF%DpX,-jr\`Kk$lZj:p*,?X<1H06Z'E1$Zg?;ZoP53/r]#ar408C=EQ,#a)\fM)ulE\BF]4mga=*oJ&fuN#d;;&oR*JV5F=3OU5ed+%q>A9FdI(nsaRlC]P1lfHN.E-_WhHl0=6$!Y:Oa#E83"iX.K)/?drEQFkO&*VFa$N:Z*emomdRD)X5l>$r9pZHA6J-^S\M+dV_$92%VNUP]]NtBW.QLR2IX(IN<V#4_W..ShcYDKi7j[>>3HY7l8e1[Vl8jqM>aAF#.Rf?1&MHd->a7pad7BV#'s:0FP=N8:rI:Hi*nR:J%q`3?>4\tp&C=CW73G<U)n'Jj5=`%JMhX3<$Bsqeh?2hT)s50p4F[*hE=KY;Hg[r7mVmY1gQ`E'ip/SGJd;Jm23GVkYkN][g[HWn:%QgO5;j]V>`Fk^U0;dTRhe!o/(46uR)HM#l^ij6\u=dl%(66B++3B3[,B\"OgU]-GUpX?lmp\b%5h:#_X1qS[7Tk6g0r^21JU4<(f%d(emArD!762kth^&)YtiA')+uVnV@s98;n<op_Bf/d6eH&BJ)`4kHj+_3,V'%KlXE#QV)7dutQ%A_57C"L:]kIH9*'g6e`\*LiA`%!+7c]a8e;`O8Pj$%p]Bb[d2Oh!=EL:!<pu4^Z9aE-\"4T!,Pa5FaYd%DQ#cmL'h`1D*l.%#mU\5!e;*`%'[W'PR4DT)"a<<X#'mI%s7QNGj98X,s)"6[.A*!$jY4c]?.fJ+Yls"463-M'l.!.9=$Eoqf4C$_3*7@jD##JuB[QT:1h8NSfB98W9h,2\6[Qqg"?&u+(Z>'h%S^,J6")6f,('E@=QR-s\M'Z?&hE0Eqf5YM@Mft5k;3'B:mCHlXB1=#A@Ko-SEqHoqeAC0n*1@B['/d48+)O-l`EkP])i"G$MqfW-%#T``^OY^t@F=c\/i=5IY43Z>`ngr7#5j6ku&WQ%Ekh'6_Ykp7abI:^\d%SpG%,Pop2EjrMiYf0TSJX127NpCCPOt/gP>7YK[M*ro%J3QaH:O4`(KgDRNKJJLe&Wu;Y+:fE#@K?(hl\6_dMG@ijU#i$kC(iXC8V@?4`+*?NBWV:;9\].V@%"/9gG4&Dr/`Y`EeAoBG+:fE%Dn-YPF_HR$!HfOsRXgAEY2b3;#VDncfCr#8`\Z.8]J/tnR9$9[afn*S6=tbo4Pu:+"5dQUoOVeI2ZOa/P(eH5lZ!ob<Z'qCd`T%u%4$#a'6.l>F-\?t0**9"MftJSamI=N:Z9%j'$613t_CQcVm@0D\$]FMP^=LK-Y%p7;O$8*[=gZL-Yh6Bu'"$R9J8>VV8"_!?1]fum%RY=Il).E`c*"Q[W!&k=;9EZR+'9MC-UD(EMj<NRA^HML%r#Jn5-f6m9YmUcHKW6kJ(_An4!!d,`dG*;RRs*Wq?%qFLJL7b1"s4&X%&VS&pO@Xm[^blRn!ESD<mTYE[0u3K'Tl6.j1*@_`d4R[bTR(cJKD3cUg!DQL:H$d&rVF7%VW590Ak7k;TKV&K!LWu6h?FdlY?^)?%B#&onJ]RoL!N#tWLHoAX=Q:]rcq8,t@XpsA!5S4/T)jsd=SRV_m^^c#\\g$b%eFEQRQ&Ud*S#nkNrbnlqV/lCdZ#ibonZ.a,_r9>%Jr)LTDWh<&2_cjVB'VNd_Z\toF_Q>UP4WrhXG-Xs>h`6Uhiod1hbk#P(cDCG>DWcW#_->=rW$>n^A<Z-(Z!dgo3bWC@L-f1\^?W]%#.V+br<e)hJG>idh3^YSD+ol++J"q;1(k?,*?H%X1BHj"B3L0rR0DWL5sr6aGn+L"kWh*0YsAe'nAE5P#U$41&]SCb7T6c_5oE.A%!mlK(.L%_<qV)H25p4'$jV)*02FB$)JRCD>1)O4%AE+WPZ[Mi%FGYu4!"t8Q0iTe<%Igo;i'7`f@3k%d^7lN9I1j,_aj_)Z%^3o\%ED$;h#!ESAOM<r_-/L#4R#Z]Q'11tD*g8T)W)&mTJC*J9coH>k,/cr57Ob'YgQ?P'60p(Ui\CO:JL@P8Yt9rh+Oo:N,$H-;4AR*.%.HhkbQ@*5+,(bjW".Yh\7c6"Ae+q_AfiW[^acN5$O@9j7I$m%&/>#3L."HQ&`@!tZ)Mnp)8VFS_<?QfU7Ne$(N?G)Oqd??LVJYo`%VZ+U*H,BqV>!a@lR%Ym$.!.h-\<-WaI[GLTe@u5.1R3dSDJ\,<1KsXi`.9'*4_?%ZY"77nNeA5fcAt2`dulTnoHaPA#&gBDjNI0u%qVc?jomF`(*JddI%$RNQl$Ebf'gWH=Rl*UXo1+\-&>Fi,J0eY`6X,Q;nRi'u1]#jH$l3N2bNMY-S*>^VN@"H'%F&OfM--_C$QY3/%!7A/iY7'`6X]Mg)Kc[:F&4+s3)^(1FNG"B&o5'IjV._S!PTi/;YW6;@&6$MnKss#g:;]sZ4/4RqH(fa>C;l\PR*3q&&:b43!l2/X%O7GtONJ0C!5QE9$()r?L=o\QE"31uT&8i#[`bEm$oo5(5G0GKU.4`@;(o1^&)ea#i5Ti5SD_a!d#+-YJ)*h+45\LDn%>e-efc`-s%*f6db']oWo=928Xc^4.Y6U)hPAOV'`igru^2OLQSZ!qllFIXW#>Wu6<-/o":#jD@-BHBEJK,F\hILh5?.ca;/:'H@urU?[<Leb,`%W\[nr])X16Xbh`1p/Nak_@pSfl6)oua<V%:/gg+#+XG'>I-b$'C+N:;SF@1b"Is=BengJO^s\B2KNHUALSuEtdAca>Y0DG8o!]R\%&e0PRkVr"(<.h(;,A%V)joN7o1uYbX%eWkj9MfN<BHC(PkhH3@6D$)kZ/"iAQAsJ6*$+:*-8'ha+k;AKXp8Nh4u-r?<Wo_%2_VK,%,<RMV`6-da*<H3VQiK2@+f,JFrJ<Ujf#7NsG%`Xe"XF*MfI6g153YkU-iBko8d.-10P#KO[X9!0a"2h3"[iYV=q=jIr6AbH!hSBi%)FQ?>O.AA0j)M"P!#CeooO8(%,Jt3lkV/E7X:VZL*"L!s!)$,H<AL&jPSU]GHI@l,1^##*auJS,!C?=dJYa-E\X\Q%&seoOU/:&.%6t.FbC^V!cG_ARK:4h"NR!B5b0Ou;867*cg[;cI<+ahs"Kt%4f'7f>3NtTr:+#tP=H,@qTU!!8V?m&UN4-n1MW6haNAgdX>d+^*f%/:Z^$WbLp-66ZD?J"^m%l5RdN(!$`,8T[#%!)1TH)!D9V=DoVbi;:`,GT]0P>L*hG]u?V#,0FC-^&u0fSO^!9IYKU;$o3ScBXs))%#*a%1<XG$"<g+=&C23l!&f+T9,Q#U2gk**E_P]bO9NZr`'s_F[6`DdsaQ#1M*!3AJ)q1Pt_HDHEL8.KR8B2r03FO>jQUWSY.i]R6%qO"MSb?=\#Ma0;[P\uGqQXb#`KA2ceU(,_9O)3,UoOP^k9\>-;9j#;bK*N3Z&Hi;c,QnZA%"]o.$:Ac78t*SbUOLS@o9I7h!s69u%ZO9;8d?XdJ<ZD+"/RsR;o`B`q!PfW]5\Mho?on^IeM-WK*F:$"),no;Oi]SYe(;S6F;\I!QR&H\_tap=OdM5=bN<$e"ZHEacsGrF%L!2pGMBMtV%fumVAV(\XY`"%?el3c:"a4ZtDh5S&"GI]n(R/eA[%T<'4u2&1!J'PZ>?hI'?f;)*&"56Pp-J^@fg'lQ"F1t8GT[qb%j9RVV?l8eo"=ea'M/T[UOSbk;KAK9%hh;gQ+,7u(+b>H\:&0S\iXh/\3umZGiluF*_#)#jPr!X"VURN.Y(:LB93,kZSDY*&*SF'&%nJiFeL[S$)5ejR6&kq1^p*lkWHEo'0_=H(fC!7.B(Tc:gF+]S\:S;:1C9BZV3_Xc3AEQ'ElVR+`hHXg?!+1$]i-hD^7"Kl*77NU8%j8#is57?W#/jR/?%PVqg)?@3M!!&Eq3^G/93>VLUi+6G+&[P$c<i<kW8FS&f\K#HM^hj>K_ToAq'/]-_dYO)t>n/=n+WgUu'p0h/%Fp\=V?ha]Uj1bN4'^eKTABEJqlNfR\il()fqZhMla)OJ:HIB&aE^fi`K4df-rf,C7>iBNV$S047XFN`%:djq^Ck^&GAP9ct;P-$Z%Z,d!eA0qYFjbjO&+l(EPHX$Pi6:%u/8K9;r>)@fkIc5,*78b(+c35C/W#(h91:G)2i/2=tJ><!uj:m7),koek@Upln[X8]dTG[kf%N_a133"kFT#%Tt!7fkW6c\P)H!0A\hW?hkrRc9T`o&DacNV5iH<^l?cBOofu?rmS<ea-1h9A*7WONf*J)E['=&S1R'eGs_a=tah7%5EHmeo7\&Udq*#mX)k'Y^iM+!-W+UtN)jn=F2*gb5Z\1L!D8]OGltiA.;G.g/\HP8*1R6=Y!ZZR2-P12"/@$l/6dN:n40XS!UF%\%k+I\MW7d80_>r%co,%.i"!&a'A]KMHM.MI9CmFH,9O>T`+Sne*;Xf)>T*d[uVOXIG[3ReIrSRom+QChgJJcP6Kf'[&$4o[6O@daG%K.IDp'?l:r>JB<8%TI?)<apSFLZ;SL+H0mb8d/b^,W?X-,E=L6l.Zt218*Z4lP4!9P]M5+[X8)e_W)"8;ZgP1O9tuM&WTRrcBe`i%r(b6`A%JRo$m;JS]*pGH&KC(]Aq2*+QHK7V;8X<q)+JcOC_8pO;*0m[6sGIt:`7br+h&pr."3!6d?_Bu"^IHLCY18lY3OTH%@j=(%SM^ri=]-$hLqAJ>,oo/Lm*L@r+K6e3L$WH&[g[Gi$_pP_E5XYFBZnfW)0U`WY$e@TCa%3ELF@-e5lsO#(lHFLe2JP(?-$ka.*<[4%!'kFtTW]67b.<mDr\2k'B3[E(Cp?9.,S33q%3c:7V2oE4L/piS$uK8ClbF-`3trcjStHmHI/"q+5QV)QMihgG!C?h6Uau]-q^'jW%.l[Q4]Q[!J[38t+C]kWob4bE$)Mh2;&uK's,)$#oQF_#Wdb-.R5ptW\$6;7&Ajacu-e.bg8cd*B@97+B?S2t_H&a$LPmg@tM!(2"%WS.JM!eAH_FoXLQ\n]%I!]C0!A-o/TB\iI<ZIL]*4;Z1A[]UG;[2"82dsuMW*Q]p!0`u!P/&W`eZlp4%92L5%!$U5"3.Vj^[bSb5%^_K%GMip=*;_00oKN7%F3)D$^5QpjS>NIbr@76oB(T=$U;)P^*Ps9lO"h2"BQ@R^;ZuFOA^<'uY"/8j;H\';M#'<U-qI.DN!:139%meNHR)%W@R973gr=b2X%ol],8V>ZcX*H,]?cGRsr![.$B@to#q>1%=PR:;i.P_#;U$Z,sc<48D*c5/*%`g=e\9b?2^S/(Am#jU\p%!^]EZ36Ig<$WqBO\M.Fqb$i4)CPUOL90*&>bL.<:-Q`Yu$mZ)Yh.ig"gO`RKL!KF_lsdkYHok.IQe18S\UmcRA5a?4_<F)r?D?d]%`fe33I<LIB#3(*9E)JVPf9:]hpjod(`Vlh^)M7:**P7cK*%`cK,hs2>"QVJp"Nn8cqZ[.)'kb:>r[%n%m>7OME94*Os2HW$rq7&4%+@4*8bu6fK+;Da!!>NEuQ,Ff_KGJ*fL9%2t*cs?fD:Gs-!IW/Kf`+]s:n0k4G\H<9:_+&,LHoaeUe03Z6gd@FQ!eXE_@h:%?,4YA%!8%Ineqtp&_=b`L+:\CG!S:EP$!c`i^?W]Q;[Q%Xo16<qM:bk+W<=D$EQ,opc82+G$R,&2X_0$l"1&:46NY>gXf3)Z*sI\5fjIqq%5Vu(58;"!jVHe(uRE'MX!3uGH&78Gt,>f2K%M:Un>LsXTA%*nJUi;-hQ"QksP)c.6NdN.]`OZ/?R*&53%)PQB@?3Y!%VHe3LDAAg%mT<Onb5aOT@1s-C4X9`Xlk'4#KlHE+db,FaA,:n-l3?O^OtQuQ[Q"<:Ph@K%%+%<;Slk%/"c-lQfc*><B4t(t/IE,un3^!m`*aP;%NJ*"s5GOogTaDT[7!:^dTk=u9HLM>(U-FE8lO?,=.>Nc!-gE/L1TV1DGR(W!FRp@-prnU$A37qe+[$A@'gSWOQb[8gP\nQEXIu=-%_btshNq<t<au86M+r]1@Q(>p-lfm^qbf+#pbk"g/&RUjO`'%K)$=V-)Q@"`Z_i5LC/S'SdCNOFQ!<hmY>6$iq.0DuF>DSP`j<H\t%@5^NeYf^\H^f%:N+s+tS2jNdpJ4gP@@T(!Y%)+=`E;f7I'oRtX<pBpiJ@Z_?Td4p[_ATg.5)E2KrcDN8OkB9FrE($c5Tj5XGQg@<%0(pW;pe5QRi84e>6U/G!"1^<Qj2"/H"_(^L^_Yr$iFJbe[ku-VFS;,*6uE'5\>X%SVPu*IcdX6,.msP/0Z'0l!<C&PMQ:XSn/feN%9*%FgH#S"tEbE?2Hl!o7VrGV#$rRiH&?*A>&sj@Vi<?`c!Z,/.7J']:H(iY@frsj3;=MHt!ethj%mDs?Y$EU^+*k(Ne30moTTCsW%KZ2Vl$d.*f!8!J$7FM<>_c95UD+HZf]r8]b4b/)c@n4<'@M$=V"1)sE^E(L`.q(5A/WW0(8p0Y+B'K-6&W4b.BVQV=I*!!qRhZlM%F(hQ]?F]Dd?i3d2!"1C<AKV!`/`MZrbEIuThW!D1@(k%t,[-/I!bl+q/-'X3!QRDVOom]=ju?mFn7cmN65K:8mfF2LJT;^I!X=0n%n(Eaq9H5/Ebo&XO/j%j9FfC+JjpPG^7sU70+[o&s9lX?gqlrf?2b!URJB+JQ,>?Jt1H^>g`.t-eLrd:3hp@](KMmQ.5%;P9[g@kA%q'o9rHZ=j?TS6s7=WY)#)r_gjX$jUgbQ=A1?mqXu8]&D)27IU[<9YW+ZR]*N-Q`RF:'&'`iP2dDi]?W:M)X[bDnCErRGNbEEJ^UA%7e*UX>jQL,T'n9<F+m&7]lXu]&-.:cJ'4A`/eX$1HrjY\;$6@cq,k6ZSTps[e:$[+S#$C,+\q!sItt+JpoZBrEL.LThY;%mQkF)j%_GBL86Z:,LYjX@I-BMjZ&q%L7L%"55(.7M2!+71XX__kMLj;+#Q_@2a,W;$/^ZsP.Mn0s_$-CmFJV:Fa&m^&`4D$1=n0Qsh6'MXf%$Wr2U@;L:2WQJ;l])]D.A-_uiM-ZnWE/XS&'Fa'n_Lf7FXd:c]4Ng5sJV8Y9\CeIQZO1OU+qm(Z<U_?U/-UEI%TAaS9,Cg7Nc.?G%5fr-R!%cLk,qOk4JJT`)*aq@]!XYMZLF8F[]OD2u6=cU]l-OW:e[7\Bk$)<en5)M!TO!ioLd+cOV,7jJcX7f%l#8]Q9Dm$qTT.;>%p/e"np)kOL$(RE=<bs\V*1#VX)pH-RQPRMJ1D;UA)oFT[VTM;G#O'--X(6jDl-b[hE^1`\)/8KD7Y=e^g.5I$DT*IE9m)MVgV;*6%+'Heg!4%9&8L]jR./$%0&5#V@Budr^B"$E46&;SO?%<"M8+NdK`UmuN5>T/(>i'E+`W?>/bmH%(4pk^lqmb?YIj6'O'OXN](9)UR%2$dcE'uj=;*51YCb23C7Gc_K<`_c`7;gtC7LS4;0aCI3@^'Xs0[$)T3^f>1c,5$=gq>7HN5--"*.)_C2RZ<5W$\=Mi9)osM7rG7A%?og&@'UWNYTPE+C^7:>k_ib!LrmDIZc@hj"M[cp!Qk73\kciUTKT<YfNbLG+;=S3$7u_QmYHPjpf^g.4Efpe<>QktW_/df`R,V30%DBUV5?sD*(Pk)XCIV'<gDN6Il^g8:4f8uJ+VE`';gdrZjd)Yeu#A]$tC-2Ju/Oe#rkU7bm6/]8j-aL.R`2WpT]H$uJE5>RU-%R0u%RBLn9Qb]E:R%)0CKJa\'X\qU'bZn4q;:1Z&kjYre\HkO2#Q_ig8pE(\?8hGb/Aoq3*Zm553#II.)'SBu$=gG+Aq]/T!l-*koNc$.%J/+Jg^\DbE0_'L@l&"U39uS;CfAhoY:W;i2JAc&-8k>fIEi^qAMA+X&id#p\j86u_$a,%?E8R#?S41.-a6JebTs0Ze@\Gg@e?Hpe%H3tc)iF'eS!sK_2aQF*8o"GI@kC+sk"D^/iPP3a]q/a3%j2+=%63Ob_YS;'p".')-+02r"a!2dl\&EnK:j@jJ.O@>jG4A<2%OXmL%?%Cq+b/o0;cIRX:.=K\X`5UX#VfZ=)!,Xihi'<hOH5sI5_9f]4nC?@7,2Xu?^)SsH*l@kMfh#7bIcNr51dE^qDW.>+np"iY#(_9P%<g2Po)0dhud$q3dkD<OK7k"0W/oIS@k6SrqX]?i4dLCd%fJp):5?'@X=L&CT02rN7HrnUbLVQ_A#IdJ7@LSL?%7";4@h#Lc8X&)r%&s,:"1([:gn-FP0V2!n`&V%,%iZN-.000*mi!L`%"GAj.!)G3c#8G#`*)jZ^384L0q`mThn]&E$6F.2i>6>ukF90FS83cI)%h'U8%mKL`M\+$0s1$_(oZ@ou<LpOBu(L63l/URVU4!-D,ErQ]<lAbp)H+:u9CtMPLfFgPCJ1*!9X$<:_.e#s<D=U&RG#0kuQ;X$J1.F5]%5pVjD7(FL)jKKr.#Vk-0/3q^gb$HfM-;MJ,WAZC+VL0Dd_Cfb"ZqiT)35<FF"A]]0o%SPjL%X-0qPTC;Pm1#E!eD-?%nQ'Y7T)K:%$1JZR;N^p\r$Pu=mW*:SXs_5b,`T#U_c:,-*9:o\WG9h'7IXD_aT_b=2#tAiaRiKn2Y2$@>hjI*qDspSa&3]iR7t&.X5RAQJm8$P%).$<91*XXul,#\D3;?jh!e*dD&i9l)_63898HRqJ!\b?K%mc1;(Ru3;NLlhQ\L%0oK:g:a.9^+[B]JU>->Ulm.<KZ61Z,hGKLcPF%-#Wh"fPKg!#51o?.NTI6,9Fmhi9l\l4SVKac9Mut*mP1P0=GiOa,rn66D@&=_Y)4b=_\$H(1('C;EPFl<=*V1!7N$2ZTLtcoPHS&%4;F:qB.a8UY]HD4;sbR/5(NE!30jafjTZ?B?tt`(]U&,Baa$E04q0NSc=/H&X0NJ8j?.TLL+9=N@:p'2_,bT"T%o:?2=>EeTS*p9%Dp.8_"O;;22gdoqer/Bgo^i#2NXeS]ahZSpZ9rTsi^D]:kJ)7SiGRfA>Z\o!ECtlYG!/3EiXsGq7]1*D(52/dloIcmS-t*kG_ht^%c3*)TNemimiP":hC:LTL.ZU?WHjGBU-eqMeAJdJi9F=E1$6%sd)c"WY<PUG%LTDqS#Em%?YTnd]c#k=l/%m=_/-JVMK]`/dJ/JKK%01QM:"g7WiV%(ooc;mahAU9Z2%suSUB>01P99VNKSn)4!?&k#,E\go\<Y8jMhl3H)+E?=Y(pM??O@:o7nj`mg<H,8hE!$)mn^SG.%SYI)C5md6>$JuGUVfGrAONm=7&B4$s`>IkJorRh(9Nj`6;i*0[4@a8u3:Y7'G9#!YLC8*,+V)VHk"G<$589D4!1(NbDsY:1"_<_[%$f24%"?Sl7,dp:;U8L[A94^RJJ8\.5gbCK,WW6\A%_PU<N)\LGkLgK".7)F1jTK5.Uok9o__2(pIUG]/3le"@T#>emloi[\KGbau%&o>j]61B(#Zf/XWN!4G<@5T1KRiQKf)G1u,#C1qj!!LD]Kdo@hSjqpZ!$K2c!59B0NuX1co/LW?5EbM6p8gp.3QKMJ^m$>k0gF^!%Mh%SL/bZ5kY50PCU"=Zf+Ta;n$(>tG^;Dr4fKYCQ-4p&X/^<C-!!]'tW9X3u8WI;_gJd?Z'#'@I61&=:T^4Qa^*&2aA$nHq>h%P]%a1U!pU*MX-_r>,2<uE0B.jb^Kc;lqB*/Mqm'RU>kN8c/\&m>E#AEO`r3cNmbKOQ*_:)$/$iqha=0EaPSl!4`b5%)182uFERSHMP0%ife!K,l=rrR>m8s(EQ3Fi&b_uNGjTb5XHJ:AVBjegr6Qr5'1VN]?p\(,OEGCP_bE;(=%sE#dGo4HQG'V*Kma)C]Ps.`TH_b!ccgb%@YtT;0nGjd@`cE5_1LQs5VS:B&FRJtp(f'3aml2N2CVHIo.;?kR%5rJj'3WP,@Akq?+J_/fd"iWJ&=6Y!2LZ`[Ho.0eEU$hY9g-_%Q][dZ71-dL,TGL(^;.Q'3"O-^]L07/=<DMbfa%iN=j@PE^BIm_'aN`LQi`OCb^8Ll,)<s2&W?tqA#6W7i>Yj$@mjW->iG`L^p;g/%8LI1tT&LE&NJEfl0*MFH-SR-W\Ju=P.h)mrR%sM4A4,rIVJXLHCmD5tJSasQIV8^*KAF:kPiWFH=*K:INHcC0iL[JUG8\)A&U8\a%#[FV["5$LXASaNhW?AXe5\#DbZCaSb,%p.*6AL,eB\VT!3Y#AR3N4=V#n4%#V(:2Y_CgJYq`)+5de%I6qS4.I%#`:E%^LWdkG^;=%[9i*_Lgi:XJ&,/N%,KEP]u8kU\?lSg*D0ejJ.P8SZ*[iU8[9=@O2Vr&euXS*1b2LA,#Ys2X3).Q@eR\uC+T/^$1Hf$,V0h"?^t2/%X$ga;0Jb[Z?\2*;^*KXu^4j']GR4T;4G`!W)]&G%[_]Q.h5W7P,esPS>^2Ak8JO@B*QAlXadATL%R6qgclppAFMj+jj:Bm8MdRns%ncrunUB#P)ar`>p^l_;Hfb8`7B-dPJ2$N01(c+]7A^(p<0$ksGCeV0N`8F#u8MPpka46#2#/<RaWt7kh)rHmaLVgmb%VoUZ7jV=W%+:hO7!.i)h^qpak;/"anXb(a7&7l\5UB1]uEk'KW\-hj02%E8g!UKWG4Msf)0:VE'&3"RGiru]I&S:%^k/*=%9VoK#Y,KOP<e93U%Kl-s)#=ua6M*3t[aZ3\sJ\lS#)p=H4[c$/``?_MMqMJ.HCI*%RLi]2.T?1gf!/UBtl%T2Beg9"+^@]SdgT4&i/Krn[Lr@9'(UHe*%SE@oZ'+Aqn;am&4b98DUcH"aEUk8Eb`K&:>OpQ"tpmc=i`Qf^#4^1Ob'D%PRUB)l7r+Z?7*4cRO8d9JbN)e_BJ<]/r0LA?f$BPQU%n3-8X'R1ZWgp!(;.Z"[TdfMfps2O1g_8#O.!UklkiR^o#6=7<7cGho!\@"!tlP*bi$3q#Jhj=N(&0VtDH?k`5qiK%C!<KolpV3]t%27FaL8QHq2ossu]![o#]:_LQG_DpH\m5qgskIb5-%\0`>,Tg"*@8i_:9cfMgTubuITAmQDgH-bs_LP5d5ThML[VROJE5BA/B)&Z6%p]t\ad=@?"SP:HDRkJpe:-f7--!9u7"%d53>[S,_Y0MO'3LW:l)Zmh/SMIo53=[\4%:S42]pkFuJ<9?;#8J'g/TLrTbp!T,2I#2#%fqB=OieV\-Fkm*`Sn7hLXhDo\-/4\qpBC:5U-g&%&6\Gekq9A!6R>"5"XHX=P,_M)Y)$$Y%&UgNQ;E(7D8U2d4ss*,%>+>Uf`#(#%q64S!RZ]\]"_nZ7`lHs:(/Z4YGuceE+t1#W*h=pH'g@5gTRd`-1W0;qW]1+&f*]/c])[H@@pNFk*8JeM3uZ$&W/OTglk3TZF0^\m%HeZ2ml;H=Ib_9MU[L'pJ?j#Gp+^;K&D0MX9Q&k!V>/oWB%7(;dXDFteeJ+4H-+*];n2eaRR;f'?H3XaMM1I%8X;,lJ+$3_d:3jj+%%4f)j35"-kfY1=LSK'<QIR:mY0U%Jrcr%6kaD,A^:kEhKg:4H!;)J@g>ouI+_?_2f%:ggkKu1aJ=Mq.bW^kQ\o90V/?%4A)2H"Fk%L2PII^EJW=#K`$)JGdLC;&;G0od7H9.^2;i3%OVCrMhYST6O4/#9eUeBFoLR`IF_::5)QfSWfUCZsJ#*fVt=;Is'S0=:QM;:.:KW%1ftrc18$qe<RL60b'/LGoPH4<e4>1tdWeTjbj-DC_Bhq]&@NpETHsUh^s3]Wb+-sT'kUYY<ko1[UV:"!;?^^U>21f5;%hK/)0YYn%@Wk7`mK8d3<WP\"5(Rt*^9Xb]I/>:Y/6_.g*d9<X0"foeQ37=N8q*<'_V2@d($+YDk+0=Qq.ecKaifXX]cUp61C8!_%9sOcH#q`>%q:,XULW?ZC.5k3aYg&,mXK!'7CSH:X](pb(O>4e1N#C_?J%04RaAs%m[XiAgk-]dEG/*VV9Ps:fZ0@Lb3Hcl_<:'GI&S&N!Uo)59%/uge[$:`?HiYUn/SH=Tf]]W+-D74WjfPsuZd^8)j#Ys6ZSL05"k49_qD%M<u%`8%Co5As4<<EgHAOfb>3_u*`Wr[I40-\6@QZJq5%EN@uqKN:m'=@3P2k=NQQUKkRcC7Aj6DX)3"s(<LU"FTGiV'6T6._qmXT<pLcHYqA2(fEg*.)$iEF#mp9WsUh$jCnD>TV_:cJI#3^%#Hf$XQg=S!'Q^ocO*R-\bmg]E]2KqQ%5(oeT<G,MFON@Xf*1>!j+#O^>]DUB\<<3>ZW&eLS5kJILSq_aB?<Ln33+`5-G2]E:\B\e%N!9e'PCuN3IIPH)kkNd1$^*.-,;i@OM;F(kE7#8Q64oKD%J-_7G=eAa!]f](j]GZkp\Cchq_&b*ZJD+RH=,!fGCu%3>]a';"Vi<:%5n8FPoM0H@fU7g!a5WhJUDf/m9JV$Q2E*XB)CWtpC)@BJ1R<B`d-%?ig0TM-MX,RII@N2@jkgNPUGLZ9cQF?WR;L2<f-10/'EQsR%[A6]d1>Sl9b3WKDZ+Q(P6+rA54Y@PWkZFtB[-LQNI^dPar(DW.M\diO-#T8@d@)EpXCko,'/rA6A:IT0d/kcG$0`qBfofE6P>YO>%O>?bDcFm(eaY>kX.a/k9`Vf'"KQMqeQl%<J@h6:WGs%;q2Hi((hOj0"hJn=SLVHbfdl&PK>):U@'*e>::"lHBL!<I!$DQank*(?G%.Zt(O8>kEeS;Gjor+Mp[pBj+/<E)&t#kH);<7$%J,e$Po$:IIVT>M,n-V;SO?OsR=Gpg@B2,b7J?eXsP/[IlHR!NG:[IG[9nCmij%Yi7K\H@l9C"[?D%f6O,Bg6caXf<*d;s1K+Sr9e4<9egls\[KBbRKE<dL$WjTeEsi&\,KDjP^8@64LohIKXq9.\9u>P;O'rk^c*'k%;#Vag:laV:"PXFd'q)26Y(T.kaLJ1&"_2]P2r7%d8/S0FD7"LCoR3Y4`pp.u`:T\Pj;J"YN`q@*hotbm_;&D-T;THOAW1X?'O=gD%g).L^ID'-U1dAKt1ZD#J\o10mY_*>UWWosE[=;t1;?Hnk2Y<U<R-.1<\*r<+CE3g5,9l6@E"u&El:^mYYmkpsV$50baNWa1s$HFh%\I#PC@2`NtifhZ++:WLg#mRC9f)SuH&I5G$V]nhfOPi<D]j3;*O^bW+eAM"$'JJL3n;bM!NbhU6JHcDb23G+Da@[JUL?Z/nL@`!5%$TBOdo3DlAk@'"&=o2hh3=%g>+]Q;5);C)=iqqhLp)JM/EO_i\\Z2@)]Qq)m/akn1A:I[KOpMG+O_]dQX=!KGi%]AW?*<)8`^"4,%L?oWD@8S2eM.-][Dmr)CLf=7u9dO)kD!-<drG:pnkO!gPY8VoiUlK;"l<[mJ;&.j2Xp+0B6EC!^W.<)TTh(Q.=$.2AQi%s\:R1'n%[*n8L0\t^bcmL8F/:[_s1j-+.Lg=nq%8u+b2#oM!4.u<`TOPr/K.)N>CHc5+AtFtJS[c&pUJ.kSoop&f5r4.8IQEjSG[gjE2$dh!%Tu%8JU3pLc@kb0EdD6$5J[`6/gm-mk]hHKu!0F=Tkuo&F14QPO^Ae7*W-Rf>T/0I7A1egKKIM]K/8]6g[k3AZg"sKMhqGTSSh9=9%KjVh\XTFpM]Y/V[Khma(VPrDF8Jj3E).fYu*Ho-&&,$\HCD&`-[L1W]-RjGJT&A5oEMLaiNO)pHroJt5oeU"H#\oKrJFdlV:]^h&%2S;Lcfo[='8Tp(k)Fli9iVnoEBo2O5:p$f>.2&cU61rOK-:=$;j_E-0V-Qa)8V[D')?,k7D5Xj!fX5sabLQ6n3WYL>g%2ma.'S$Y%-8F!b?*kF&>uX>(0b'+8&i8>O\<iqN,A/kfI)R"Th$K+ENCt;='7Gq,UX+La7;$\>DG?f$jq\TWb*QTDnWTYM6%eWMW,X4$KJeRI%W)@MKAs-n*?@.e%!Q8-E5ad5pXPgE`<$b3=T'3b+>4->QWUk#%*.#"C8`d*.>?)\;EjaBjL:pjKf"&f:SECe*mB&u\2o_@6Wcs0@%b2\1eTdccC$d%to=YO)=jWX.[<p3iFPs%-IN[B/T3MGQgp9asqk8LeHQ,EdH1`=@!>^,mMd&O;nGLEPA7Ch`#.qL5;$$4Of.Ir^]%<CIRn6q10:\:IY]3Tr0WBmXJ7FYJ^iB/7F7Mc9_3NY5DX:k9f89U,Yd4=04l+TCPHq6"X9Kn^0L$-W7nPQ`&"->'3jROfnu-Y9n!%#Y_c;Kmc/@f!O,JGIX//9t+r\4,':WOT[NQ3F(]q@BDM._h/,q/h4r-'tTHfrN20J\m>f$l3]lf6W+183EL=*O[S#^.LOr2QN\e5%%O2.N_FP\Q1lO9H.5>m<#CG];XtVSB<E5mEQ"d.CDKphY);4k\<e0Mo-as*l^C!aGPfJReYhaKW[;!a+dZK+6%1_S3#2;Rc6GRj2%a=B:A/'^QAZmi-(!gMTQ"/+U:VlLe<BN+S?RE.Hd$^1@lPR1</QZ.qrKFRSF\l.'4_Z[!9.3%/)2^cd]Q-R3+kkmG#F&&MGQ6!'A%5*AZ:a[&.t]\-^A3\Xp&(9a`mZ/e[K7r6R6'99kL-mSNdFc*ri2MI02Z=S>(:gajje3f`$^P-pPOhqWBi7,H8A+Y-H>p6']<`Q&g%6:N#eAj/eWWR/"(\Q1s]b#JH2qKen8T#2*0nEnSHil[g;:f)/V]>A`>rUU[kiB>j97'A-eL_te+<%LpSaS%<e8\A:Q'Y%qGdD9c(%Xh7e!HLMgE,u^=mqI(L\otnj(,[(>'V)3Dc[T4SC];U/>LWKt_B^LOF?7$su3W_RRm\?.+NoTiV&-\BgL(==T^e!Pr+>1Hf)L(Rs%#0Lg:*iar[8FHVA.K`<l?-$/c:=L0c2sD>r3+#:14F&P'eE<^rnsL^]Q>-PDnd6F^hl6FATS`;WC?9%k>An_q(suj!D=b?uMIR=#%s.U(IN*H,f-+CPlo&=,F3T2)S@oDsDe=F^tf%u2TZTL^qeTa%I$`I$k7Dd4s-X>G;44n\1HFd!r3MZmPFWRNs+j1?p<3^/SVTc%o%kfEH#XUWkd6!*42@?g08;uX!VLPS!>=eT1FrpTkZ*(E4^N/LVrXk3'ZbA/3+Rf*2gjZ["bah*,)6'aZ..s[BB/sfho)ePT#Usd%U%BL_H*df5C&4n@e5.;>aTGcn5/rUMi2JE,[&?JV+OI&=/-eTB*$TO;HGk4@'kiA7OV=.>>?]C7IGO$9b/L);Q7_f'd/eJIO(:W%r`%Xer]+\P'X)QZ(#[ru5i-2+Et/E9ISpm^!?5HPp#/\L#Qp+c[R2+%ROp5cY9#0MXTAS4f%LUL;V51MMF,5m'V?_N*0Z9qL;6S!==n%*WK\@&$;5fnu`tsf%XlcC>V5X2E_?1OaZ<`>n*GYZ3LnsY:X,7qu8M/lHamOc5@e$f*T6Qog@tEUX2e,j@8'a2!>37,%D?/hjO3R%-3cJY##b\$-8<k`rV\*00$Hb=Q#]6ACIEX)m&FpZFf&r4r;K?=5dm"$V3f#<(XQ8d<1t/-Ml6icP:d/hINtPYC&?=pIBrpubL*rj%@PnRUHT@$IMCM^D4t55OK+*]&om4cN&scj$8,:T(s%.WdPo\s/P]N7I/I%<4&9GGm9Vm1Padp<t=e5!>L^MK>bgJTT'S-ERCjJ5J%aud]d6>fAEKPUO[GbY-4eMhQ!E!HMNqu-ub&:sPkD01Qo=dF$DU=7F_CiYg]L2;>`HTN\:_j*?*V;<MO*:VWAr1fBc\t4JEaj&<N%p2d]W]"U,h&ONK&rX2Tm7C][mHDLmK_A9h$VB*t3mof_Rj.u=\_g(EFK+:7Ca(J>M"qhc(=JTX@B/Djnh>Z7YT&(K5V:%.#ok"-:%1D+eC:<jRGbM`"15)SW8qeVNAP%u01KjT-lS[:k\LMIaQlU8UTl3CmFW+Oa9dt55"_)Jk5<tZE`f4$e'/q@/aY_d0o@2!9u'W@$g%<r"[E*1%hRA=mJe12GToI5P,d68#K+o".8qfp2mscRL)D@C2LqqL\9<I"<-'X6(k;\-_*4l'Y;ZJ)($l=Y5l!+?E_$.oht0LBhWZ%7Y%Q_Pg!o1KPr/o[8rq?\nF'f&g[ErXGr,H@OZJp015;;?K:ZrAT>fFiYd@B>V\;2ng$%]q"jg.mO82Y$qHQ8eGJ:+<Oc>jqV!&O%!=nTBJ2&qu3UQmXER.)!L_%gjVqV3@pa2eFa(\[./holG#b.V./7Y!_/.Cq5#0<#K\Kt9_J?bNL/lhU!KmdV7A)j-DMZ/\N^/p!'%+BRAeVsSsX/[Tn"ZrXJ@dK&`2Oc60W:5.f9\*](nYSPATA_3rfZYg3j:Gflb@ePJLX>;BR1uJ!`PPXaa)c"[_ZQO?g?"$!O%`GXH%.g/A;?2WKS.ot8(rk4N5_G[fOrLQZsKr5YoLRa0/j6J`G,-T-:_.c@.1fGqLc5$._Zd:5&i`YsMT$p#hC9O1^8SrQoF-:"#kGfQQ%d>m\(#St^dkgo<=F@]7=SKg^`LZtgZ&tuXgj;A70(q$g4Fm_/2RRU,FFGTZd$>aOlH/T)N]-*MC[cTL4eeFsAfFCV[SCkRh8O/Tk%YWY/p9=Z>r2Fm;4?)HnW]ehI.m+3OHbd*S.0Pp%u1"0X^h*#Y+?L8rk3\0$a-7'OA/(W@rX(7OkTc+-_I[uNM+2e-]6Fkm::0l$t%Dc\?*Y00:e,7FE]6:Vql,2&E_\OSYGGSg-=QgMO'8k.Js+IPhQDA3+>M]qj9,&-=9eKe?tp"a7!J<%8kX#$NTSfF\a9^MtYH6(BL%G^Vc7i&6iLMJ>/Tbn-s0;Xq>;I+-PuKZ#9q369:_nhhRugP/f;Zrcf(j1)XUTV@^+gi]MLDOPXe#-leN6"[egl^iIB7&afoaJKB1%Z%9XMG*Sr58(4^l*Hpj5AO`n<W"9"6dV.PY.VRDIb5_i@I'm5?=D2?njs#SZ[$M'S"sncjk(7?Ahp.`SR?2_VZZHHbkY<fW+0D[p%O>tJKluBou0b:])<ga%,V(GaofI2]0*4pKCPl[R!hn2ce\A+(qi8)mVK((=;'o!SB,Z8_T;!9"jcLds([424l1M*KhBSjelVc#<&%%FTK_"uP*U/dWOa<uKs+q)?8\3\f0oE\BafJ?f8!j5:Nr>JUE&W'H.R6h0J>i^"-N[keir5b)/Ur@Z@BBtD.K.&Iju]&1d*5pBme%4)s=udn1`Ner+QQ&=*-okEPQ#.4H:oAXE[1Li%AV3M_=1&b@jrH*\BTog=gfF\i*%NDY^id!LPGkn1^=&SIlWTNt8O,6?"FkS147%F*$"Y(fpcAh7g;Zs!Hs-V#I)s?,Jc28,Bj:*mp:&=HLB(]$<%mD0,K-Ya%8&MtVOb;@C-";?X,.R_KA'"A'33pDE3K!/eR@BG_^A%oZ)%o;&(;K\F@X2Z#Ih0(JWrEr!j(PL/r,&);K%fa[?:?Xs&#JQS"'o#V$-m-KRdqakh4f/q?Fo@lsSro>1j(Qa?oH6d?c]Q5,61%\UJ@/Pm%FGU8P4miElU>[XU&4EACh<N74cs2g[,fMmK2&W[^o\=7AEDArjm$8J6N.T@rn-_3jIGi0_<]]T/]cp^>TnVu(N+JLU(N%ICi@.MX,B^RG0dJXPgHHGMMX1,,;<Q5g/e.bR-a'JGA7c7Uai,"X6&KhB3X(*W0Qn39)?:1X+#Z;K)cp;Lg;`H4TU9?'JKY)Zt09%IM0#j4:*<)in7tSm%)flN+*?gdNSM*ph;?9kb+fQ9EWAeoc&VTeGtXEEUu2,5(Et!8_X=b5:2a`!IiAR*!;3C(Hp^cZ5GtMhTebN%XtY*M[Du6.X5lC2$[B*MEGTG[7)YkhWpah&O*<-_(rrRX#Jc8oo&KH!23#s4JnW\l-cH;,+%u1s#MmCL5Hl"f5GL9*K2=EPM4ZRC%:3I`tQWIcGX<S)L5rh_Z*WUab,dWNj\!i+/'D%O'2-kOuqso'q8m5pUG_:EZC7!-=E:%jEOmIV*G=l"NMUD$1iI`Rhfih`daf;Ru%SUk0q,5&CnEV^AhQo<,.<!/S7!]EV66iaa'`UeZnF&Iq?DerI6n0>i-!RhTRX`5YT*Q#LI^lPEV"B(S?CFe2De*,Mr`q:&*m5`F\%rVXTYWB7OPfZe2sUH:gJFDRU;:2Pr$)gg.*+9JG&7K%JO1QejTimOL4l+BXtH9+(/7CI\fD@[s$SJE-m.9\#9NY!%u2sYNJ#/Ph0%:A6Un'2#:f\"EWt$H^To*_\\?$ie(G%@]i.DT^qo:P6?`?*nkn#J@VgFu*8s.O9MBdq,UP!(!/L8/H$S1LFltX4)S8r]V>-=Q7n[%hc0rESOqhc8d8ucd`S&fV/i`J#=t6L/e;p_"5kC-?l!KBh=jPqI"-:b'2TX0&1s+(gYQ.q&*WC\'1E*8&4B;G&?;flVkR!m\<h]^%=(WUA?GC;Rc0_J09\IF9dX[sWC+?O_5R4c^,4%'i',g>p2-7Ql18EM!HVQ0cbq.?12?gW0J3d-$E95c='9eIR1.=Em%@E"(`Ec0[%U^=$c+E*OtM'gd"T/4E!;s[i%jE;*uALHY`*Muc!TAj/(Kn[&B7W4/Co825<V<,<%5M"]pe)Z#m0:0(pO7LC!EN2Kf*F`Sq*>h<0%[kHdC_+/c$C<L"aWKKs+M+BG"=;Xr25sHRRJg.Pr-#Hjm1I3)F%Z8"7j?qJ-M8sXC.8_j9!st"<ClP$(J:)&VgJ4D4KpBC9b^K"L%n6'B7jf<1Cm!"8\:l9DhCFuMHI:c?9G1tDk/TbI8::*=hlE\)=rY3b1;K7fNXQ`RY[ZX_qUko<GHJZ/sJC/'dWYE0(hB+mA2=r]^%'[g]1POR*C-LYAj_/KqP.dhr(M>^dUF2kaRrALgK/CJ'e,KB0^&Yi8$QUS=[H6SRj*[\4ep+e_L_p-nF0V?<3Xr@:u/Y3Pj!=o(;%@b,GB<9kbh9jQCEG=ErdQN,/KHCA/'T%Z+2:NuCsNj'P^I&j]?d-CUB.eB'a7+?6g'j1si;c3!?Gnnf^j5ShHCLPZVq0plpYB$)9%;%G"n6Cg?Q/TQ<`2a65pKRUG-aL;nTWsXi!go6'fS_U%[i!n%%P%PktUj-r6`!<moVmr3(rh?'d]V-iiVuL:'o?2F/:+KkSiQc?q%]oXTM2>(f#/rq'6M*b6&H>IR\#&`bUR/g>4*"8b(\cDB(Xa;VnDC*TVcH,1N@Um0>*C-g)_aA;HE(4bm[=dAH?lbBio3D[(^DCMm%V6pn)^<\h<Cg3oek"T1&/ig!=WZE$4HLqO'MmOQt?kKu(7RYM^'+d;T;H.,1)PmQ\7Zg(tW-f;Wo1`E,IOYV\d/&l?//d"`eY%iE%>h`NAKO*'^5W""L>_/[Wh'Tm^(-rnRMk($KYFY1QLC.NgPb>c3;/_c$K%k@U:TIk+kLK)_LbqF#p0LA/!>JjakF,7T`74]"4ZYFc%HHJo<9I1X;7ZkemYH3X,l/'Y9AoAEadHPS$VG$MhqkO&\@F,[u;NIH1/+ctjnkm73M6(=hdIX"P/UNg#$)2k7"Rdt7S/&%"hTQKt%@+DPX-<3BTh;[oXG;aA=F3K#o7?=83HT5!a;dD]*BKKh-]?-W8G*eh\@NdVKc'aS=NL)$NU+Po<@'>b=^$%*uUE@3+.SW<9VLR'W%oBW[QH_dWGH#/(LM,[8s-:d=4_:/qr*(^%a9@.01I*/Ag^,7>MMc,le)RBc_j90gg91GK)-f2pm0qPdaj2(Cs;p<:DO(^A<Vp!'.%J9KL_7@X>6Tj]&jWCus=(2:JQPMn[D#f7'9<)#d[IVmR+>F=ZQCI+?!QVVj(l!-O)]?g92Bo!qSJaVBE\A6k!Bc%NK%CQPK['711%P:P5'b66-?osD)Q]L-3`WuhY1`R)GbnT2pM&#S5Ql`JBuAXu^lK0n8jA.Qa,@t7f*p_G&r'Va,36bY`rmD[P`SNG$[%-dAr/[J*]%hF:RB-hJ.rH/JkpH+VuXdbd#!I@8(#PMIIh/:dPs-gjN(pP+<d<$`5='RHA"mq6bqs5YA%qs7L,=dR`blq"Jj4Z2q9[cZ^4%rFHi%%Lo/7dB-Z$Nmnr(s7<N>@6%:)e%UF&H#2e&9.G_"RMJ&!dMgs%N39/#8!s<#cCfPaC'4$'fPEnC5J1Kolq?erm5jo0H4h-=mH*1q%Q=Ej.(tG8fMYHuh`buhGe46"s6JoKr[XBgtTAJ,,$*?b306]a+\S/=^Fk^kFr"IUB5hb%B%q;5/+gZO4)L0j7G.XOGn0-u=3'mmd%qn*qurRY?'%1Wl5=Fq%IqWa()1s?E&^Mg#YAgNN2d0jL.84oAW"C`9pHdX'B'2=CE9aacIU)0c;4+H5U3b"R`'>s8oTV(+LLKlQG%BBk>tp5s-h9'?Tb*GEO6jA[&$Ti69U^B:H/?IJ=7'I5T5\rVW%^l!_,1]M>oB0!cK>uXZp_tMkE(WnLf\N]f#KCNq,JTJVCIU?4u%&4X0-]e:=^^4oUN\f./k<Hcs!UKb%)eb<#Fa,>M2Jr4!79@2O7(>sQ][%-=cd$Q.8-p'kTHB>Wo@DUTa(u5u!Y$P4*WtB-Z4e#!,%N6o5C3OMb5N08l%>cq%2hf4)12AW4TbOU!p(m-^r-iu!BLlu/LW8WPIM&!=?3)&PI?13+V(?=EAXKBN*4akG7M(m7\i^Aq6D-jlE%.0h]4gB]l.[ed.g3:B'p@4pU\[u'@g:NZHLcgjQ'ck!E3J2CSMmMh)!QM_5";bp<1UNU3a+g!_]?<#[r@IB<2qt^lI\NcjMJ.8+b%]ne2\b3]J-2&g^2bkJWrdQBqS2mchZ5KRg[*E@=$N/il]P'_:8f^A'c>.3(Ig<)ObH=i5\M!OTi+ROAXn8+;'Yl+DDJ9>)Qn%1ds%s'N%<3NRVN^31C,58#;ub,K$U&][n0c>&a7n*6i8]KgO:9]BFuZ:ESE?QX=:b`D6^dL/N%_@4okRnNAKrO*&nB!IoC-ZrpPa"B/1%e;EH4Y[cNU>cam2nV]_=&3*a0:@E"=1bK`Rg:(+k<&QH!D7pWF'NH3T4KaV>l>LW*r1K]'Ia2M#K>5ke>>]iTF(D1<o@DOG5eWBN%>8:^?$?&o2\%Zh*]NgukgU,-:95sX^K%CLMCN&qnh?8U#<mD`#@]#HIIaOiChb*s2O>!W;"T:(geafYUN\#]!bhal%*7`q?6r_ID%^L4Kp\DF(c`,dVJUngZT>G4Q7oVed[\4S!FCS"K*@FuK$DF0VLWY!RN_uY?+E]/sP(s%V:(jAA1L#fNX]Obg[.-'DLk[%;diARs\%A7WF3FW858HcLnlE,;tfT7()UHN_VFYVEM0Zd2g%%@,VB>#4VAU7PLBIHLqb"T)cp,,/Y_U9BJGQa8:b?3:FqcG9#kk\-sQIeN>E%.TaefSM=P_F-K[)*"*bQ2[uC3a@)>PlrrGUOQTT,20]ghDe,8q<dF^^2PlG`0@TkPEsD/"o,aGWPKpLuFl([KD,uhT;Hqn@Rc@6i%>K-e;@suCk!?[EIFI\$9JTj<"lV=SRrD#EJC%Z#>1&;nJW<6b'7+pR;bm0mT<k7[;b+>n)q+\L+K&bkR)0Pf2%mQ*W7@+UFH990#%mg$mPPmA#6K\t\8i<$[M^djJ(M5,tY)2j[u/p$qC<81D7cm`ekaC2n/3\A6d<@CPY*rLE-UTq1[KKIJti*g$*C>c"J^\sgg_qLEN%2D@B;j^k<X?K$%TQ[Fisn*kk^ZF%,%"?S^cgVANU*cAf\Gt?5],lfC@PNhVbDr4.A*M#m=91DFM8nQ"K_,=FuDOr-sFN??sJ'\e#%m;7<VUh(#@pUS:PDP\5E_UI8$_FC+iGQE_7OAloX8SNSTQ;2eY!$/1B7=n?dP8;b>!H:$ERd%)B2*.g,V>E<gVHh<\7BTW4e>i-$%UXE(S"7j17/IF6="QJq*>c5-,4I57nLCbL>.d6]@H?St?Z`Qa%ZGK"hSt7Z8"L+j5r(-C2LGePn$bsmDTFVi),5QadoQKIM&bs#N%pN45-*KdTiSH2X+#cq2ARP,>-=`]>/=pDBrb<LH$8E7jTJ/g%c/cc-hN[%$`hMqJQ7!De0p6g8260k7SA&BNje(W9j%>5XkP(o!N%_`_83?0O-t=k!]NohaGgGVlW1l#1LqbIXEn\(nIg(HjL6F3XO>F&YEYY'RFm(/D2b6\uOj$5U,Ha;>94^Zf\F^?^udRaOrjp20J7%27VO7lF%<RPdS5R6/qTY*=bQmJ2Wr%3^Y"3X>40HoH#.6Xp%%>?;5UIk=\).0l^j,/L97/J9Z'tL/Nq5I-WBig0[cL3Kg24Zk7_/%<7ml8R([NkE_l-hSs+`Y:7VY)?,"m8EK*tQg"q`g^K@:r"0_m'Nl,cc7mDM8;^^]n8lXa7lhTZFlCTtDeQ@f[KP!:8(U!!;Ud6D-%%6`8U2&U/-kfRc&62+ZAi8"_qESln?N8d8^4N_hi]rOV]74eiu#]Ok(nU?lXI*l3\*fkW/fh<lS1S9'=G)gsq&k8`(5KW^\)=W`M%Bg4'i;;=T0'LJ8S[jtK)En_T[qc*e/5/3pZfC#`HX'Ui-r$cq/b1ue+86cP4fm<VVaHMSZk<Aij!tXXaMgCt*c)Besc&Y/QC6I8N%hp`G7\ek]>P'G0_=+8SG[J(WdP.j8-E8L#N*:el9StIXC:Nb*(F2"JMO/(0pc\+9<]Np\tJsa'#bs4pLA-Q4X='5##[\5)BZ%c[2%a].WBaHfu(fG_>.DT*sMemRVl(C"QmZam/-Q*J\MX7BVa)6ria4oPpf7(qq!>CqMF+678*AM*F4.pd@dl[C29c!BM'BfBjV?D]l;%XfF#<b5g#F$!5JY.Kelt$Zph7O3>t0N5kFX^^B$$W]16d/J!mA6h4;'FsLmCAs"HP*DTfcG=4,l7R&t'%Z%afe$HQK#tO2qn"D7$%'lsGM9q^ru;6m5ac?Lj@C+P"E^RWSJ_jSc29I^jHL_+3Wm1H3u#ECH06;/ZU,Ne$G\Bfi+JE@';a*ftSHU[e6b(W_s1;%7OY8%>q%_>ief-b4_.8f/3mTAAqW8[<1=hsg+#+=Z3=/<%o@*rf=cN;"K?gGIr`N9"ZsT2rWJ7,R-4S7G0hB0OH:pr7d.MLWt%eP5IZo\u6O%JNH`bQ#k9ZG!0Z23n@s#mC#HRBF?GKXbV5Uf7LqiGa)>#jOLJYVTR<0ijdFAh)r=uB]'W^Y1S#oi8]i_!qVrb0YX[>!:Ut&hV2Y&%nU2+#[LQhg/oPfK>9#HAX7pVqpJE\7',$)Y_&<@Gq-jju7cJC,G.R$e[dm#$K.W-uhEaV-a@$c&;Wa`cef*4DMAnTJ%?FE<l%[S=%>A98I^Ti)*\E`%DSY];eW/EcrBS%asGP%75-5nKS@[Rals3NL%ePXEuMAhj!Xrm)T8OPaUIlttZV=0aF1+mmInqY@je=Y#F"bq`u%>bIsC`O^9\\3?Qm2O/Ve[]a$$hnJ_AK<UOZ`WnK#8I8)O$a'1tV-?caa)I#G1m)-,<9jEe5t"Z32dTR#;"+^@[ZkaVE<_(6n1Fjm%'`<6B!975e&ec07PS"`-!(/bSmLO6b$tG(d`/\$S+kuMnH"$N!i;:B@qkXtS1Qd#Y`AqU-,GqDL3]JY7G6:#+a]SoY$eT./%364G%?[MSrB)I80i%ddLRc?>!ZT2C!3P<r7E9V[@:,Q2L6/iU[r9>p.C=;`)O5:0F01G=4n)guKM:&CeNG>(j5K6bHDK824e)?)@j4'"t%,@ss"kaQgJ8h"+f`6j6UiCd8#^E^75V-8Nkr4r^J=EYaooFM?1LFou2k9ibY@<!5s]j0if)Ts1o;5lRd1c/%Z1eV_L"1&qE4bX@(%8<!uB`+nL9aYaG;1FkA?kjEE+]lCUj:[dnmq_"4*Z>!-Ii?k&,ZP2MP<0?PtU:/bfNg,&($^HKIlg[;6oGGJq#GQO/D.,1f2,VaT%_Bc2Ner4i34gLn/0O7oMb'b>>JIeMpQU1/QW+s1Ua6_+6l&f2<=7Zl'5.5h#o@RZj*AQ*YW?qDY[b>m<E-5Ci)%ZM2bAIKG%a%%[%)/G<XM,AB6G"0>,@`?f,D#E+9CenQ/FJqqRi1?Zfl#!?`k^M-Hq'(>!ASD-tL2*]W<:M\=2)!"-WUDM[Y1UUSm$R/rr,6>#2?g"T%OP2>ZY(+>&d@AQF-q'g7QW1o-Fs.UGa\8Eu>t$_Cb?>+F7KL.Q[EHPh&3;-DVD)Hke@\K!V`@+("i@$I#"+@mcobZ7'5bbOSuT++%"]]Rr1YP4GN<gE"#-2\qcR5<kq4$r$?dmd`,eo_Lr+&([pgsG8;WVI0gh';A2^c&q_r'O6YUX5JW"H]UlC1fiO"5OCBu*pVE1J:+%M3E=tMPi\jQk&<Or6oGlb364Bh+V,V53AH]lDaDa(hZ.Vi5\%6L`Es*7?h5?1+Ve^NVWO"n0ff]3Adh.$8-O7%jIjWBD%a[qCH#J%H5F58;3Y4D8M==+MC'V63MKs#mMP]Wr&G`5oL2d!BHORM+,o+4%aCBS%5t@F)fV,9m:%L/Z)Ut6L4Ju^-=L`De#<*hM">4ec62/Y%*PZ<^iW:00O,FZ=,q;55BIeeqTEKG1i/F7<KgRcc:kP1jHW5ic81!^"mH83(<:!'Pd[\GV6'SCIe-f"3B-XT?0h7LnSc1$UjAjfe%B;U@`5<6JmQe,!Y?2>/:G9)g."r=5N[#b7h+];+'a6lYF1Z$ikYga:/gTG/k_)2THXG0m:3eJ9Z.$6G%$,'!r>SUP_^E*UO,2d)(%M&&FU3)a110A-TnX]=TLJt&'sHps'"`\J$aMZ&3nPd/HjXl^NC4"*A9QB@66KF(!1=\?0IZed[,rJl?<6^*4cTmgUM*r[*Y3C`,5%CL"*@hq[#o$O?9]&<VW7FJQ%%n^AlJZRs39Xr'@7l9j5Xpk"`M^<ZF\C]@_o2i]AXAC>5MYhVimd]pX\cT;3[LWe@j3N#sUNhXGM%=UuhD$rtQbT<sWa!LK-2EO"1@$N]MOiqmcOh*/#+Gh?1oQc%EeCRlo7BCT?^;pHU_d3F7'ED3WW^U#k)m%qa]gih>L#u7iAhC_`>%(iuT]?kdr3=6KdG`4^@u]T&7Gd'M."1d!%'G:gpKSlueDH&PXu1.#Th1`T7._C=n[>fdO@Q-A.k7u.A;0VG2E(m%qRVb7)EET<=2%C*e&uQrTJF^&!cGWX*25$nNl#]0S]^_8G/)JlBZ.FKo.D1`]nO,?<aVXLd@YC+rr[qt2#<m,goDTlL^0?'u"+HLJHpb=n;SS<<St%!lm@&aZ\p>4mTNo4k4R0&d:*3aW..Tm=u:[KtF#MZ\p?E\N\]M%!MlD'/p_]"Kn/F7nBSH%6)#c#ZmmA*(6'-MSl&@_Ys"@m7&2B%P\^FO"daAm0\;-]4%dHV6O3iV%3a?@<&"0Gi[k<r8TCfWBeTjJ96j8P;,c4@4__S8PHT_'MoI_@iNfi3:A7cPb[M0sa87Qq!Z1N5%WWj(%Y^EPIOMD9;C;]EMNdqFa&a73GN!MU<Z)'.gDWb5r9=0aRUQ8Xl7,b'VGco6*MWj)1fBG5^HNjJ:>!;h9WHqWb7163oROah%%NqM\4FVm;U!'"b&MPL5tG^kF/*%nedOiG`bOgOfr1<0"pDrlidU/lW'VB+C?IU3cBI-e5X-$ups<nN@hBaOMnm&\,8jLc'`PQ,$)%ed%:+:&mDFQfSXl\-AXr(P<aQ@t5om$mP"gRZV?PC^;HNc;<hQIUKok;>H$D26=$H2-btcl%@9INR9mO_cJ*'KIL1[$[8NM09h[?%b;`JHbRhIQIY084$EjVT*E=bqBbfcdb:8$!FTXXq$%[r,#2EDm`cfqKq)7:Noh"6%.@r__SGY35%,=BQ?GR=jXiIC:n&&QrTtji/%PR6n6(cDpe"`4_oh.ET$'Ot$];K^pIN@<.pRVWU/.YWI,=3<$e:pG$0&;kQDC(Q-#@6lb)0]OQp2E%?PUeiEt\c(T_hl%^>&#Kuk%"Sm&kbLICP1cutPD-!,Vpktp>,=cKs9iG82QBZ=]or]sA2"N.X.(FuI_-oYh-_+`rm@B;.Ys_<[r?6[:P:qCdV*"-tYe)(]+PAAk%SL\I9$?i=n88bEC[?Vrl)-*5N#.Otpc7$_C!*O?Qg.33#R4Us(=N-^=VqDlW!3>VDcVoX622h(Ae^nUBH'YK.:'8Ra$D[>L;U\b6%&b<0-mHI7-/iQU"RIiZhLR_%=@AX5<j)lWppj;;kQFEE%VBR/M,=j1s`MZ.4BBVbi<13-s!j<>QUXJ(D#k)o&FJlHS!;eFhaa@:9%FdFeLF,q1u$_g1/KGMsWQWo;7[rX^-G<AJ[$J]@L9#OW^12<%eVP_LJ[97]Hh;IWB0:q'_ACcj(H(m"B>A<Rol!,i]4WQI>eC:@R%7LdbcRIKc$?H"E-bTZl%g"miQ5-7cYn7aZ=^b@&b6tPj?O3m-Dl`mhY)s)2P_mkVhnS!K<Va[heK<rZ+s+-%=]:`R7>$\&"]VTNY%^+K=JIEcR#ZJ.QifBZ\anXHCp4(;B;V]ZP7Igdh7I*nl6]7<MuUgR:0IANXL5ba%&o!Pm^T(6K-dsXt9VbIu(Hilej8[23>B7eXp%_DJSu\6(!7gCpjsm$-k*D_!)lQf:^*Qq0`AlGQ'^6'YT?GCSm1!hjsD6AC)Q!86kY0WRt;GGEt3,L;+nSN0;+@71J"b>a;^mEh>_%2,,`?mnDXi7f8P8ij_nb'CAg=JjKmN_WA/`UO9'4rKohdD>]E5o5ddHE07Dd&7T&71]Ua%J.0-?3ot5ViYj[>X5;=u)-l0);;Jk9%X-ir0?nIaBf/F$VH69f"9m;.k;`&WpBNB43$<[E;ohX;HVOms-R',\![=./ae7RTh["beSbqiXIh'&/kSVrKl[s,p<>*%G@Sp;4m%q$].:kqpV6JR1-7$b4JZ8*jf_OC>f3b8=,LS/d![B!p$]qI]s<Fi8B"PCOh_BUVRj]`k%WOjY@8"p@XKa?=bmpDI&0M6hS"m5u><%X8XI4@)"8^@98lT`ss0_1i-QU7fpsg#g,#:_nVA!ciM6X/dj3[T`g*)moRn?iV,(ZQcZ-$ks:)83J^]k$/p:DJ_tJtTj)Fnq$MP(%VYJ=&[9;3<E'tsd3/f[6FlKT7f3B(/31bHk/##KHE]jM[8%;h;-GXh,a6s'X-gc$oF@'Xa^"W0a(mKGg"D[;=32cQ01!.LOX0LW!%k+Q'[3o"=/eH<IM2otbt`r"rDUlta;[Ep9]qf`5Hnmo`Qh0cQpS5COOU^.=ol&14]\fBJ*,i*0rX",OIYS5p!ps05h\jC?l.Cl9i%<(P62o3'%->Ce"(!YS)iDD2E(EE7g%=7*(58`ki?>T0X[U-&,W8@6(>aO@-11GpU\\fK?e2C5Wf1PXXG[B;!O*Xo<kbg[)RPMaZ1%0@Q8$@^Y\>]f+Cl%s,FC#bsbMFukaXq)OCO:Sr.9[?<X_d2SXZ*Ff^V'=_386Sl_m.VaRU\!gnQ]QEU^cn3OJknb?T06PLAfm+PT%a#%$T)ui$Q19D25D`7Q^<lX8eE9etTa0bMA&OY"^?D;A#?h;%V#df6#hBVh_D^HNBOM[dPXnE+ZA9Qg:oH5_-&@LR,,G\p^Y2)FD%D:0/Z1j$dYFU<6f[/-[fY0BPZ;;/H?Qf.ke@])s"M)R5U*EX2sS!V%$U0QUhj$jDMj8!+"]I.])Z6kII*ptrLb\)9QJVSLRWeD[L%^oNnt%]?J#rnqlr6cbsoq[#Xe0'#1j4&73qq.5d@BRV:\)]^2P2`Ec;MO`%LSMX0383_3gJ[[('AdP,?$+(i!@i;Ap+p3__Ub5o]%1Qte]*;h-(I[KX0lqR'eItfDck^q/XYgBYO*N9$0kT&N12&O]ke+E3JQlgL:C,BNqkNN[<g"F"!AL/5U59o*<8I(3dqd<2d\iK?S%1k!GUfT[NXD@ib<ZkAHj=&0dU\rs?,I:.;K2<];:%&(LgRXk<a?%p$43FRb%cXIUJ2_O[r4OW?>YX''e/2#2rIhc.0J,n>:/T[G"%O8h;YD&.$q6kB/5,=W/'>KU#;B#nX].;Ep2OKT`PC<H1_*1FgMT[[AF51(3McFJXECj%]o/3E+9POOL14LI%/UR0$p]o@1XT-FTq%j*`u[i_%:$cJ='sl8KDTBhepY@dqUa2n=`d]u_#jcp%rDZ8qQbn+a]cH8iGTUaelFY"":1\8gf'NEX>n4Ap_,1q@LA-0hT"KUue0%^]XQ3UOj.u=[5_CmDtfcTKAQtcSHcoA2t_O9HDSm?a7X*.PVbrGSKekP%g?;`022R7bDR4ZZBBZ&-GS!r+kpuobft0'h(k9?2Zat%!$A[[cTZTB.Ef9C_*'@b69nVBVAVQSdQ]`ZhHkB`(@?C:PqOgam8[G>3\L?Hq?&O"4.qHKK\a''^>3G!UUA>7&<j=/?/ocFcHp^m%qjfpd8G9U_m[QHl/U]J_U)@6'Wlg[S,:#@6Xs1=s1*D`1ViRqV:6M=HY$i?!8u!n^#dCDlgi*8Zo5'6SCHXk`P(j2;@t"rQ"[1QZ%CBP&XpD=$U#$X'Zl)Y+Bp7_hr7Z'.r<&8&!It,&GKSA*l49<U_A',IR\STrCa^MEp_?NTm_4/W*B0B9&d`WXdB?@1"'SsMUq8RdI%Oku1YXO7c;K-<BWhZd+Ye*^PP9l1J@?X<CIUOdSn6N7N5$'B@8cDs[/k7mmIau)_,c5d[PT_1&_qMi22<O&Q9p2J]GVKpjTZFaV[%NOS3)mA-2g#dLCT2tQq9DuPaFPU#ZbNf/G`meb35RFV[+eXTO/-dU(80$JT#7+PQBGAG_'P0eHXLZ<EWe:UM,%*+Wf(@UZWqlpnS%HN/Y+rKgZW^p%Uri"%T"jXe!mDCMYAhgnA^XTki`6/N8l)rice<rlms'c0nN$$"PFiQkt.OnQY'E%a$cUL74Y#'MW1.p@ES]@O:i%b\,RS8pOD+/2DVE&&g"k)6o+ic`kLI_BP$P;#S+1gs(tRaC$*8:ih_Zbt<K&_LY2$eXSi1WjjH.B.>dsO.=Z-1Ij.Fo5[qmiR.Pj%]>DF/RLZ5g&oUV)@Io%>Y:.P.]k1%."C>FV/ck16kGWS#19ASL7D<CpAP7(.Y'"f'bW7Tbm3tR_*PUnh^:\)>cWG;V%35VR0d"\F%&Al"Ir%N&p,:"6G"-.1Jgg2hIblRd]fltNFL8eYg:L#d#Hn)?S]*T)_I-@F;MVR/K379ghqS4&qJXQ-Zqm990#mW";@6!UK@]#Sr%6@GZgRL\3O-8:JURTAi*)@',?pZCE>-2\Ch*D\F,i)W5m;T8hlA\1'XL#XXr]gDaG3C3_4(1[%X/DM/t^#H(6&Y&YSp.U8W;R[P?%:sqZB.;5SX;?MUV1*u!#KDNh)8p&7S`#XV-*!s4=3G#ZU)tj@:lJ9?V-MDF<qJI!eY7>>GpTr;[rBoSkq=7[5Pa*Ag9Rq1k2K]Pf%Ktrf;j$FFjPEnns0_JsF0%u`&.ia,:!n;>f-['XD;h(DX_I^2K2'Qqb4*TOuLO<jXoNWjA_9I/Oc+GCPOpZ$fr*VWpMTX'C2n`@g%AgjW6;l8*XF-Dn=:"18\XI"sl%!lKTk1%!:qe_lq>$(R>l!W,f=0^>Cq,=7^X0jQ)#(N!bCD\?_<14,Fq[n4[#2A#([L;.9+IhJO%"g#`XfIPT/B4"I;"Y?+AAX[$4ij5AP]:c*m&J%-j(6*uks(thTWZe#>1UW/C-C=V*XP5M+_<`s6;(q^BH.SFGZg('5&"3ORBL\3?%7/8b&LSQ\V)2uEPZ7:f`VP_p!9Krb9*AL7fJ8ap$0fEHD#'*])-.LPt')XjY)7BdI8*U$aPM"ZF4^b!\7rS\^,PR==>)(YGGKJl2%4O$\lN6n+_h1(o[#O;H6pn!a\c62((19]]m?*LVn'nJ.=@)iucL`g)\4Abt8i%N5oScLo_4m+9CYbVlAc+lZ,8kdto77_H1mk@o6%$;CW3>t//&C]r$=J?$=m!JBaHPXgj)"nVs,;;X<a3P<])"-Bt?!aAt+g1go_VF4bY,h?&5on#\^r-UZjR4UM8d"]>@a"Jj?<mB^#%I/jp\$1qsS[K5!hX6K0e)J.Q5^JgV[4/"[jpu//P-QnO495Cb>@R!Yu!_lGY'/CYL`=93h=NI2%@>@Qi%Q6GKKpcbgPG6pe,-@^e%&3)^.f#'\mAht-?B#U+D1'9BOIZDN[JQe+Z(ehL1!OZIl4uH%Jphj.5W9AjZ9EF?h-C`<I.od)dqHSl$/QOW@^n%b:-)[#"o<,\5%E;d&`5b1!p6pZZ[e(l`[KoJ^'i=:`A:#dAHg.!2b"C0o8R9mLB'Vu74#,m%(V_Gs#2K&9Va70L^;=\/=L>i^Gh_'s&9X%T[kX?\g%5+po"d\fK3/:9S#_h3$>S4;@+DI[RbC;K.:VE:UaI9<UaY8m5L`me:/#Xn9E-`*cMY6d8#4+'CD.sb(jdat"o(_!7QK:UDPbhdBl%]M.^Lqqi@MJ<tk[S=X0IC`*!&2hA0]a^U=a9R*k]5cXI@(c5IWYhSO2A'It4^)a@Lfh=/_p<KUFcfB$_$DgZa?aNa^`6NQ3FV]*H%5K?ojBtR'C4r"+8/5<GEGr>cT[Lc,J<ZaBX;2;LEe0-hPES[8$a$d'+8QG^G@gHn@Q_n14'1:.io\tCih0`oD!.,gP%eqDOEHr/u%jI"=Q@XU`NaiIM?jGL%Z8-94AHr8)Ob=K>(DE=0I;4ZlsJQ27UCVk`%Gm0>S3%C`5Hp[b(M;lbtE_sHAG=k/PLcfn=L1gm3l_@$q%<fI5"^$XEq"jL`j>&T^D<#07]?D\.e61euQ`0ndk2&r$SA]m&KhkT/S?:gi,WgULdAeLZ3iMg9FU5IVOWbVI:]+X;!V/8C0h]edX%Cs@*d-(0AlU%)IEA"I4fU]NM8Z5&sc/\$7ec*HJ2FQ:5(W_(coT<3Lnk98!X/Kd&R[`#ZZM&U25NC!YI;4F.ic/8KLHkgpg+L5Zm%T/!^=J"hIi_kAgfg65?*hb_3N9@s==R-qn.Q7V`bPDRYS+Cmi'3nr-kO&SaPCBbkoZ3(At9$;WP0RtfU5[%N>$j1*s!Dg$i*-M5g%25>odE5<?F0k't&<?Z<[Em]9]\lkfoYlpgdrjfeEC<5L@#tImL'fbV:CdVE\9-Ik(\U(G[EpH/fO_jDA<=rf7RJF!oN'moc==+gI%(#i"GLq:3C6Tq540[%a\,Igbb/gH6">m+ge:_dl*aoF(H\m4ST4NO`pc(^0H]uq:&JdU)U4AL7,!"r!&3HmqBN;.]SJn@5k>nsf-%$K::_oV]TuCtu[2[)KUbAK7>oPonL\1J>I]9ch*fKcl0A1'uKag9.:r(Tl6TK`]2dm-7=S^UnOUC1jA17TC6O6%V+R+.m@?.Hjfe%)-d<24=Ojgn@6<6rZtWAa^TJ3\WWq6Bf%\\?9O_;&Q%S7b;l4G)b[AF=,P@Lg#4<R"#W`9*H9*&\ks#T+:-3d@P$!8+M^oh=C(1N%^6&s78_@1)=F'tDB0VGm(6=@_'qu@O'#eLDiX_A;cOte+gkcBRQM_pV!'A+86-XT%A'S,>FaA@ij"/t3'pKaX'm%Ka\"0-.oSila%NFJ6]GK[&f'ENlb7tY8d'p];/]#MPV<Cfp8^_,l\H&>a&1;`hSSm:u._eXj7A[Be4Zs7N]',rp@q*:*,).k[ImI#):+GQY\7/U'I%5@\WIn&oJbokH)W-I5KJ@2uF.W69n"7tT8mgZ^YDR#8#$!RA\'XSFZJ4P,u,EG]WSN7%[WF@g(Pbl'GF=GT5R\YrfSBq;V>:*VXO%Occ,F#RWn7Hn9S%42CVY#TA`dmqr]dk:'K%N`GOint"HU/4G(?Po5lAbQu%'=.':Agn'tS@2[H?qEH(C\!E$^A*m#oqRP3HL[Xj*%^JFGQ,f"l@db(ch'KQ:,1[RA:Z\+jRC_1%hF.-S_)3A-NNa_?A-ke$<&Z&p'h7uFmB3a+S\eBFJ*LJS(IOY+l*eM1gh[Cp0Ec#s(%l2;jkN8+5$K_:esYWp3#-es+;qiFk\%JhhJ.EF`3OqS&F+"#:SKkL9Z[k4iUb'@X,WJ\CW]6:hPacCjVDdk9YKq""dK,_jgqYoG6%LU4AVG7b2HAuJf$LJh7Dh/mlb0AUK412hgGAUC@g0kghk%Ca7>#IS+uK224Q0@M@"*u;&i>n5u%DR0o1&,Cf-EpJWQAS@.IfZDM0%7Wk(;A3S\X_[>OI<_E'>JVVo(7Sr$Qr#").<(/+Z%'j&,1X?A-aD#=uhB.t_%IKKjNO>6YK/UneCY.k&dre,8Ru`A!^UE<;QJ%gn%e""*\'mFVgKYOZ6.Tlu$NCR>r(?s&Q.MjVd>N8Hb/sAlp`gp."o\?T]]FltbV<Tnc_mD)NpPk:m%42]78"q3O0D5HeO?R=hXVFGg%Y0o["9/CR@mbB@m`qW"'&JeCL1@AUK8hTpsBerp\Ycj:<Zr$I&[A@uG:H2t8I6*nQ3!>.(laW&J2]g)bS>!sa]-=:[GQ_i4Ft,m@%m_WHlEWWtNEiA:t36<r\!1.1<1ZZ#!ZN`+5-7q=g+N\PVTl+dZr\/X-6qK9A\W5i.NV28j@LlN?KYMa+,RahQ87B_5S7M8^8oqWI%-YS05KI5r4AWolI8FP&W/Ft>UgDe8g"@;HP8KmPD-Sp!:0_'<LMKe5hSn(j13VO0!GTFb!i+2HjT"E**Yb$gL2$XDbbJG8o6Ma:L%!g^u[A'nmi=ebh=;?L<IecD&]rodahl"n1X:2e[Kp,iZaEI-I#S%cPVq`XT0B%`E'/\*P36G[D1Xr>3B8>-Wk@U\R'^+V:,!QcO-%Gc'F^$U\JhIWUeoUn!PaUGe(tC*^GuSjCqH1u*2-Z-4f:q7amH$usA5H.cPBd>#i:Gm[%j%4+p'C3OA6C$,3'm`3-2WQ!Pbdb(/3%QjsV"5@^dTkgA5@qdj<.qGWo540QeZDAN^dH-XU2VV<:Y1$U#%-*OBs`"9'^oPhuU[*Rcr#X&IIioBoEQ'3obSY6h'OK^q61kI+!%P$rra^thtjm188@_]]5BT5dtAq/<EbEW;BNh:4QUPd_dk[\jc7a>equ&`cUlA#_SO4SkTZkh\WN-IbcEDOd"q'>%[@/f8<5aF"/`%HJu>,BBqL0=MlOA'4%3<oH#+c,*7bITdc.TS2DoNJr6ic7X1<WMNCo=6CcBq]h928!)JXUN57Um`M?f!9rCc$_clBR,[/;rJ3^Cu%VWeH#)sFR3(bq9F@D_M!Z?\V%[hJU*Yqk<"-;6TSaQ"(Kn5ZdJS'q]m'c[gT.Q!^'.!m!'Tg]AeL\a(s6,rdprti81BE<^G<S&'F%WFeCPFVVA5QM"sp87e-4U\BZkC6Qi`17)b[&9OH)9!G%INk=q/$Ss+,b/UR.b\A52O)e,\*agJFUV)Um^cg0E7UQ;e_8kF]$#)01%<j;(uMSEC%d(r-_Ebe^S)lYLgn;TM+O.N;nLd\Xtb5<@T:Xj>Gjb0IjBjQbk6/7[@\Q)7Q<r5Qo2(ab9'rd>WS;5K7HUXI5c^*(0%R%^"%DWJ3\ItJ%9$L5:<4lW%q.4"'#Yr2T?drur::5.#97idZAQHQO0Y`6L0iQN@#"nfbJ*F+EI^V;3le.8S0)T@?W.nfa1<"&om%&RC)Y#df7V<`lEgEa`niC%#Wk6hk;*AFoj*9#fFs/FsC5$L;+;f-A.Z<OG%&QO^CXU2%)m5U&:iP$\[_c5C>=QIoV6gW\qi8_*"2%3m2UG;Ns\t_d./T>7KCBSuCho%Ok(:36=tf)NI>(k]HS*)!C96L!C^kf26J!Z_a(MW2%u2ZJ#mVi-cLmn9G.gL<(Eu1Y0XG))5ZX%B$'Yb!%9-B<)>T/CJmR1EB*s"3FJPl:`_`4f+(XEp*LB"d2Ctk'j\,N*gS]>m@YB;$LHbLkC\k)347pb(<EfFB.<KQW#4C=D57L?%rP;%/*;q_jbb@qo_3'ckGS30+MsBaKWRH#00)E-Ikg9>&A7/XAJa=];(epq$:Ii89Duu)0q'TQj8%@_2J2^J(YC_b%g<#rRP$U2(%\Kd3F1UaMj&^dZjQRMu*#m"!S.o3a[??HVH_h2iJ+S5R]0*lEi^@Fg_Jd[0Wi8mQi7c3j;@lQrrR*=>h28[.H:KL6VmC,7Iju7SQ%Uid7NJP<"ncM@,[8@Tn1H.iBs&eWC5O9qH+pKdIp3SZ-]n,_+pMd)p2,beLc8@RkbU\m6U_3pb8^1sU^RC9$Y\QaB%\>Fd/Dps<`%h'H"n%3M8->oF6K1^;HO2<NU!43g+]NP?Ku\0&,t+qW:G,"[Utp@NR5b60;@Tp^+^[<sHb8u7DtAK(Y5E`)4`,?l=6<eKE\`=YU$%0=c6%jkb\mF56!)p,!e"U'uJ,_=/GDT*a,u/2#I7#a[l&%Fgleqe0NCY5TE5Ic9O`4>g)c@+*[V>k@BfNt4qf[E4ei,7e)-dl!83%,ac'_Q',c",s8>@,r@G%"E`2T.M6d_1CpOaBmQ6FoE^uWkP:>O`=_N14u14gs/hfIJ[$V0<JFrc&a=m8r\P<;GO]kn!9=h8@$D;(%K$-d&C,S>[:GAr]7nhT?#aZ-o0>Wk_X'@#D[4GY#2:f03WX[>5LsH/bWs.-3<A,:o^NfuB;,+,uZgP>o3]8O$'T#aBHN#*%cJCb^%+:B%fkmd7OKVS6e8odCpVY25Y?;+/WTm@?#UHiWY;0rR*(E6%5,aoQ_Za+TDX\fn0Oq+9=qW0:U%E'&TT=:hCrLbrs@u;_m>B)H6%p?0P[)<4^KMD:6hEWjWr*ODb\In6'q]9JOt&O#qpi&$2aZUGs"4Ci'>)hm0odtLdk5tt5!h'%k@XdEoAkP`3(7OhEU000.p+nIiK%?[J<Zc[gL&kcX-qm^u-T-P)gcA%]A*>Wb-+bZA(hG]oS2:tqbG1<c+d^cehT\R=sIN>-"gd)qJ3IJmW?^p('`iiE6549G9nX.?jF%5>Y5?SK\))L..K,KqJYmGQ,#Z]_QQ#GjKXMfH4:'oA4W=$.D/<U"A%jrX["joUmdk:WA0T(Y+m+F!p.@FY*a"e0B@dmGKL=f"H,.%`<iQj"B;1()#(n1m:I;"NiZ$>&qDZ1$t\;R(;_,J6;<MS,^d+t+UpSoQ@?n\W=@bkGW3n0m4k0^9e!m4q'OekW'Z#=Fd54%$QCD8%i#.^?;H4@.Tr6q$q<i\=WT>!`l74)RnFT@D5/dgu5dGTR<]Q_NN]L)K)mF)UD>S+VP"l!+*.$/?bjgl'+-+`Gj?2p1[Li5LCpSH]%3XLMFNe.;-G&CQYe%G5oo.Gk=;rEO?NR/-(XuGtfk_GOG>uq#q0_^hWr0s[hc4"7K;eG]/8Vq'.$JrUJfrEAAGm^X+#3=X\2Lk!c%Ou5&N=&9E'TLgpl_8AH"Mt-C\,Sjp+#`RqpLNbj[PNTi8DN43jQ9#1>enINZB50oo69HGe?q&/*"ge,5?FoY^VNP'&N:CFWj(P`T%?#*Kga9o,jXNIIVYo(7DQ/9BuK^&I+1iiFQY47C>]W'HYX<q\"aJ!/\=oKn_8ot*KoIaDj@A[KKs5C-k(7ZiSQkU'L+\kh:?lnqJ%q#eD%h&K)!%="37hU>)<ar.-mq#7.G?\tb5rliZ*k2@cs&H]\3hNB*I&)[,/+.6=-68d#,L*"Yu%c6CdJnTHW,W)(U?j,W9ha[ks%`Or[:]I7`Dc6]gX#Ci)!$@io<1H;k7WO4FS:<e-6OC/\`lms`sqoU)(h@<N.2aR/77UKfuEBOstVmG[dRB(n@hCc11+a!e;=ED/)%:V/pTC:[>pT_f&+8%ag+nO1mee*P."%6OCEn3;<oNpS:aE]H(*`#6+YPV*#\E^FE#"Xu88d/i1YGZQj-5bb<&hfO@`Jm)EbYeSqU%"CH$dPp86cU'3se6LF=/^gtB[1%G0tR\/H5(Xp,XfVHiB23!)V(2gZ]i9mf<Db7TB.;D0M0HeW!mCT?/ppYZ,LgE\Zmd1h,rZ6!)%l7RU]_K'UO3(b:pF*V"C%L)YA)4G(LAeCP7R3'G6,K+3#-`-eRDCmaP];["@H?:D((2YF5mj277*K*)kk0$Qc?<42&$S<9:JX22l%C3[;#IKE+\B(tKaoU@42.#(,T720c3)T<8IS&]H&$c4LiXD5+\=r'^A,,^?.[=q\FgN^tCjmCb:7s&JI_.\u/=Rdn5>Mc=,N)K.J%d/biY%L!nKWsN(RN"\#KMOIr$m?f*5h9'c5<k1T?;O,OZg\1&[7h6ZL`.Jc7):nQH:3Al8KtuR4L=2Ej$EVV`KgNNuW2,]5ci"l0%Ti@T*2X_5ag*mM$kEYcLiLa,u[OGTY^M5XH>m+&/>o-[+k0oH9cqX[?d^Pn)%SEaV_JekO+s)RJDA!Df:n5]`FC%:T?5Ug44-3)+%=VTP((re..&#7ls2'JUV*<Bq>l#SeZDnJ;*2=%p123BX\m"F\fl!%cqjSbf)=\E^h,Yc]j@OMB/)Qg,?#s#QZ0TR^YC<E\Z=Tqg6%/PcBtV9[/$Y"GkB6I2`dLN42>VdUc<mVt&%UXkuVDltg&o?dSC3N,dKoO,-@8o;R9m4@D6SbS[CS0D5sm3>S8&tP"u\KA36!,b%U%DXo8=Yj3%aU)LNe)(-/*1[4;al+,:!QC.,!eh,'kqq]&j!$Eqc3$<=DpkG,.]t*A&%;_NP:V''?'RaQ7Wb\fdC.s4Q#j^5K5*hpm%2iNnm6UrV\9k;I<o1k]A->4hY4si&Bp57P2X]I154+`r&#,DCA])`+,a0nTa8(UQ1Qfm-*7+l-rGVUO13_Km>Z&b\>&cPp%Ce/k2%YH>J)N2Gg&XK>Zd*@LBFW&m(XaiNS<48is6[0T8TTD_!X]WB,jg;hG=57=/fQarMSG<SS+@A5\B#gP#9JYVqiZR>F+%]#Dl'f4sF%ng?O:]bd^cHVAM04P;n()YA]9Zm&PHrnqX9?TOh1UMooY^7Z^t1CZD)0XWB)4b/AtJMj&c>n4&.c$4ChoGJBCEu:iiqBS^$d+BGt%jgoZeYg"Ekk-Xh%*]?iZc)0rm_,&ZBG;fR7\+V7(]6oMC6ELdeJKF#"YA8o)^S`6s*mH*_d'UdZGIt36.#6:W=d)rK>qKZ+o.NuI%?hGd'FUR3cfg$([*Qo>\Bb!O8s.JBK0PAPg^@8R3+WI>oE.%-lP+-4BC0-Os-.u\8j6jY'3HlNT2Pgr%)J-n!M[k?V?[/$r5ejj^%p&KJ#T<.4[C>Q$*@5ukHl]"j<)5:Si@#Y#;(8W%#@%>HY+),mkea[;-UCdpa'3s!hiaU3uG=Pm$lV&uTSlA>DU1V3*RX2b#nPiP>%9s8GLhSe-G"<P$HmeUKffWOiWm`f,%N(W8HO"Bj!O<gMR.:I&\`D.H,$k//?08\^FM]4!H3Zogo%Norgb=Qh-+ntVS'Tf$'SP/p`%%#PrSjkCgX]GXG/NeEH(#ahb%qLB6(pk,JA$[T@H'fFIs#`WES0][,AB7LkD8Ila@VD,i3Io+QoQ%J$F%mg<pU`Vu2;\',cV[!%I%f"D-#OQW!f9fNANL!N)iX>ijB'fEbcpCGEaMCZq`n\TCjjba:if,YHugO@J$PhH"_(RY7Q\a;L^::HXiaNqE_eU!=qB7@`QU6k75%1qeVrV(._4Wp+Mbr1oM?RACmP4;e#7W25r[D$O8sb1^!_3pH"k+a71F4?A,.>_QfV"N`9T9p3sF%/-uEUS=3-Xa2upInip(bR`?`%j&#h.aG,uB+)Q^B_O.eW%EGJ6$GNJn&&T@2[=e(>%]%m25Z#nec$,0L5u"(D]oXCM^;m0ch)+]:cR+Z=XOTbC^dh('>(.ILOS3Le%_-\Le"#1aYo!#%&"!6`g5bX#iJIgjh7Y"-;e+2N_6e9@dKWgW^rZ9#,`8%X9NOr0-XqO%`*&PNjdJS:XcN[).9:Tj4[onu$e>ApX%G=\T$:ge$g=`l!8fg:&+7s\BTGKd[e?(p)Z1b1E4/e)0(2q51aKN@?@[WJn?eT=5JQ(!N+,#pa39V3(Y3::7QIl6ULqRJZ2Rc(>Y%^BJaa#kWNW>>u8bc5rC[K2!K:dpB:;DLIU8..FsSF;=JS/&eFYSKkiL4"4;%kha2:erRlIb#59p$Kq-CU#2FJ;pf\k_pg<"$9bMW%)I`>U'ojWCJ:<puLK*^ncf^WH26=BU7ErutITVt/l"dQ7h=J<&B7JsY0W\OmA*<)u]`\C_lbh/C,matKWbV8jE]ktoeG!g`5F<s6%HQ1;-WnnBB/=[`'IAcOSC=euP2:ns"k%e"8dh<SBb:'X&h9^e'lW:'V)nW48*=oj&&(4$/;s]k&?S8*ub4=h&W.JE]Ogg7'YH5OQ%<_Cm$P;PagQ0oqs"r,KEM4*3aOPR(T"L$dA6!)>6NP(Q'q=918WFmQ:-C]U[K^)XE$+U9:I#EQB\T=&GTo-Rj]t(#V3*RW`2[S]i%f;r(\+9>K1I`LDmFaA+sGGNE9SGMW>VcFfP]",ob1E@6M$ctM3idDMFIPmN\3\jnMG+DffTU!Rj'YFZ?Y;n"!MPj'B']u>_"Mn(m%)lt0[4]dY3"G+%M2OiJH^=W_)_]toTOCI+X$*(r8XS't8p\Wd#i$14mAl8[Hh_SeqNf.Q@J79U8m2g<+R0EBD=Z'_Z49iI`\^4f$%]qu*YL83=fATh;.)e]\_'Xt8$^5=K[b!fNN-S$q+9i_H7`G9r&-DRHMR.iSU^GKnlGC8gg)Ys\Nl6=_Y6&YHdPIAOTBu?@qV1M#r%/Oi+pGkS_S7X?grg;sh+qZR=O>*spDi)fu_^/#)EQ`8KG.m8m8_&T]_2;knQT6^S0JXmkEqjXF2h#U9alf:*I%CmgZ%]-",UZXsP%h3Xk]*_'a8ZJ&5_.`[k4DO6gtLtYdDBt*rPj&^5sIT".M%e[rJF$4#Ffnn\T:4R^f+4Qi%5V#,0Y6"#k<Lq.8^Pn,=^s7eGgW6KE%44'W*Dst#eL-&mE*<R0p'b5G$]K%/UZOie1.c\d@ejK&&'7jOK2R9g4lqp:7,alp3BC9ObYjIlJ^P`<^S3Do&-H&;s2^4?r>^%4p%h-o1?2F##j@k-#[XmBNT_c-jf=CC3DrZ9D5m96GVU8;CJ<;k;]ZPQ:D`6i.jCF,/3g%C7QmW)W>pUM]QYmq0'!u?g,b-!;Vnnh\J%RYI5PG%rf]?ljmUfL4pP#[>U[_"r8q$pG(d"Tc0hGGquu-rs95.o&3f3[kPK'Bk//]?I1_b>8iVc6"'"s2[rS"R2T<hp/eT[Deq#%k>Bu1>_k%C'G6%bM_:).3i>H_i_H>?Dg4149uY`\YTUX,pM;;!$<'Uj/u.X3,u-r\8fh&JPr3][9ISo/%jOkeA6]42epCDT+s_m`%P<mN#=gA(1lIC&)1u$A>hlD!!]WLajlq1\c/ccbAI>\=U3cP^>R:et-;ab7KiQ-b`D%l\HOOhG60aT"n%gTrh.]d8143]JX<;0e:%*,YcNc:+V_;UaI!cVP\jh8c@Mi72dQ`Ubn.FhE*YF[ht5nTc$`AlpFTL#_KS<JH9W)0.lB>lJg#0qGoUIGS%aZppid9bO;>d+c*b%cXikZjYE5t)riiZ=%TC$!(VKq_L6AEh#9aSb33rG?,"tM'@d82m<0dt)$&C"Jt$GI:=W-ZkTWi_ds#%OGFNOA>,Dna0G?W'Cg@@W%5P6YH-'H9qlR)S#24ndDf;qsn1O\3Fo@oVG0%h3E0)D=>bi0o)=tME19g<u0-A+S-a)5]HG)d=ceKQg:&"^;V!]2-1R*!s;\;>:b%9^Za\QB`apTD0Bj+>#]-HT^T:.N$j"[-_D[/`63n3k=>@jK>*p:\!'Tb,SE_*)BVq9Z0t!2Q[^(K1?Bkr1Lu+SJ:?MK63T.-@]uL%i:8c#GhKFIp`lti>5lY;QPr=rc?@_pH]RPQ5-lGp`Huc$c&R5PoYtNMd%oEb0\pl\G>4Eeho]HG:cF#$Hq,6<@"HjIRN/0"Zo"bn%G?qN]lW'7OKUlN"0A6\?R7Z1:C9I5QgdX6:mPd.rrZ5.D@JeY&f4dQ3i,LmB0Itu"cAmJ6A$3Zt-95S]h^6@n#E12ZgFGeL2m(_]%VIt^iC6C/aSNX/Lm0flkjdeIW98B?+C"_p/f[\^!LQ<L3^^bFGqD>VCV2LB/<=+:S%1^6$90/c<;.=C2Y#e6Elg->Fq&L<#/L:(&%X!`U%c<BfKW3;Ti$+T3H;*V`miQ9s=_YLfV8&77`dbhG>.WXEa1Vqo_>,Zt$<7jDpPR6Hiqk/"^.A2(M[e.o3qs9%I^aR&I-25CA%@"#st^K^Mun#T'uRH!'MP>[\8jF+%35#-U#fXsm52DDgsU"St1>;&"Kb"#:dosV_j=0;Hp=Q"L-2-mOV3Rik1G<,u]%r24n4=MqV%B/CXNj""u*qK*iqC"@g-)nHaabam+]WkF0@Z6bQQ8'2\=j<s,$QA/7NW#g*AR2b%iXg^c?n(nZTUn'=UP.oQ&M=8?SeE9AIUkgMF%%*\K"9AX4eNPck5Bhi66,nV73cdVLP$-Tkom='CmX>'UIN1oja7Uq\oR<LC61\%R+"cb*G(Xtt4/a/_sK'S5qKQBnY6u)/9\)H?t%&k/]*L\fnuJ#B'.OEJJm/&g\Lm(%hL?ro[(*NmiJZ1=YMkpeOW3IBrT-nqR`ZC;K)qa`SU&XJ`tk4s.+lg5"WV^qX`lpdUplMAj^%!$Wb!$cWC-R+SaCXC=.^G!`]Z9$s=l@e%a.Y:$NQ[I*heIf+:^d[5g-T!!?'Ao2H.BP-oih0nTgNjcRiBZ?;8[ms4;IuYM89O-!9%HLG`*dC(l+bATRf%n)#q'NE!'Y$)?I!(ouSTeXrimi$i8+1!;Q.WO*9*E,f!jpXSKo&oGD+^bXc9[&Frnk1esPKhab_?.gd-N#,.%AR+&U.3Q:WA_Cb1c#_GChXkV2%F+P)Ac[]m(<FP"ChF-HDVmI4MdCt'/c&C']m<skFG1Y-Z=hCl+0"#S5fP^lmVeqNi$VY1a.aWB%l+>RiAm)OJo[MXm/:0o!)#d$cGigp&c(H7oot$FuhD9=`/*SM7MINXR#kH2AI%tq44q:J8#&Zr;Kfh69J=3#e!W43U82),j$N0fE%Fa`"J7p\mPq5qe>Bn2+d^DGMF<kEcWgURd@11Y7ARI/:)(%0:Lr7!2ABI,1X-.uAQiR]bh^_<Qs##6CZi>1_aQ!uK6fOWd?B$_a8%cFdF0*]1C(!o\Z2_dTr]Ds6YdZcdj2hs*[uNqa4c`/gI[C([J?(cH4i</]CB@3hUiHp;5QQ,h1U_St0eg?Y1Ma7:YOZCtU=IKZEh%9W$jLncj>mD4\oM,>RC3kN<&ErV4GrL`Lf^P[sLUe,%TtD"-k?[mY<uYI?sIS0cMJ*<j!#qfV&;^Z2t1^,kTM:;,J@@$_dDd5-=#%eQ15%nmq'HQSkO$i\5b"&b>ZPQ7k4j;+N[tIFP)WN=a!NL5$Qni5X?,aPZ#@W<$Ub<lF*4&9Xd/+l3pG(mqXu6pjde\SW;(0T(@I%"uCb$.@G).\10@dq+uZC-jhAlg79U\_5]IEol`lQ[fh9SSH?!R-\?:T^I`^=-+qlIgNETs]&L.XbFP:.`-O'9lNnH@5A)B&a[K,2%<0"pTcdWU)[*Cr%mi&"8>qBiS#fkLrq@ZkQe_A&?mj3?c4"t24ZJCR8WUNh+dGnQPa^i-om=M[;)69WC5s/E3[Qig_+<4a.#C?RU%4:bre*OBkRMrs0-*X.eHN[UJr^N`j3#aUGmf6i\q<BRmu0h9:u!ZF0qi;"l1+%IkKlsi(0H0<q^mk.,X8)AMsQQJF;2X:lBK_*c<%.C3iT.%A2jkc2?K-6JH;2%s)=nH=kBX?]E<6'CPKWF.gAVqq7+?tAY,$!b9V@t@-#c!WJ6gEL$+=dCp.*4ShoBjHqCE@-o<j]RVF%T"]UC#tG,bTXoGrWeCl!4eK:KW(iO47SWoge$c.0#[`<6ZPU\H<Yb\p,f:d6+!e`=f3'e<NP)3[:J:$oqLGVe*Bc5.Q/4NFB%4Fa%_oh$G3LD#E0)&,T??oKdhSR.g^8uqC=VnW`<AV?&F,$u1'PppOf9mQIXGRqLnHL9Zb8P(jFSI_qo9g==[pI*'"S-8X9e+k,SDMPF%4]Urs2P_#W+nII""PL,em&.K1C2IbU0u/,j1`_Ub_&AFRG4b9),Vc&e)Di1SrF@WP.i,Dne_-nEn/s'Vbro^0r/72.OIRi#>`r#M%F05Z'I@J"=/F"fH#]jU>WOX)G*@6u[.iKsDFOmtY7T6>'@3XL2.i6k_9?fFGD=o[JURg)n<S)5_3K/n').YRKP*m@%lZJ1ZMF3M@%!LP\%'O>c"r5Q108geSiJ*mO;VPQDO'4_@`MegH3D0eCE6(2RYqK+09&7I=aC+SCXhl/nj.$D"109/AcE64^=5!?$!,\g>15"7'1%nC,>t@aHs@j(WjoM_&._7bb#)C&J.r?j1c5`9isJ5,/=nWn7_*.Odcs4oD!c5"iHWd=je)V&eqt0[#f3l+'JF'B]]P!Z%@f&]SF=%Xa.a%2,`-l8l>[2bW?KR`I[=*e+;:V(!pT.mhLU_6jd9?G@$]Z@GO9-pkfQSM+Gs#3/^Vch:W9FA$V3Y_G/1IT[`f%M_]!5oA#=W%r1PHM0X,dS"uDL4c#1\f`UJ;eFNka)L0=&hl>o\rIA2V8bSr0o\pCX.\8GR_RL5Chi$.D]3TMbe4,i$c]rABF[Bh;a2+hgSgYnP8%2+'-YrU(DcL>1_m+PIg/NUAW=U`*cVrh`=4B08LR<[]'[6>4K"QnQ+BH0Ntf64HZ1SoG_,XK\[Us.?om0f\H^R[)6KcubWDUI)S]%W[hY!f$-53USO:.DnePI4M7=Po4g#R:jc1"1l`an;O6Cf:2&[<qb@EEc5J]C^29I4MT+`%[[qn220c9e5D#q:PKYEYF*Bg4)13]r%VB9'W_Y?na#[j?E^*:O1S*B*b8S@^jJPrS$^5>J@Ea2.Z2SJ[%i.O0ZgUkZPr;@G:26Z5Q@[Ll9A'\F5"6l'iJbeYu*+lsf"Ud7D%AcF2fG/NH.;0AE%+:Wq;HQ!>XNZtSD@=:41#^BIsg7&<9)VD`@k$!FX1T*7;Z8.5!HBOI=P-$8L'L^?mC-eEHTqD06)aLe0VS21(%qj^9"Du3212*am0nT8h8.g<K^oY^VtXg4j.&#5?aN_5"\.+-2-ELjJr3LYts_52YJ;r`[d%JepbrFnDl7..2gPBqqAodl*HA\Z["%gcI^2`dH1eEasn4cQMcNpN(B8?go[Ls):em[&:I.fU7W?ndM`qEUiB-&c=WTac*Po*`&+hfZ3B]KhU`EhU1ci(8T=R[6e=n5X$#0%e!q@%PT'm!YlJ"UaJ9rt-\R>WVMR.;k0M*[mcB'aOqjAnhnRHt?Ti+t^1caR%ZNt[c/_VOUf]E.T2d_k7p,,0([<043k+!,A_h.S%=E5!&H&+6lJDgM_K:P1E8K/8-pHXEilZ/0)kGd^i[W)S?A^o>3mWX[%LTmKHhTJWr?NSek&4#e=nofb!_t\=d4#L%>,+!;\7rto9%P?oX`M%rMGQ9ZO4Q'5OI>0tF)rd./7pPr'QMsjPaG,*TB+\_XTF.@e;-0t3F);=^EdX?hT-$d.!LH#c>cB<To+YYD1[JlabVbB9F%m.a"[K5_p,L_a/nNcSa\/q6_O;MY^V&>h_Bg9,[Kh,kj>_I=<BYtut"$[50k/i\AcnOG1'7R,5Jhb;Q4QETPlC9A$V0/u!tU)Qh?%mB_8-:p;d$``"n*^0-81;\]>J"l*=[bEJYUG*P-_.7g92R)EqE[!ZH-]ZdT'M#J-^]U_Rch;rqkqeP-c9c$(#nb888>kN,=7&1+I%Y^"cf<SXMVZSFEB/;=qB=@G$96WB!5N?cXIl]L<S46-a4<l02EKV'/=+j^a$&<m/*'FhT"1-Uf\cER7\eu8pPImXon3gTEojhj54%G6c)?/iB/bpse26kUPN:kE;+dgAEi@@JYC@j51<hktouuR.Pee"/+Nk3A<1OR,h*99u@CMaL)l=-^lOp;s5:&'5ebLqU\WH!mD7f%9Cq\TU(S=*\=NLK[o+t]43C"=G:p3)*+@O@mpI;lr#YM&pNL%04GGI(G(aj'b%g@+QU=!L;`g/>jYW-88?Hp*#t=N+p^R%\cit>S%Wt*^3q7c!KkXcNWf*:jdL$khX3t+7$B4L,iHu-O?EF^sMU$Z:J<1$^+ekj\Kdc"_c=lNgcY(TNs,drBF<F)kgnNkqGpN!Uao`LE=%mhe`5Z.dT:)7?O;@kLj0?R\"$;%P1mX2m16(K9/V'l5G"7q&\Q/LK+Ld4%$m8=>+2HGdlAHn`N$d&(p6*dIm'\&/DHB3J:j;TG5;%fbRDkUG)A%lC7OQ7j@gt6OE9_^"4_?B2Jt^SQH(](1TtdZb:JL,p-_Podn#!%T$VMh4LkG?C;1$J$R6@'^d=(d)2o0F;I,PZ!E6L%>jh&N,J>Tl1p<'J#YgZ8!9#hf9mQN&nD-bOR_G]>9Mr`.`i9r9jA)RRZ-lS,I>+IcRmZ?[T4].acX$'tl']CFF:)1@8#e)BBM"'S%`YDqpGoA;u9M&@Y9SiYHBDh7:T8XWiYAI5lHr7@3C6\*<_5n]nknTLs#]J0HbmsOfNDBnn:f!51Q%TQS`*(mtLD'6lPC>5E(2i$G%hk4H>8W2^'[pNa1aS*&bHJYNk_e%FkH)FD:I<(fajppj?FB1&Dio51g=tf:ULNm9Mq%=mKC/K8;)G]bW"Fe(DNcpH_k!'D(W?Cg^%oRJOM.nutiNiL`._ej&D@3n/FHmbVS!:$(@m-f<4%eKHtRTR"\X!1+-Ko'^n@W(>E#>o_Q(3(c-=)\oa9#)M""B`XKYuc`mXDYa,%^OT"1+NT2BeTj-+14E&H6l+&n\9^S8T1l;9Lm[5)!.s6W7nJ9Y<ltp#*@DT"]pHU"*p^PSI2N$eV;M77J+jJ'rS.AAcbKGGTE""+%J,JV^rV#-^Rf6'mj4Aj2s8BEVpV6[oYQ+NeJ,8k_s7hZTnCqm]p>^Z$QbWJr5Q1Its6]--s8D85lq.F-JGK?P)S7c?/a'Tu>_^J,%QPs<ooL^VX't\URPG@1n^B)sg#MWK*ZQkja.1QC)5f92^F9tWYf6aH56>$3J+d2#7-H!L9HulJ*&EYp[pd-^Q\YAh:WHLF@!15iT%Iij`NnYo`ArVre-8^^%g"]>cYkhdR:8AU8%X351#IPAO(c5clX9Bes_?6\ZN;Z>LB.#,%1?m<S2Ibr1XVmLggZ&UQFM`ta:os,LJ%GVL,P>4romQV-!e905FQ_O\@"a%uQVg5;lARgqo^X_8F.bfCNsGc)sZqP%S:TlK!\5r*B_E]C.u(MOC'pfn2<2ArXkSa)qXg81GT%<MNNDaM(oD)QF<Z]8H;5*%99-kE9#%mD^HAT0Gj'p`Fsq^]!!GJ,;J1Nt;9`lTbC>]79UJk(!C)J,-j.rSrD+dpIV)qd4gH]DpuR%s7E5hrNC_Kk<K"2YJ:"a^]*c<r9;rXs7-uNNBdA+YCHBA:Oi>l^]*V-rq`O2s8%6FbQ"W/f-U+]hu3!#s3L`*0E3+19r:P~>%AI9_PrivateDataEnd